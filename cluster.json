{"persistentvolumeclaims":[{"metadata":{"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"PersistentVolumeClaim\",\"metadata\":{\"annotations\":{},\"name\":\"grafana-pvc\",\"namespace\":\"default\"},\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"1Gi\"}}}}\n","pv.kubernetes.io/bind-completed":"yes","pv.kubernetes.io/bound-by-controller":"yes","volume.beta.kubernetes.io/storage-provisioner":"docker.io/hostpath"},"creationTimestamp":"2021-10-21T22:42:51.000Z","finalizers":["kubernetes.io/pvc-protection"],"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pv.kubernetes.io/bind-completed":{},"f:pv.kubernetes.io/bound-by-controller":{},"f:volume.beta.kubernetes.io/storage-provisioner":{}}},"f:spec":{"f:volumeName":{}},"f:status":{"f:accessModes":{},"f:capacity":{".":{},"f:storage":{}},"f:phase":{}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-21T22:42:51.000Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{"f:accessModes":{},"f:resources":{"f:requests":{".":{},"f:storage":{}}},"f:volumeMode":{}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2021-10-21T22:42:51.000Z"}],"name":"grafana-pvc","namespace":"default","resourceVersion":"446465","uid":"36aae660-e20b-4c5c-a339-48019e9553e0"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}},"storageClassName":"hostpath","volumeMode":"Filesystem","volumeName":"pvc-36aae660-e20b-4c5c-a339-48019e9553e0"},"status":{"accessModes":["ReadWriteOnce"],"capacity":{"storage":"1Gi"},"phase":"Bound"}}],"replicationcontrollers":[],"events":[{"metadata":{"name":"prometheus-prometheus-node-exporter-8nzfh.16b153d76a564c10","namespace":"default","uid":"019de21d-c314-4945-982d-f609bec23f73","resourceVersion":"651456","creationTimestamp":"2021-10-25T16:45:24Z","managedFields":[{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2021-10-25T16:45:24Z","fieldsType":"FieldsV1","fieldsV1":{"f:count":{},"f:firstTimestamp":{},"f:involvedObject":{"f:apiVersion":{},"f:fieldPath":{},"f:kind":{},"f:name":{},"f:namespace":{},"f:resourceVersion":{},"f:uid":{}},"f:lastTimestamp":{},"f:message":{},"f:reason":{},"f:source":{"f:component":{},"f:host":{}},"f:type":{}}}]},"eventTime":null,"reason":"BackOff","regarding":{"kind":"Pod","namespace":"default","name":"prometheus-prometheus-node-exporter-8nzfh","uid":"86144d4d-38dc-41ea-b2fc-d1509235c51c","apiVersion":"v1","resourceVersion":"640390","fieldPath":"spec.containers{node-exporter}"},"note":"Back-off restarting failed container","type":"Warning","deprecatedSource":{"component":"kubelet","host":"docker-desktop"},"deprecatedFirstTimestamp":"2021-10-25T16:45:24Z","deprecatedLastTimestamp":"2021-10-25T18:55:16Z","deprecatedCount":639}],"pods":[{"metadata":{"annotations":{"kubectl.kubernetes.io/default-container":"alertmanager"},"creationTimestamp":"2021-10-25T16:45:16.000Z","generateName":"alertmanager-prometheus-kube-prometheus-alertmanager-","labels":{"alertmanager":"prometheus-kube-prometheus-alertmanager","app":"alertmanager","app.kubernetes.io/instance":"prometheus-kube-prometheus-alertmanager","app.kubernetes.io/managed-by":"prometheus-operator","app.kubernetes.io/name":"alertmanager","app.kubernetes.io/version":"0.22.2","controller-revision-hash":"alertmanager-prometheus-kube-prometheus-alertmanager-7d9f5d6b98","statefulset.kubernetes.io/pod-name":"alertmanager-prometheus-kube-prometheus-alertmanager-0"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/default-container":{}},"f:generateName":{},"f:labels":{".":{},"f:alertmanager":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:controller-revision-hash":{},"f:statefulset.kubernetes.io/pod-name":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"922e5475-b429-4efe-87cc-f7054f338d1a\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:spec":{"f:containers":{"k:{\"name\":\"alertmanager\"}":{".":{},"f:args":{},"f:env":{".":{},"k:{\"name\":\"POD_IP\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:fieldRef":{".":{},"f:apiVersion":{},"f:fieldPath":{}}}}},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9093,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}},"k:{\"containerPort\":9094,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}},"k:{\"containerPort\":9094,\"protocol\":\"UDP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}}},"f:readinessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{".":{},"f:requests":{".":{},"f:memory":{}}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/alertmanager\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/etc/alertmanager/certs\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/etc/alertmanager/config\"}":{".":{},"f:mountPath":{},"f:name":{}}}},"k:{\"name\":\"config-reloader\"}":{".":{},"f:args":{},"f:command":{},"f:env":{".":{},"k:{\"name\":\"POD_NAME\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:fieldRef":{".":{},"f:apiVersion":{},"f:fieldPath":{}}}},"k:{\"name\":\"SHARD\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":8080,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}}},"f:resources":{".":{},"f:limits":{".":{},"f:cpu":{},"f:memory":{}},"f:requests":{".":{},"f:cpu":{},"f:memory":{}}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/alertmanager/config\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}}}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:hostname":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsNonRoot":{},"f:runAsUser":{}},"f:serviceAccount":{},"f:serviceAccountName":{},"f:subdomain":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{".":{},"k:{\"name\":\"alertmanager-prometheus-kube-prometheus-alertmanager-db\"}":{".":{},"f:emptyDir":{},"f:name":{}},"k:{\"name\":\"config-volume\"}":{".":{},"f:name":{},"f:secret":{".":{},"f:defaultMode":{},"f:secretName":{}}},"k:{\"name\":\"tls-assets\"}":{".":{},"f:name":{},"f:secret":{".":{},"f:defaultMode":{},"f:secretName":{}}}}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:16.000Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.0.241\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"manager":"kubelet","operation":"Update","time":"2021-10-25T16:45:26.000Z"}],"name":"alertmanager-prometheus-kube-prometheus-alertmanager-0","namespace":"default","ownerReferences":[{"apiVersion":"apps/v1","blockOwnerDeletion":true,"controller":true,"kind":"StatefulSet","name":"alertmanager-prometheus-kube-prometheus-alertmanager","uid":"922e5475-b429-4efe-87cc-f7054f338d1a"}],"resourceVersion":"640661","uid":"654d3759-1128-49d5-9efd-62d7330826f6"},"spec":{"containers":[{"args":["--config.file=/etc/alertmanager/config/alertmanager.yaml","--storage.path=/alertmanager","--data.retention=120h","--cluster.listen-address=","--web.listen-address=:9093","--web.external-url=http://prometheus-kube-prometheus-alertmanager.default:9093","--web.route-prefix=/","--cluster.peer=alertmanager-prometheus-kube-prometheus-alertmanager-0.alertmanager-operated:9094","--cluster.reconnect-timeout=5m"],"env":[{"name":"POD_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.podIP"}}}],"image":"quay.io/prometheus/alertmanager:v0.22.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":10,"httpGet":{"path":"/-/healthy","port":"web","scheme":"HTTP"},"periodSeconds":10,"successThreshold":1,"timeoutSeconds":3},"name":"alertmanager","ports":[{"containerPort":9093,"name":"web","protocol":"TCP"},{"containerPort":9094,"name":"mesh-tcp","protocol":"TCP"},{"containerPort":9094,"name":"mesh-udp","protocol":"UDP"}],"readinessProbe":{"failureThreshold":10,"httpGet":{"path":"/-/ready","port":"web","scheme":"HTTP"},"initialDelaySeconds":3,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":3},"resources":{"requests":{"memory":"200Mi"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/etc/alertmanager/config","name":"config-volume"},{"mountPath":"/etc/alertmanager/certs","name":"tls-assets","readOnly":true},{"mountPath":"/alertmanager","name":"alertmanager-prometheus-kube-prometheus-alertmanager-db"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-tb2x6","readOnly":true}]},{"args":["--listen-address=:8080","--reload-url=http://127.0.0.1:9093/-/reload","--watched-dir=/etc/alertmanager/config"],"command":["/bin/prometheus-config-reloader"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"SHARD","value":"-1"}],"image":"quay.io/prometheus-operator/prometheus-config-reloader:v0.50.0","imagePullPolicy":"IfNotPresent","name":"config-reloader","ports":[{"containerPort":8080,"name":"reloader-web","protocol":"TCP"}],"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"100m","memory":"50Mi"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/etc/alertmanager/config","name":"config-volume","readOnly":true},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-tb2x6","readOnly":true}]}],"dnsPolicy":"ClusterFirst","enableServiceLinks":true,"hostname":"alertmanager-prometheus-kube-prometheus-alertmanager-0","nodeName":"docker-desktop","preemptionPolicy":"PreemptLowerPriority","priority":0,"restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":2000,"runAsGroup":2000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccount":"prometheus-kube-prometheus-alertmanager","serviceAccountName":"prometheus-kube-prometheus-alertmanager","subdomain":"alertmanager-operated","terminationGracePeriodSeconds":120,"tolerations":[{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":300},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":300}],"volumes":[{"name":"config-volume","secret":{"defaultMode":420,"secretName":"alertmanager-prometheus-kube-prometheus-alertmanager-generated"}},{"name":"tls-assets","secret":{"defaultMode":420,"secretName":"alertmanager-prometheus-kube-prometheus-alertmanager-tls-assets"}},{"emptyDir":{},"name":"alertmanager-prometheus-kube-prometheus-alertmanager-db"},{"name":"kube-api-access-tb2x6","projected":{"defaultMode":420,"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"items":[{"key":"ca.crt","path":"ca.crt"}],"name":"kube-root-ca.crt"}},{"downwardAPI":{"items":[{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"},"path":"namespace"}]}}]}}]},"status":{"conditions":[{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:16.000Z","status":"True","type":"Initialized"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:26.000Z","status":"True","type":"Ready"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:26.000Z","status":"True","type":"ContainersReady"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:16.000Z","status":"True","type":"PodScheduled"}],"containerStatuses":[{"containerID":"docker://6b5c5a250eaa8edf510ffd7cf371f606b56bb534efc5ba7998e5a7e96f9c3f13","image":"quay.io/prometheus/alertmanager:v0.22.2","imageID":"docker-pullable://quay.io/prometheus/alertmanager@sha256:624c1a5063c7c80635081a504c3e1b020d89809651978eb5d0b652a394f3022d","lastState":{},"name":"alertmanager","ready":true,"restartCount":0,"started":true,"state":{"running":{"startedAt":"2021-10-25T16:45:19.000Z"}}},{"containerID":"docker://45939d99e789d1ac28990f4a1a4bfb4c277dc137ed882807c2ea4caeb3543525","image":"quay.io/prometheus-operator/prometheus-config-reloader:v0.50.0","imageID":"docker-pullable://quay.io/prometheus-operator/prometheus-config-reloader@sha256:8b42df399f6d8085d9c7377e4f5508c10791d19cd1df00ab41de856741c65d28","lastState":{},"name":"config-reloader","ready":true,"restartCount":0,"started":true,"state":{"running":{"startedAt":"2021-10-25T16:45:19.000Z"}}}],"hostIP":"192.168.65.4","phase":"Running","podIP":"10.1.0.241","podIPs":[{"ip":"10.1.0.241"}],"qosClass":"Burstable","startTime":"2021-10-25T16:45:16.000Z"}},{"metadata":{"annotations":{"checksum/config":"2d804b3331b364dea4f819584648fb6316da81f7238d51f843896a943449380a","checksum/dashboards-json-config":"01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b","checksum/sc-dashboard-provider-config":"70927a62f8753b5f6e5e79def2ec97b005da541acd319124209a88d8e24e40cb","checksum/secret":"1bd09f0f39a7b6da53f204c68b52ca77fcc2ad15e970a18c5c62fac0a48505fa"},"creationTimestamp":"2021-10-25T16:45:14.000Z","generateName":"prometheus-grafana-5b96fb5467-","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"grafana","pod-template-hash":"5b96fb5467"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:checksum/config":{},"f:checksum/dashboards-json-config":{},"f:checksum/sc-dashboard-provider-config":{},"f:checksum/secret":{}},"f:generateName":{},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"056b0067-386d-44d7-8e40-dd8fb463dac3\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:spec":{"f:automountServiceAccountToken":{},"f:containers":{"k:{\"name\":\"grafana\"}":{".":{},"f:env":{".":{},"k:{\"name\":\"GF_PATHS_DATA\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"GF_PATHS_LOGS\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"GF_PATHS_PLUGINS\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"GF_PATHS_PROVISIONING\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"GF_SECURITY_ADMIN_PASSWORD\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"GF_SECURITY_ADMIN_USER\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}}},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}},"k:{\"containerPort\":3000,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}}},"f:readinessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/grafana/grafana.ini\"}":{".":{},"f:mountPath":{},"f:name":{},"f:subPath":{}},"k:{\"mountPath\":\"/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml\"}":{".":{},"f:mountPath":{},"f:name":{},"f:subPath":{}},"k:{\"mountPath\":\"/etc/grafana/provisioning/datasources\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/tmp/dashboards\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/var/lib/grafana\"}":{".":{},"f:mountPath":{},"f:name":{}}}},"k:{\"name\":\"grafana-sc-dashboard\"}":{".":{},"f:env":{".":{},"k:{\"name\":\"FOLDER\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"LABEL\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"METHOD\"}":{".":{},"f:name":{}},"k:{\"name\":\"RESOURCE\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/tmp/dashboards\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:initContainers":{".":{},"k:{\"name\":\"grafana-sc-datasources\"}":{".":{},"f:env":{".":{},"k:{\"name\":\"FOLDER\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"LABEL\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"METHOD\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"RESOURCE\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/grafana/provisioning/datasources\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsUser":{}},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{".":{},"k:{\"name\":\"config\"}":{".":{},"f:configMap":{".":{},"f:defaultMode":{},"f:name":{}},"f:name":{}},"k:{\"name\":\"sc-dashboard-provider\"}":{".":{},"f:configMap":{".":{},"f:defaultMode":{},"f:name":{}},"f:name":{}},"k:{\"name\":\"sc-dashboard-volume\"}":{".":{},"f:emptyDir":{},"f:name":{}},"k:{\"name\":\"sc-datasources-volume\"}":{".":{},"f:emptyDir":{},"f:name":{}},"k:{\"name\":\"storage\"}":{".":{},"f:emptyDir":{},"f:name":{}}}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:initContainerStatuses":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.0.239\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"manager":"kubelet","operation":"Update","time":"2021-10-25T16:45:24.000Z"}],"name":"prometheus-grafana-5b96fb5467-xdplf","namespace":"default","ownerReferences":[{"apiVersion":"apps/v1","blockOwnerDeletion":true,"controller":true,"kind":"ReplicaSet","name":"prometheus-grafana-5b96fb5467","uid":"056b0067-386d-44d7-8e40-dd8fb463dac3"}],"resourceVersion":"640651","uid":"b1f224f3-3cab-4b0e-b517-c011b782cf4b"},"spec":{"automountServiceAccountToken":true,"containers":[{"env":[{"name":"METHOD"},{"name":"LABEL","value":"grafana_dashboard"},{"name":"FOLDER","value":"/tmp/dashboards"},{"name":"RESOURCE","value":"both"}],"image":"quay.io/kiwigrid/k8s-sidecar:1.14.2","imagePullPolicy":"IfNotPresent","name":"grafana-sc-dashboard","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/tmp/dashboards","name":"sc-dashboard-volume"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-jvjm5","readOnly":true}]},{"env":[{"name":"GF_SECURITY_ADMIN_USER","valueFrom":{"secretKeyRef":{"key":"admin-user","name":"prometheus-grafana"}}},{"name":"GF_SECURITY_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"key":"admin-password","name":"prometheus-grafana"}}},{"name":"GF_PATHS_DATA","value":"/var/lib/grafana/"},{"name":"GF_PATHS_LOGS","value":"/var/log/grafana"},{"name":"GF_PATHS_PLUGINS","value":"/var/lib/grafana/plugins"},{"name":"GF_PATHS_PROVISIONING","value":"/etc/grafana/provisioning"}],"image":"grafana/grafana:8.2.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":10,"httpGet":{"path":"/api/health","port":3000,"scheme":"HTTP"},"initialDelaySeconds":60,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":30},"name":"grafana","ports":[{"containerPort":80,"name":"service","protocol":"TCP"},{"containerPort":3000,"name":"grafana","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/api/health","port":3000,"scheme":"HTTP"},"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/etc/grafana/grafana.ini","name":"config","subPath":"grafana.ini"},{"mountPath":"/var/lib/grafana","name":"storage"},{"mountPath":"/tmp/dashboards","name":"sc-dashboard-volume"},{"mountPath":"/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml","name":"sc-dashboard-provider","subPath":"provider.yaml"},{"mountPath":"/etc/grafana/provisioning/datasources","name":"sc-datasources-volume"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-jvjm5","readOnly":true}]}],"dnsPolicy":"ClusterFirst","enableServiceLinks":true,"initContainers":[{"env":[{"name":"METHOD","value":"LIST"},{"name":"LABEL","value":"grafana_datasource"},{"name":"FOLDER","value":"/etc/grafana/provisioning/datasources"},{"name":"RESOURCE","value":"both"}],"image":"quay.io/kiwigrid/k8s-sidecar:1.14.2","imagePullPolicy":"IfNotPresent","name":"grafana-sc-datasources","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/etc/grafana/provisioning/datasources","name":"sc-datasources-volume"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-jvjm5","readOnly":true}]}],"nodeName":"docker-desktop","preemptionPolicy":"PreemptLowerPriority","priority":0,"restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":472,"runAsGroup":472,"runAsUser":472},"serviceAccount":"prometheus-grafana","serviceAccountName":"prometheus-grafana","terminationGracePeriodSeconds":30,"tolerations":[{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":300},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":300}],"volumes":[{"configMap":{"defaultMode":420,"name":"prometheus-grafana"},"name":"config"},{"emptyDir":{},"name":"storage"},{"emptyDir":{},"name":"sc-dashboard-volume"},{"configMap":{"defaultMode":420,"name":"prometheus-grafana-config-dashboards"},"name":"sc-dashboard-provider"},{"emptyDir":{},"name":"sc-datasources-volume"},{"name":"kube-api-access-jvjm5","projected":{"defaultMode":420,"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"items":[{"key":"ca.crt","path":"ca.crt"}],"name":"kube-root-ca.crt"}},{"downwardAPI":{"items":[{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"},"path":"namespace"}]}}]}}]},"status":{"conditions":[{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:18.000Z","status":"True","type":"Initialized"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:24.000Z","status":"True","type":"Ready"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:24.000Z","status":"True","type":"ContainersReady"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:14.000Z","status":"True","type":"PodScheduled"}],"containerStatuses":[{"containerID":"docker://c571fe17e9b3b264105a07ef10a01ae6b67e373e71f704b265f9ad36dc470c76","image":"grafana/grafana:8.2.1","imageID":"docker-pullable://grafana/grafana@sha256:b3ec90dcb532054144a039760a71311b60b17db22b4711541eb72b08d583c52e","lastState":{},"name":"grafana","ready":true,"restartCount":0,"started":true,"state":{"running":{"startedAt":"2021-10-25T16:45:18.000Z"}}},{"containerID":"docker://15e7474adb9b31c66b9155a8e83f1b24b41f8a357e17b6cf3f1f9bcde7477381","image":"quay.io/kiwigrid/k8s-sidecar:1.14.2","imageID":"docker-pullable://quay.io/kiwigrid/k8s-sidecar@sha256:35654389f8a9b7816193a4811cf3ceb6cf309ece8874e84b3d2d8399e618059b","lastState":{},"name":"grafana-sc-dashboard","ready":true,"restartCount":0,"started":true,"state":{"running":{"startedAt":"2021-10-25T16:45:18.000Z"}}}],"hostIP":"192.168.65.4","initContainerStatuses":[{"containerID":"docker://5720ef0b956383e4c3596e28e472fd2216eeeb27d0b7e0b911be422d2aed9038","image":"quay.io/kiwigrid/k8s-sidecar:1.14.2","imageID":"docker-pullable://quay.io/kiwigrid/k8s-sidecar@sha256:35654389f8a9b7816193a4811cf3ceb6cf309ece8874e84b3d2d8399e618059b","lastState":{},"name":"grafana-sc-datasources","ready":true,"restartCount":0,"state":{"terminated":{"containerID":"docker://5720ef0b956383e4c3596e28e472fd2216eeeb27d0b7e0b911be422d2aed9038","exitCode":0,"finishedAt":"2021-10-25T16:45:17.000Z","reason":"Completed","startedAt":"2021-10-25T16:45:16.000Z"}}}],"phase":"Running","podIP":"10.1.0.239","podIPs":[{"ip":"10.1.0.239"}],"qosClass":"BestEffort","startTime":"2021-10-25T16:45:14.000Z"}},{"metadata":{"creationTimestamp":"2021-10-25T16:45:14.000Z","generateName":"prometheus-kube-prometheus-operator-bcdfdbc79-","labels":{"app":"kube-prometheus-stack-operator","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","pod-template-hash":"bcdfdbc79","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:pod-template-hash":{},"f:release":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7f62e24c-64f0-48f5-91fb-b504502d2201\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:spec":{"f:containers":{"k:{\"name\":\"kube-prometheus-stack\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":10250,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{".":{},"f:allowPrivilegeEscalation":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/cert\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}}}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsNonRoot":{},"f:runAsUser":{}},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{".":{},"k:{\"name\":\"tls-secret\"}":{".":{},"f:name":{},"f:secret":{".":{},"f:defaultMode":{},"f:secretName":{}}}}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.0.238\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"manager":"kubelet","operation":"Update","time":"2021-10-25T16:45:17.000Z"}],"name":"prometheus-kube-prometheus-operator-bcdfdbc79-bpr5l","namespace":"default","ownerReferences":[{"apiVersion":"apps/v1","blockOwnerDeletion":true,"controller":true,"kind":"ReplicaSet","name":"prometheus-kube-prometheus-operator-bcdfdbc79","uid":"7f62e24c-64f0-48f5-91fb-b504502d2201"}],"resourceVersion":"640542","uid":"b8ebba9d-8cd8-4198-ac45-ff4e506bb62e"},"spec":{"containers":[{"args":["--kubelet-service=kube-system/prometheus-kube-prometheus-kubelet","--localhost=127.0.0.1","--prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.50.0","--config-reloader-cpu-request=100m","--config-reloader-cpu-limit=100m","--config-reloader-memory-request=50Mi","--config-reloader-memory-limit=50Mi","--thanos-default-base-image=quay.io/thanos/thanos:v0.17.2","--web.enable-tls=true","--web.cert-file=/cert/cert","--web.key-file=/cert/key","--web.listen-address=:10250","--web.tls-min-version=VersionTLS13"],"image":"quay.io/prometheus-operator/prometheus-operator:v0.50.0","imagePullPolicy":"IfNotPresent","name":"kube-prometheus-stack","ports":[{"containerPort":10250,"name":"https","protocol":"TCP"}],"resources":{},"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/cert","name":"tls-secret","readOnly":true},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-25vg5","readOnly":true}]}],"dnsPolicy":"ClusterFirst","enableServiceLinks":true,"nodeName":"docker-desktop","preemptionPolicy":"PreemptLowerPriority","priority":0,"restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":65534,"runAsGroup":65534,"runAsNonRoot":true,"runAsUser":65534},"serviceAccount":"prometheus-kube-prometheus-operator","serviceAccountName":"prometheus-kube-prometheus-operator","terminationGracePeriodSeconds":30,"tolerations":[{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":300},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":300}],"volumes":[{"name":"tls-secret","secret":{"defaultMode":420,"secretName":"prometheus-kube-prometheus-admission"}},{"name":"kube-api-access-25vg5","projected":{"defaultMode":420,"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"items":[{"key":"ca.crt","path":"ca.crt"}],"name":"kube-root-ca.crt"}},{"downwardAPI":{"items":[{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"},"path":"namespace"}]}}]}}]},"status":{"conditions":[{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:14.000Z","status":"True","type":"Initialized"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:16.000Z","status":"True","type":"Ready"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:16.000Z","status":"True","type":"ContainersReady"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:14.000Z","status":"True","type":"PodScheduled"}],"containerStatuses":[{"containerID":"docker://cf8734435bd370bd40effd1d5e44ec2f6b550d16d83745365ffc6c7c90871990","image":"quay.io/prometheus-operator/prometheus-operator:v0.50.0","imageID":"docker-pullable://quay.io/prometheus-operator/prometheus-operator@sha256:ab4f480f2cc65e98f1b4dfb93eb3a41410036359c238fdd60bb3f59deca8d522","lastState":{},"name":"kube-prometheus-stack","ready":true,"restartCount":0,"started":true,"state":{"running":{"startedAt":"2021-10-25T16:45:16.000Z"}}}],"hostIP":"192.168.65.4","phase":"Running","podIP":"10.1.0.238","podIPs":[{"ip":"10.1.0.238"}],"qosClass":"BestEffort","startTime":"2021-10-25T16:45:14.000Z"}},{"metadata":{"creationTimestamp":"2021-10-25T16:45:14.000Z","generateName":"prometheus-kube-state-metrics-58c5cd6ddb-","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"kube-state-metrics","pod-template-hash":"58c5cd6ddb"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"28a70b3b-f156-4d5c-bdc7-5f8188c4766c\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:spec":{"f:containers":{"k:{\"name\":\"kube-state-metrics\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":8080,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:readinessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsUser":{}},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.0.240\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"manager":"kubelet","operation":"Update","time":"2021-10-25T16:45:24.000Z"}],"name":"prometheus-kube-state-metrics-58c5cd6ddb-wzpxn","namespace":"default","ownerReferences":[{"apiVersion":"apps/v1","blockOwnerDeletion":true,"controller":true,"kind":"ReplicaSet","name":"prometheus-kube-state-metrics-58c5cd6ddb","uid":"28a70b3b-f156-4d5c-bdc7-5f8188c4766c"}],"resourceVersion":"640646","uid":"c78a67cc-72f2-4274-a308-1418f8cb658d"},"spec":{"containers":[{"args":["--port=8080","--resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments","--telemetry-port=8081"],"image":"k8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.2.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8080,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"name":"kube-state-metrics","ports":[{"containerPort":8080,"protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-72k5n","readOnly":true}]}],"dnsPolicy":"ClusterFirst","enableServiceLinks":true,"nodeName":"docker-desktop","preemptionPolicy":"PreemptLowerPriority","priority":0,"restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":65534,"runAsGroup":65534,"runAsUser":65534},"serviceAccount":"prometheus-kube-state-metrics","serviceAccountName":"prometheus-kube-state-metrics","terminationGracePeriodSeconds":30,"tolerations":[{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":300},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":300}],"volumes":[{"name":"kube-api-access-72k5n","projected":{"defaultMode":420,"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"items":[{"key":"ca.crt","path":"ca.crt"}],"name":"kube-root-ca.crt"}},{"downwardAPI":{"items":[{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"},"path":"namespace"}]}}]}}]},"status":{"conditions":[{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:14.000Z","status":"True","type":"Initialized"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:24.000Z","status":"True","type":"Ready"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:24.000Z","status":"True","type":"ContainersReady"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:14.000Z","status":"True","type":"PodScheduled"}],"containerStatuses":[{"containerID":"docker://a899a2b2efef820c45ac91d5f3d9f804146844881c52da3630a3c04159ea3b0b","image":"k8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.2.0","imageID":"docker-pullable://k8s.gcr.io/kube-state-metrics/kube-state-metrics@sha256:0ccff0db0a342d264c8f4fe5a0841d727fbb8e6cc0c7e741441771f165262182","lastState":{},"name":"kube-state-metrics","ready":true,"restartCount":0,"started":true,"state":{"running":{"startedAt":"2021-10-25T16:45:16.000Z"}}}],"hostIP":"192.168.65.4","phase":"Running","podIP":"10.1.0.240","podIPs":[{"ip":"10.1.0.240"}],"qosClass":"BestEffort","startTime":"2021-10-25T16:45:14.000Z"}},{"metadata":{"annotations":{"kubectl.kubernetes.io/default-container":"prometheus"},"creationTimestamp":"2021-10-25T16:45:16.000Z","generateName":"prometheus-prometheus-kube-prometheus-prometheus-","labels":{"app":"prometheus","app.kubernetes.io/instance":"prometheus-kube-prometheus-prometheus","app.kubernetes.io/managed-by":"prometheus-operator","app.kubernetes.io/name":"prometheus","app.kubernetes.io/version":"2.28.1","controller-revision-hash":"prometheus-prometheus-kube-prometheus-prometheus-5895cc5f66","operator.prometheus.io/name":"prometheus-kube-prometheus-prometheus","operator.prometheus.io/shard":"0","prometheus":"prometheus-kube-prometheus-prometheus","statefulset.kubernetes.io/pod-name":"prometheus-prometheus-kube-prometheus-prometheus-0"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/default-container":{}},"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:controller-revision-hash":{},"f:operator.prometheus.io/name":{},"f:operator.prometheus.io/shard":{},"f:prometheus":{},"f:statefulset.kubernetes.io/pod-name":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"09f3dc28-cec9-4e29-ac7d-9898b847f7f0\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:spec":{"f:containers":{"k:{\"name\":\"config-reloader\"}":{".":{},"f:args":{},"f:command":{},"f:env":{".":{},"k:{\"name\":\"POD_NAME\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:fieldRef":{".":{},"f:apiVersion":{},"f:fieldPath":{}}}},"k:{\"name\":\"SHARD\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":8080,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}}},"f:resources":{".":{},"f:limits":{".":{},"f:cpu":{},"f:memory":{}},"f:requests":{".":{},"f:cpu":{},"f:memory":{}}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/prometheus/config\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/etc/prometheus/config_out\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0\"}":{".":{},"f:mountPath":{},"f:name":{}}}},"k:{\"name\":\"prometheus\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9090,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}}},"f:readinessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/prometheus/certs\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/etc/prometheus/config_out\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/etc/prometheus/web_config/web-config.yaml\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{},"f:subPath":{}},"k:{\"mountPath\":\"/prometheus\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:hostname":{},"f:initContainers":{".":{},"k:{\"name\":\"init-config-reloader\"}":{".":{},"f:args":{},"f:command":{},"f:env":{".":{},"k:{\"name\":\"POD_NAME\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:fieldRef":{".":{},"f:apiVersion":{},"f:fieldPath":{}}}},"k:{\"name\":\"SHARD\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":8080,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}}},"f:resources":{".":{},"f:limits":{".":{},"f:cpu":{},"f:memory":{}},"f:requests":{".":{},"f:cpu":{},"f:memory":{}}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/prometheus/config\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/etc/prometheus/config_out\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsNonRoot":{},"f:runAsUser":{}},"f:serviceAccount":{},"f:serviceAccountName":{},"f:subdomain":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{".":{},"k:{\"name\":\"config\"}":{".":{},"f:name":{},"f:secret":{".":{},"f:defaultMode":{},"f:secretName":{}}},"k:{\"name\":\"config-out\"}":{".":{},"f:emptyDir":{},"f:name":{}},"k:{\"name\":\"prometheus-prometheus-kube-prometheus-prometheus-db\"}":{".":{},"f:emptyDir":{},"f:name":{}},"k:{\"name\":\"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0\"}":{".":{},"f:configMap":{".":{},"f:defaultMode":{},"f:name":{}},"f:name":{}},"k:{\"name\":\"tls-assets\"}":{".":{},"f:name":{},"f:secret":{".":{},"f:defaultMode":{},"f:secretName":{}}},"k:{\"name\":\"web-config\"}":{".":{},"f:name":{},"f:secret":{".":{},"f:defaultMode":{},"f:secretName":{}}}}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:16.000Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:initContainerStatuses":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.0.242\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"manager":"kubelet","operation":"Update","time":"2021-10-25T16:45:22.000Z"}],"name":"prometheus-prometheus-kube-prometheus-prometheus-0","namespace":"default","ownerReferences":[{"apiVersion":"apps/v1","blockOwnerDeletion":true,"controller":true,"kind":"StatefulSet","name":"prometheus-prometheus-kube-prometheus-prometheus","uid":"09f3dc28-cec9-4e29-ac7d-9898b847f7f0"}],"resourceVersion":"640619","uid":"a66e2bc3-1a13-4574-8899-aabc8975b400"},"spec":{"containers":[{"args":["--web.console.templates=/etc/prometheus/consoles","--web.console.libraries=/etc/prometheus/console_libraries","--config.file=/etc/prometheus/config_out/prometheus.env.yaml","--storage.tsdb.path=/prometheus","--storage.tsdb.retention.time=10d","--web.enable-lifecycle","--web.external-url=http://prometheus-kube-prometheus-prometheus.default:9090","--web.route-prefix=/","--web.config.file=/etc/prometheus/web_config/web-config.yaml"],"image":"quay.io/prometheus/prometheus:v2.28.1","imagePullPolicy":"IfNotPresent","name":"prometheus","ports":[{"containerPort":9090,"name":"web","protocol":"TCP"}],"readinessProbe":{"failureThreshold":120,"httpGet":{"path":"/-/ready","port":"web","scheme":"HTTP"},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":3},"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/etc/prometheus/config_out","name":"config-out","readOnly":true},{"mountPath":"/etc/prometheus/certs","name":"tls-assets","readOnly":true},{"mountPath":"/prometheus","name":"prometheus-prometheus-kube-prometheus-prometheus-db"},{"mountPath":"/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0","name":"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"},{"mountPath":"/etc/prometheus/web_config/web-config.yaml","name":"web-config","readOnly":true,"subPath":"web-config.yaml"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-sxqrm","readOnly":true}]},{"args":["--listen-address=:8080","--reload-url=http://127.0.0.1:9090/-/reload","--config-file=/etc/prometheus/config/prometheus.yaml.gz","--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml","--watched-dir=/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"],"command":["/bin/prometheus-config-reloader"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"SHARD","value":"0"}],"image":"quay.io/prometheus-operator/prometheus-config-reloader:v0.50.0","imagePullPolicy":"IfNotPresent","name":"config-reloader","ports":[{"containerPort":8080,"name":"reloader-web","protocol":"TCP"}],"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"100m","memory":"50Mi"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/etc/prometheus/config","name":"config"},{"mountPath":"/etc/prometheus/config_out","name":"config-out"},{"mountPath":"/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0","name":"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-sxqrm","readOnly":true}]}],"dnsPolicy":"ClusterFirst","enableServiceLinks":true,"hostname":"prometheus-prometheus-kube-prometheus-prometheus-0","initContainers":[{"args":["--watch-interval=0","--listen-address=:8080","--config-file=/etc/prometheus/config/prometheus.yaml.gz","--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml","--watched-dir=/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"],"command":["/bin/prometheus-config-reloader"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"SHARD","value":"0"}],"image":"quay.io/prometheus-operator/prometheus-config-reloader:v0.50.0","imagePullPolicy":"IfNotPresent","name":"init-config-reloader","ports":[{"containerPort":8080,"name":"reloader-web","protocol":"TCP"}],"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"100m","memory":"50Mi"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/etc/prometheus/config","name":"config"},{"mountPath":"/etc/prometheus/config_out","name":"config-out"},{"mountPath":"/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0","name":"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"},{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","name":"kube-api-access-sxqrm","readOnly":true}]}],"nodeName":"docker-desktop","preemptionPolicy":"PreemptLowerPriority","priority":0,"restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":2000,"runAsGroup":2000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccount":"prometheus-kube-prometheus-prometheus","serviceAccountName":"prometheus-kube-prometheus-prometheus","subdomain":"prometheus-operated","terminationGracePeriodSeconds":600,"tolerations":[{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":300},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":300}],"volumes":[{"name":"config","secret":{"defaultMode":420,"secretName":"prometheus-prometheus-kube-prometheus-prometheus"}},{"name":"tls-assets","secret":{"defaultMode":420,"secretName":"prometheus-prometheus-kube-prometheus-prometheus-tls-assets"}},{"emptyDir":{},"name":"config-out"},{"configMap":{"defaultMode":420,"name":"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"},"name":"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"},{"name":"web-config","secret":{"defaultMode":420,"secretName":"prometheus-prometheus-kube-prometheus-prometheus-web-config"}},{"emptyDir":{},"name":"prometheus-prometheus-kube-prometheus-prometheus-db"},{"name":"kube-api-access-sxqrm","projected":{"defaultMode":420,"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"items":[{"key":"ca.crt","path":"ca.crt"}],"name":"kube-root-ca.crt"}},{"downwardAPI":{"items":[{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"},"path":"namespace"}]}}]}}]},"status":{"conditions":[{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:20.000Z","status":"True","type":"Initialized"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:21.000Z","status":"True","type":"Ready"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:21.000Z","status":"True","type":"ContainersReady"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:16.000Z","status":"True","type":"PodScheduled"}],"containerStatuses":[{"containerID":"docker://7e8d05cdf467e17b1c8d78a6d2d14039fd8afbf695f28317deb73640e3d4aec3","image":"quay.io/prometheus-operator/prometheus-config-reloader:v0.50.0","imageID":"docker-pullable://quay.io/prometheus-operator/prometheus-config-reloader@sha256:8b42df399f6d8085d9c7377e4f5508c10791d19cd1df00ab41de856741c65d28","lastState":{},"name":"config-reloader","ready":true,"restartCount":0,"started":true,"state":{"running":{"startedAt":"2021-10-25T16:45:20.000Z"}}},{"containerID":"docker://b27a2f42529e744ab23e7d6adf3ac1a742707e328218e8510fb9d8ea1661feaa","image":"quay.io/prometheus/prometheus:v2.28.1","imageID":"docker-pullable://quay.io/prometheus/prometheus@sha256:5c030438c1e4c86bdc7428f24ee1ad18476eefdfa8a7f76a8ccc9b74f1970d81","lastState":{},"name":"prometheus","ready":true,"restartCount":0,"started":true,"state":{"running":{"startedAt":"2021-10-25T16:45:20.000Z"}}}],"hostIP":"192.168.65.4","initContainerStatuses":[{"containerID":"docker://efcd2ad907fd9860369dd0d93253dede08e5c22d3f602e820ad107955e823509","image":"quay.io/prometheus-operator/prometheus-config-reloader:v0.50.0","imageID":"docker-pullable://quay.io/prometheus-operator/prometheus-config-reloader@sha256:8b42df399f6d8085d9c7377e4f5508c10791d19cd1df00ab41de856741c65d28","lastState":{},"name":"init-config-reloader","ready":true,"restartCount":0,"state":{"terminated":{"containerID":"docker://efcd2ad907fd9860369dd0d93253dede08e5c22d3f602e820ad107955e823509","exitCode":0,"finishedAt":"2021-10-25T16:45:19.000Z","reason":"Completed","startedAt":"2021-10-25T16:45:19.000Z"}}}],"phase":"Running","podIP":"10.1.0.242","podIPs":[{"ip":"10.1.0.242"}],"qosClass":"Burstable","startTime":"2021-10-25T16:45:16.000Z"}},{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/safe-to-evict":"true"},"creationTimestamp":"2021-10-25T16:45:14.000Z","generateName":"prometheus-prometheus-node-exporter-","labels":{"app":"prometheus-node-exporter","chart":"prometheus-node-exporter-2.0.4","controller-revision-hash":"5d5b9cc867","heritage":"Helm","jobLabel":"node-exporter","pod-template-generation":"1","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cluster-autoscaler.kubernetes.io/safe-to-evict":{}},"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:chart":{},"f:controller-revision-hash":{},"f:heritage":{},"f:jobLabel":{},"f:pod-template-generation":{},"f:release":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c9db7057-2149-439a-b029-94ad90ad5a57\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{".":{},"f:nodeSelectorTerms":{}}}},"f:automountServiceAccountToken":{},"f:containers":{"k:{\"name\":\"node-exporter\"}":{".":{},"f:args":{},"f:env":{".":{},"k:{\"name\":\"HOST_IP\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9100,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:hostPort":{},"f:name":{},"f:protocol":{}}},"f:readinessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/host/proc\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/host/root\"}":{".":{},"f:mountPath":{},"f:mountPropagation":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/host/sys\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}}}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:hostNetwork":{},"f:hostPID":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsNonRoot":{},"f:runAsUser":{}},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{},"f:volumes":{".":{},"k:{\"name\":\"proc\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"root\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"sys\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}}}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.65.4\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"manager":"kubelet","operation":"Update","time":"2021-10-25T16:45:16.000Z"}],"name":"prometheus-prometheus-node-exporter-8nzfh","namespace":"default","ownerReferences":[{"apiVersion":"apps/v1","blockOwnerDeletion":true,"controller":true,"kind":"DaemonSet","name":"prometheus-prometheus-node-exporter","uid":"c9db7057-2149-439a-b029-94ad90ad5a57"}],"resourceVersion":"651783","uid":"86144d4d-38dc-41ea-b2fc-d1509235c51c"},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["docker-desktop"]}]}]}}},"automountServiceAccountToken":false,"containers":[{"args":["--path.procfs=/host/proc","--path.sysfs=/host/sys","--path.rootfs=/host/root","--web.listen-address=$(HOST_IP):9100","--collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)","--collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$"],"env":[{"name":"HOST_IP","value":"0.0.0.0"}],"image":"quay.io/prometheus/node-exporter:v1.2.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/","port":9100,"scheme":"HTTP"},"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"node-exporter","ports":[{"containerPort":9100,"hostPort":9100,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/","port":9100,"scheme":"HTTP"},"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/host/proc","name":"proc","readOnly":true},{"mountPath":"/host/sys","name":"sys","readOnly":true},{"mountPath":"/host/root","mountPropagation":"HostToContainer","name":"root","readOnly":true}]}],"dnsPolicy":"ClusterFirst","enableServiceLinks":true,"hostNetwork":true,"hostPID":true,"nodeName":"docker-desktop","preemptionPolicy":"PreemptLowerPriority","priority":0,"restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":65534,"runAsGroup":65534,"runAsNonRoot":true,"runAsUser":65534},"serviceAccount":"prometheus-prometheus-node-exporter","serviceAccountName":"prometheus-prometheus-node-exporter","terminationGracePeriodSeconds":30,"tolerations":[{"effect":"NoSchedule","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists"},{"effect":"NoSchedule","key":"node.kubernetes.io/disk-pressure","operator":"Exists"},{"effect":"NoSchedule","key":"node.kubernetes.io/memory-pressure","operator":"Exists"},{"effect":"NoSchedule","key":"node.kubernetes.io/pid-pressure","operator":"Exists"},{"effect":"NoSchedule","key":"node.kubernetes.io/unschedulable","operator":"Exists"},{"effect":"NoSchedule","key":"node.kubernetes.io/network-unavailable","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/proc","type":""},"name":"proc"},{"hostPath":{"path":"/sys","type":""},"name":"sys"},{"hostPath":{"path":"/","type":""},"name":"root"}]},"status":{"conditions":[{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:14.000Z","status":"True","type":"Initialized"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:14.000Z","message":"containers with unready status: [node-exporter]","reason":"ContainersNotReady","status":"False","type":"Ready"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:14.000Z","message":"containers with unready status: [node-exporter]","reason":"ContainersNotReady","status":"False","type":"ContainersReady"},{"lastProbeTime":null,"lastTransitionTime":"2021-10-25T16:45:14.000Z","status":"True","type":"PodScheduled"}],"containerStatuses":[{"containerID":"docker://e85708943901478806e23eb63fa917ada419ebf64b14f2bcdb82edaa1d7681b5","image":"quay.io/prometheus/node-exporter:v1.2.2","imageID":"docker-pullable://quay.io/prometheus/node-exporter@sha256:a990408ed288669bbad5b5b374fe1584e54825cde4a911c1a3d6301a907a030c","lastState":{"terminated":{"containerID":"docker://e85708943901478806e23eb63fa917ada419ebf64b14f2bcdb82edaa1d7681b5","exitCode":128,"finishedAt":"2021-10-25T18:58:56.000Z","message":"path / is mounted on / but it is not a shared or slave mount","reason":"ContainerCannotRun","startedAt":"2021-10-25T18:58:56.000Z"}},"name":"node-exporter","ready":false,"restartCount":31,"started":false,"state":{"waiting":{"message":"back-off 5m0s restarting failed container=node-exporter pod=prometheus-prometheus-node-exporter-8nzfh_default(86144d4d-38dc-41ea-b2fc-d1509235c51c)","reason":"CrashLoopBackOff"}}}],"hostIP":"192.168.65.4","phase":"Running","podIP":"192.168.65.4","podIPs":[{"ip":"192.168.65.4"}],"qosClass":"BestEffort","startTime":"2021-10-25T16:45:14.000Z"}}],"limitranges":[],"resourcequotas":[],"secrets":[{"data":{"alertmanager.yaml":"Z2xvYmFsOgogIHJlc29sdmVfdGltZW91dDogNW0KcmVjZWl2ZXJzOgotIG5hbWU6ICJudWxsIgpyb3V0ZToKICBncm91cF9ieToKICAtIGpvYgogIGdyb3VwX2ludGVydmFsOiA1bQogIGdyb3VwX3dhaXQ6IDMwcwogIHJlY2VpdmVyOiAibnVsbCIKICByZXBlYXRfaW50ZXJ2YWw6IDEyaAogIHJvdXRlczoKICAtIG1hdGNoOgogICAgICBhbGVydG5hbWU6IFdhdGNoZG9nCiAgICByZWNlaXZlcjogIm51bGwiCnRlbXBsYXRlczoKLSAvZXRjL2FsZXJ0bWFuYWdlci9jb25maWcvKi50bXBs"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-alertmanager","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:alertmanager.yaml":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:type":{}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"alertmanager-prometheus-kube-prometheus-alertmanager","namespace":"default","resourceVersion":"640275","uid":"ce73c94d-f35a-431d-9d7b-30044918e17b"},"type":"Opaque"},{"data":{"alertmanager.yaml":"Z2xvYmFsOgogIHJlc29sdmVfdGltZW91dDogNW0Kcm91dGU6CiAgcmVjZWl2ZXI6ICJudWxsIgogIGdyb3VwX2J5OgogIC0gam9iCiAgcm91dGVzOgogIC0gcmVjZWl2ZXI6ICJudWxsIgogICAgbWF0Y2g6CiAgICAgIGFsZXJ0bmFtZTogV2F0Y2hkb2cKICBncm91cF93YWl0OiAzMHMKICBncm91cF9pbnRlcnZhbDogNW0KICByZXBlYXRfaW50ZXJ2YWw6IDEyaApyZWNlaXZlcnM6Ci0gbmFtZTogIm51bGwiCnRlbXBsYXRlczoKLSAvZXRjL2FsZXJ0bWFuYWdlci9jb25maWcvKi50bXBsCg=="},"metadata":{"creationTimestamp":"2021-10-25T16:45:16.000Z","labels":{"managed-by":"prometheus-operator"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:alertmanager.yaml":{}},"f:metadata":{"f:labels":{".":{},"f:managed-by":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b1da6691-468b-44db-88c2-3fc3f3d582e1\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:type":{}},"manager":"operator","operation":"Update","time":"2021-10-25T16:45:16.000Z"}],"name":"alertmanager-prometheus-kube-prometheus-alertmanager-generated","namespace":"default","ownerReferences":[{"apiVersion":"monitoring.coreos.com/v1","blockOwnerDeletion":true,"controller":true,"kind":"Alertmanager","name":"prometheus-kube-prometheus-alertmanager","uid":"b1da6691-468b-44db-88c2-3fc3f3d582e1"}],"resourceVersion":"640451","uid":"69512ba4-2cbc-4b18-af1c-e96f4b8cf8ec"},"type":"Opaque"},{"metadata":{"creationTimestamp":"2021-10-25T16:45:16.000Z","labels":{"managed-by":"prometheus-operator"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:labels":{".":{},"f:managed-by":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b1da6691-468b-44db-88c2-3fc3f3d582e1\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:type":{}},"manager":"operator","operation":"Update","time":"2021-10-25T16:45:16.000Z"}],"name":"alertmanager-prometheus-kube-prometheus-alertmanager-tls-assets","namespace":"default","ownerReferences":[{"apiVersion":"monitoring.coreos.com/v1","blockOwnerDeletion":true,"controller":true,"kind":"Alertmanager","name":"prometheus-kube-prometheus-alertmanager","uid":"b1da6691-468b-44db-88c2-3fc3f3d582e1"}],"resourceVersion":"640453","uid":"362c7ddd-1033-48dd-b22e-9dc26fd71953"},"type":"Opaque"},{"data":{"ca.crt":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1UQXhOREl4TkRBMU0xb1hEVE14TVRBeE1qSXhOREExTTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnlMCkN5RERwQnU0KzJmbEhWMVBEc2xhZEJGTkVKdCtQRmpFejI3S3VIWWROY20vL256OVp2ODFuYmpibWlZUEMyRXMKMzJKS1ZCRU0xMW5hK2FLc24rcHNtMXhLcXd1dnl3Z25NNmJlSG5EVG5MSlFVczdvUDhYVVBvdGwyeWg0V3pVdwpnMm5hUkd4RkVhRlFuN2N1aXlRSUVmL0VOOHFXUmt6TzdFbVZhNiszdkVVVVBaWlBUSXNhT2NlNmhiQ0hzUit6CkEydms4SGxTYkx0cUJ6U1l1aERHbzlobXN0cTN3ckNGcGRkLys1dWNhdlJVN2hRZkwySGN0TlRZWUFHSk01dFYKVlowVlFlU0t6TWVTUlhXQ1JOMFpIRUk3L1FTU0RFUDZQcXNGcVA0M3gvMThJM0JMN0ZzcExyaStWdWViQXFjbwpXQVkwcHhPeGpYbTFiNW5EWDVrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDNk9VelFIak9RYmkyUGJNWVV5WWQvdDdrbUJNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBMkw2TUEydEZaUW9Ib0d5dmVzaGwyZ0JXSWpPWVlYVHUxNFByTWUvckFhdEcyVmxocQpJUUV2Wlpjd0I4cVpCcXVOYk1QakQyRlZHZTRXdzFHcEo2dXRVWFprdnhtdkdhdVlTdjJLODE3M2lGRmJrZUNvCmduRk0rcGRsdkxhTU1UZ2dPL2xiY1hFbWpjMVJyNlJ0WWxCa0JKNWlrM0FqOXJVMHZ4Nm5ob1dTeHVaMENuNjEKblRCTVBnN0tFbHZoUzdIbjV2bGtnejJjK0tUajVxRTFRdGFSeG8zcG9JMEtSZHdkWTlHWmZJVVRaMUQyNW94KworMWRZYVF2UDdyUzJ0cFo2TC9mK2k0ZnJQZ0RnSzZ3ODB2b25CQzNBUlNOVUxyMWtZL3l0UERaNDc4MC84dHVICmw0SkJPVzFhZmpVQjNhdGFHSWpUN3FOVGZmN29rK25zUFRkYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==","namespace":"ZGVmYXVsdA==","token":"ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklubzBMWHBTV0ZGM04xQjZaazFwVjA1TVNGUTJTbEpOYkc1MlpYbHlZWGRyWWpGM2EwUm1RbXd6WXpBaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbVJsWm1GMWJIUXRkRzlyWlc0dFpIbzFkbVFpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1dVlXMWxJam9pWkdWbVlYVnNkQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJamd5WXpCaVpEVTFMV0UwTVRZdE5HRXdNUzFpWmpaa0xUSmxNREJsTXpobVlUWm1OeUlzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwa1pXWmhkV3gwT21SbFptRjFiSFFpZlEua3ByTEZPUDR2Zk5DOGpGZG5JMlNjcGxya1lUVm9INS1Sc01IT1luVnVhSE5ZV0tJOVItd3FOQXFOY0sxLV9WNlMzNk9ncEdZbHJLS2F4VENtMFpqWEpoRFdabXpRR21UYUpCc2hxRGNxLXVyUGdSN0pqbUZNVF9RYjl2bVdIcjcwb0tkV2xKWk9pY2JqMWRwWmt6cjBaMGJoTnN5TTVzR1N1R1pyd3ZPSDZPMFduVWdfZnVLMnp0ellqb05OYzBnci16NzA4Qkg0X04yMUVzYmxHZ2JNVXNWSzA5QTZyc283R29HV1hZaU95VlBSYnJKWF93Wk9JMXpaNnI5OVhLLXJrMzg5WUpONHFaY0VxV2g2MFJDM2lNUy00MFBjbXk4N2JGLWR4eHQwLVZveVNrUXptQmQxWUFfZ2J5MkVoX0xleDUzZ013R3dqX09PZmNxYS1WekN3"},"metadata":{"annotations":{"kubernetes.io/service-account.name":"default","kubernetes.io/service-account.uid":"82c0bd55-a416-4a01-bf6d-2e00e38fa6f7"},"creationTimestamp":"2021-10-14T21:42:03.000Z","managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:ca.crt":{},"f:namespace":{},"f:token":{}},"f:metadata":{"f:annotations":{".":{},"f:kubernetes.io/service-account.name":{},"f:kubernetes.io/service-account.uid":{}}},"f:type":{}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-14T21:42:03.000Z"}],"name":"default-token-dz5vd","namespace":"default","resourceVersion":"380","uid":"09202940-43a6-4819-9cd4-1be77d2c1ba2"},"type":"kubernetes.io/service-account-token"},{"data":{"ca":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkRENDQVJ1Z0F3SUJBZ0lRUi93VlpPN1drcWQxMERMV2dBU2tvakFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1J1YVd3eE1DQVhEVEl4TVRBeU1ESXlNVEl3TjFvWUR6SXhNakV3T1RJMk1qSXhNakEzV2pBUApNUTB3Q3dZRFZRUUtFd1J1YVd3eE1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUFKd2FndjZNCllFdG9jOERNckdaQ1Ixa2d0R2dvVlVWYUVEbWRNY3dPVys4eFVZK2NQZmt0QmdkVEg1eUIxeUJMTGMzTDRNMWEKZ3lhdWhzdFBZeFNGR0tOWE1GVXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRgpCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkZDQm1CNkJZR0NsZnVqMzJ3ZnlpNFJsCnVjSEJNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJRmJiQnNRUVV0SEdzc1JSQkl2WC9nRFB4cGlleUJldWlMSEkKR3JHUHdRUzhBaUFKMVBMWUlubjdBcWVmdXp0aWl2ZXpxbDVhNkNFN1pIdHdHZmNKQ0hTekxRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=","cert":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ1RENDQVYyZ0F3SUJBZ0lSQUpWeUJoUk10enYvaTJlMUFYMlVZc2N3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FYm1sc01UQWdGdzB5TVRFd01qQXlNakV5TURkYUdBOHlNVEl4TURreU5qSXlNVEl3TjFvdwpEekVOTUFzR0ExVUVDaE1FYm1sc01qQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJPU2duWkoxCjUxN01GSy91K0EyM0hXL3h6bjFKdExEbXhJOWxzZTRQWkQzMlJ5cHBpQ0RlMFNvWG0yaHc3dm82Ny9YanlDc0wKeGUxZ05yR3pwQjhNQmQramdaY3dnWlF3RGdZRFZSMFBBUUgvQkFRREFnV2dNQk1HQTFVZEpRUU1NQW9HQ0NzRwpBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3WHdZRFZSMFJCRmd3Vm9JamNISnZiUzFyZFdKbExYQnliMjFsCmRHaGxkWE10YzNSaFkyc3RiM0JsY21GMGIzS0NMM0J5YjIwdGEzVmlaUzF3Y205dFpYUm9aWFZ6TFhOMFlXTnIKTFc5d1pYSmhkRzl5TG1SbFptRjFiSFF1YzNaak1Bb0dDQ3FHU000OUJBTUNBMGtBTUVZQ0lRRHBYQVczVTZ3UApGNzM1WDU1ME9LSWFDRFBHNVVOY21hWUo3YW5yejVWM2VBSWhBS2s2aXhOVHdpNkVtRG5vbTVNcGtYZnhlN2JsCnN2eGExQnVzNGd3TFRkRXoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=","key":"LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUpWdGl6M2RFM05pWWF1amdoOUd1M0pPaHZFN0ViQ2xnUlVxWWdKcUpsV2pvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFNUtDZGtuWG5Yc3dVcis3NERiY2RiL0hPZlVtMHNPYkVqMld4N2c5a1BmWkhLbW1JSU43UgpLaGViYUhEdStqcnY5ZVBJS3d2RjdXQTJzYk9rSHd3RjN3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="},"metadata":{"creationTimestamp":"2021-10-20T22:17:07.000Z","managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:ca":{},"f:cert":{},"f:key":{}},"f:type":{}},"manager":"kube-webhook-certgen","operation":"Update","time":"2021-10-20T22:17:07.000Z"}],"name":"prom-kube-prometheus-stack-admission","namespace":"default","resourceVersion":"356643","uid":"b55d580d-87d9-4b15-8005-3ef96ed89f44"},"type":"Opaque"},{"data":{"admin-password":"cHJvbS1vcGVyYXRvcg==","admin-user":"YWRtaW4=","ldap-toml":""},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"8.2.1","helm.sh/chart":"grafana-6.17.2"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:admin-password":{},"f:admin-user":{},"f:ldap-toml":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:helm.sh/chart":{}}},"f:type":{}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-grafana","namespace":"default","resourceVersion":"640274","uid":"791ec49b-f2a7-4768-84d0-9f3b7e7f57ab"},"type":"Opaque"},{"data":{"ca.crt":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1UQXhOREl4TkRBMU0xb1hEVE14TVRBeE1qSXhOREExTTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnlMCkN5RERwQnU0KzJmbEhWMVBEc2xhZEJGTkVKdCtQRmpFejI3S3VIWWROY20vL256OVp2ODFuYmpibWlZUEMyRXMKMzJKS1ZCRU0xMW5hK2FLc24rcHNtMXhLcXd1dnl3Z25NNmJlSG5EVG5MSlFVczdvUDhYVVBvdGwyeWg0V3pVdwpnMm5hUkd4RkVhRlFuN2N1aXlRSUVmL0VOOHFXUmt6TzdFbVZhNiszdkVVVVBaWlBUSXNhT2NlNmhiQ0hzUit6CkEydms4SGxTYkx0cUJ6U1l1aERHbzlobXN0cTN3ckNGcGRkLys1dWNhdlJVN2hRZkwySGN0TlRZWUFHSk01dFYKVlowVlFlU0t6TWVTUlhXQ1JOMFpIRUk3L1FTU0RFUDZQcXNGcVA0M3gvMThJM0JMN0ZzcExyaStWdWViQXFjbwpXQVkwcHhPeGpYbTFiNW5EWDVrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDNk9VelFIak9RYmkyUGJNWVV5WWQvdDdrbUJNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBMkw2TUEydEZaUW9Ib0d5dmVzaGwyZ0JXSWpPWVlYVHUxNFByTWUvckFhdEcyVmxocQpJUUV2Wlpjd0I4cVpCcXVOYk1QakQyRlZHZTRXdzFHcEo2dXRVWFprdnhtdkdhdVlTdjJLODE3M2lGRmJrZUNvCmduRk0rcGRsdkxhTU1UZ2dPL2xiY1hFbWpjMVJyNlJ0WWxCa0JKNWlrM0FqOXJVMHZ4Nm5ob1dTeHVaMENuNjEKblRCTVBnN0tFbHZoUzdIbjV2bGtnejJjK0tUajVxRTFRdGFSeG8zcG9JMEtSZHdkWTlHWmZJVVRaMUQyNW94KworMWRZYVF2UDdyUzJ0cFo2TC9mK2k0ZnJQZ0RnSzZ3ODB2b25CQzNBUlNOVUxyMWtZL3l0UERaNDc4MC84dHVICmw0SkJPVzFhZmpVQjNhdGFHSWpUN3FOVGZmN29rK25zUFRkYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==","namespace":"ZGVmYXVsdA==","token":"ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklubzBMWHBTV0ZGM04xQjZaazFwVjA1TVNGUTJTbEpOYkc1MlpYbHlZWGRyWWpGM2EwUm1RbXd6WXpBaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbkJ5YjIxbGRHaGxkWE10WjNKaFptRnVZUzEwWlhOMExYUnZhMlZ1TFRseGVuQnlJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbkJ5YjIxbGRHaGxkWE10WjNKaFptRnVZUzEwWlhOMElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVkV2xrSWpvaU5qUTVPVFJqTkdVdE9EQXdOQzAwTURrMUxXSTFNMll0TTJSbE16STBZV00zWTJVMElpd2ljM1ZpSWpvaWMzbHpkR1Z0T25ObGNuWnBZMlZoWTJOdmRXNTBPbVJsWm1GMWJIUTZjSEp2YldWMGFHVjFjeTFuY21GbVlXNWhMWFJsYzNRaWZRLk1KR1hkejZjSjItVDhVcFV3NFVCSS1KbVRTX0FsaXNXQVJKRnp0N0libUNMQjIzVFZTdUZmOG5rMkdjVldkREpuWUdQRlR1NG94TnpEQWhqNFd5UmFpdnFmcFZnVmNLWEJmRzJUSmZsZzVfak9yMlZuZmp4bHJfcUszUEpuMXh3Z3J5dTVOaURXM19tMjUxdmZHWXhFa3BnTHBNMHBRcHp5dzdHeDRSVUNtYlB0Q2dJMGdSU29pWk1KMGRVWENSczFsa2ZWd2VXSHlkZWdaaE9hRzJWRzJ6ZFhleXhaWjFYQ3FiUDB4RVBDeXlFUDk5N2lwTC1TTHRJTXV1VUx1N1RvbnRCZTdfRlFKcFBRS2hSVWlFMVZIUlh5cUZiOUtHbzlSaVZmT1JjZlctREs0OEM4STZ6cnVsWjJqR2VsRjJ1ZEJ5YXJzSDlRbW1KZnhBX25hTHJLQQ=="},"metadata":{"annotations":{"kubernetes.io/service-account.name":"prometheus-grafana-test","kubernetes.io/service-account.uid":"64994c4e-8004-4095-b53f-3de324ac7ce4"},"creationTimestamp":"2021-10-25T16:45:14.000Z","managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:ca.crt":{},"f:namespace":{},"f:token":{}},"f:metadata":{"f:annotations":{".":{},"f:kubernetes.io/service-account.name":{},"f:kubernetes.io/service-account.uid":{}}},"f:type":{}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-grafana-test-token-9qzpr","namespace":"default","resourceVersion":"640279","uid":"28647d00-edc4-4962-bf05-0e22b13e8639"},"type":"kubernetes.io/service-account-token"},{"data":{"ca.crt":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1UQXhOREl4TkRBMU0xb1hEVE14TVRBeE1qSXhOREExTTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnlMCkN5RERwQnU0KzJmbEhWMVBEc2xhZEJGTkVKdCtQRmpFejI3S3VIWWROY20vL256OVp2ODFuYmpibWlZUEMyRXMKMzJKS1ZCRU0xMW5hK2FLc24rcHNtMXhLcXd1dnl3Z25NNmJlSG5EVG5MSlFVczdvUDhYVVBvdGwyeWg0V3pVdwpnMm5hUkd4RkVhRlFuN2N1aXlRSUVmL0VOOHFXUmt6TzdFbVZhNiszdkVVVVBaWlBUSXNhT2NlNmhiQ0hzUit6CkEydms4SGxTYkx0cUJ6U1l1aERHbzlobXN0cTN3ckNGcGRkLys1dWNhdlJVN2hRZkwySGN0TlRZWUFHSk01dFYKVlowVlFlU0t6TWVTUlhXQ1JOMFpIRUk3L1FTU0RFUDZQcXNGcVA0M3gvMThJM0JMN0ZzcExyaStWdWViQXFjbwpXQVkwcHhPeGpYbTFiNW5EWDVrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDNk9VelFIak9RYmkyUGJNWVV5WWQvdDdrbUJNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBMkw2TUEydEZaUW9Ib0d5dmVzaGwyZ0JXSWpPWVlYVHUxNFByTWUvckFhdEcyVmxocQpJUUV2Wlpjd0I4cVpCcXVOYk1QakQyRlZHZTRXdzFHcEo2dXRVWFprdnhtdkdhdVlTdjJLODE3M2lGRmJrZUNvCmduRk0rcGRsdkxhTU1UZ2dPL2xiY1hFbWpjMVJyNlJ0WWxCa0JKNWlrM0FqOXJVMHZ4Nm5ob1dTeHVaMENuNjEKblRCTVBnN0tFbHZoUzdIbjV2bGtnejJjK0tUajVxRTFRdGFSeG8zcG9JMEtSZHdkWTlHWmZJVVRaMUQyNW94KworMWRZYVF2UDdyUzJ0cFo2TC9mK2k0ZnJQZ0RnSzZ3ODB2b25CQzNBUlNOVUxyMWtZL3l0UERaNDc4MC84dHVICmw0SkJPVzFhZmpVQjNhdGFHSWpUN3FOVGZmN29rK25zUFRkYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==","namespace":"ZGVmYXVsdA==","token":"ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklubzBMWHBTV0ZGM04xQjZaazFwVjA1TVNGUTJTbEpOYkc1MlpYbHlZWGRyWWpGM2EwUm1RbXd6WXpBaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbkJ5YjIxbGRHaGxkWE10WjNKaFptRnVZUzEwYjJ0bGJpMTZOelJqWWlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKd2NtOXRaWFJvWlhWekxXZHlZV1poYm1FaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lJd09ESXlNVFV4TlMweE5ERTRMVFJqWlRFdE9XUTBOeTFrTWpFeE16Z3lORGMzTTJRaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZaR1ZtWVhWc2REcHdjbTl0WlhSb1pYVnpMV2R5WVdaaGJtRWlmUS5yYWVNZzl5MWp5VG9UQjBOTmpRTXRINEd3OFVQdTBZd3pUVmhxeDV6RjhiTEdsRE9GTEtSYlJkYWlhUjM3aml5cllQYjRlLWJoZjNhYUg4VmVaUnJETFFMSUoxUnEwcVFmU3pKTE1nV0c2cjhnZWxMRzIxcHBETng4VkNQNmNXMV9BaWdtTzY4c3BSaGJ5REZDZlFxRW1VSU9jaEJxOUw4UGxnN2pfUmJrVzU3R05oRmMyWUxKMWxYWExUczFjTWo2TERkTFhZc1YwVFRqb0tZajVuVmtnQWRIUWF5VWJQWjYyNVZUOExCVnpSZ0NuZjdLeGoxMHFZVngwblFzS2pIRE8tNjBXTGtUMmFMYWgtSUZCcUltTVNubGItanZOTlZrWEcyRkpVU3g4REtVSDU0NFJtVDBWSjQ5TzhlaFVLdjM5WVNjNnVHaHJvSW9ObHJwRFFXT2c="},"metadata":{"annotations":{"kubernetes.io/service-account.name":"prometheus-grafana","kubernetes.io/service-account.uid":"08221515-1418-4ce1-9d47-d2113824773d"},"creationTimestamp":"2021-10-25T16:45:14.000Z","managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:ca.crt":{},"f:namespace":{},"f:token":{}},"f:metadata":{"f:annotations":{".":{},"f:kubernetes.io/service-account.name":{},"f:kubernetes.io/service-account.uid":{}}},"f:type":{}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-grafana-token-z74cb","namespace":"default","resourceVersion":"640278","uid":"533649de-aa68-4efc-b609-4d28992d5051"},"type":"kubernetes.io/service-account-token"},{"data":{"ca":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkVENDQVJ1Z0F3SUJBZ0lRVSt1ajlYYkdoVUJmeHR3VHVCRHgzakFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1J1YVd3eE1DQVhEVEl4TVRBeE9URTJNelExTlZvWUR6SXhNakV3T1RJMU1UWXpORFUxV2pBUApNUTB3Q3dZRFZRUUtFd1J1YVd3eE1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXVCWWJRYyt3Cmc3Wk1tZHF3TnhXMWVLSjVuTEVjRlAyMzNsRkc1Vkd1aXNGaVJCejJkd3Y4d3pqSUNDb0NvK0VUSnlIY01NUWsKQUJRL25qZ1Q3Zlh1SnFOWE1GVXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRgpCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkFCVFdtOTE5Nk1qaEFMZzh1d24yaUhnCjE1clNNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUNPcUNOSTRSZ2pUem12T0oyOGtlYkcyeWtySnpGbWovbDkKdFhMZ0dTTVNkQUlnV2pTK3ZHMDRvcGhXWHpkVTBNdktVME56VEhBYnN1b1h3ODlFcWVSYWpzdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=","cert":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ0akNDQVZ5Z0F3SUJBZ0lRTm1wZWw3YllxRGl5dXlrczVLc3NhakFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1J1YVd3eE1DQVhEVEl4TVRBeE9URTJNelExTlZvWUR6SXhNakV3T1RJMU1UWXpORFUxV2pBUApNUTB3Q3dZRFZRUUtFd1J1YVd3eU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRTZTSzlQMTE5CmFDMW1kKzMxRkpiMVphdTNmUER2bTlhb1h1SWxEMDFJb0xFa0l3bnc3TENhZlU5dnRGSDVENWlEOVZtMXVQN2YKai9yN2dHTE83T0JIbXFPQmx6Q0JsREFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQgpCUVVIQXdFd0RBWURWUjBUQVFIL0JBSXdBREJmQmdOVkhSRUVXREJXZ2lOd2NtOXRaWFJvWlhWekxXdDFZbVV0CmNISnZiV1YwYUdWMWN5MXZjR1Z5WVhSdmNvSXZjSEp2YldWMGFHVjFjeTFyZFdKbExYQnliMjFsZEdobGRYTXQKYjNCbGNtRjBiM0l1WkdWbVlYVnNkQzV6ZG1Nd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFPeTZoWGt5Ym1xago4QkNGV1o2OC9HWDZWc0V3bkZ3dVFvd0RoaEFZQ3IrYkFpQXJNN1JFZzdWcDU4R09qTWU2VjYyS1dyMXllbmZXCktGaTBxOG0yV0oxMWZBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=","key":"LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZaQ2lYbkI5SGhtS05EYkswSjRicXhYTUVEQm9yaWxHWFBaS1l1NldhOFVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFNlNLOVAxMTlhQzFtZCszMUZKYjFaYXUzZlBEdm05YW9YdUlsRDAxSW9MRWtJd253N0xDYQpmVTl2dEZINUQ1aUQ5Vm0xdVA3ZmovcjdnR0xPN09CSG1nPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="},"metadata":{"creationTimestamp":"2021-10-19T16:39:55.000Z","managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:ca":{},"f:cert":{},"f:key":{}},"f:type":{}},"manager":"kube-webhook-certgen","operation":"Update","time":"2021-10-19T16:39:55.000Z"}],"name":"prometheus-kube-prometheus-admission","namespace":"default","resourceVersion":"255696","uid":"29d9899b-844a-42cc-af73-4736169e377b"},"type":"Opaque"},{"data":{"ca.crt":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1UQXhOREl4TkRBMU0xb1hEVE14TVRBeE1qSXhOREExTTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnlMCkN5RERwQnU0KzJmbEhWMVBEc2xhZEJGTkVKdCtQRmpFejI3S3VIWWROY20vL256OVp2ODFuYmpibWlZUEMyRXMKMzJKS1ZCRU0xMW5hK2FLc24rcHNtMXhLcXd1dnl3Z25NNmJlSG5EVG5MSlFVczdvUDhYVVBvdGwyeWg0V3pVdwpnMm5hUkd4RkVhRlFuN2N1aXlRSUVmL0VOOHFXUmt6TzdFbVZhNiszdkVVVVBaWlBUSXNhT2NlNmhiQ0hzUit6CkEydms4SGxTYkx0cUJ6U1l1aERHbzlobXN0cTN3ckNGcGRkLys1dWNhdlJVN2hRZkwySGN0TlRZWUFHSk01dFYKVlowVlFlU0t6TWVTUlhXQ1JOMFpIRUk3L1FTU0RFUDZQcXNGcVA0M3gvMThJM0JMN0ZzcExyaStWdWViQXFjbwpXQVkwcHhPeGpYbTFiNW5EWDVrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDNk9VelFIak9RYmkyUGJNWVV5WWQvdDdrbUJNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBMkw2TUEydEZaUW9Ib0d5dmVzaGwyZ0JXSWpPWVlYVHUxNFByTWUvckFhdEcyVmxocQpJUUV2Wlpjd0I4cVpCcXVOYk1QakQyRlZHZTRXdzFHcEo2dXRVWFprdnhtdkdhdVlTdjJLODE3M2lGRmJrZUNvCmduRk0rcGRsdkxhTU1UZ2dPL2xiY1hFbWpjMVJyNlJ0WWxCa0JKNWlrM0FqOXJVMHZ4Nm5ob1dTeHVaMENuNjEKblRCTVBnN0tFbHZoUzdIbjV2bGtnejJjK0tUajVxRTFRdGFSeG8zcG9JMEtSZHdkWTlHWmZJVVRaMUQyNW94KworMWRZYVF2UDdyUzJ0cFo2TC9mK2k0ZnJQZ0RnSzZ3ODB2b25CQzNBUlNOVUxyMWtZL3l0UERaNDc4MC84dHVICmw0SkJPVzFhZmpVQjNhdGFHSWpUN3FOVGZmN29rK25zUFRkYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==","namespace":"ZGVmYXVsdA==","token":"ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklubzBMWHBTV0ZGM04xQjZaazFwVjA1TVNGUTJTbEpOYkc1MlpYbHlZWGRyWWpGM2EwUm1RbXd6WXpBaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbkJ5YjIxbGRHaGxkWE10YTNWaVpTMXdjbTl0WlhSb1pYVnpMV0ZzWlhKMGJXRnVZV2RsY2kxMGIydGxiaTF6TlRKMmNDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMbTVoYldVaU9pSndjbTl0WlhSb1pYVnpMV3QxWW1VdGNISnZiV1YwYUdWMWN5MWhiR1Z5ZEcxaGJtRm5aWElpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1MWFXUWlPaUl4WTJNd1l6QXlPUzA0TlRGa0xUUXpZVEV0T1RZMU5TMDNNekEwWkRVMFpqVTFZemNpTENKemRXSWlPaUp6ZVhOMFpXMDZjMlZ5ZG1salpXRmpZMjkxYm5RNlpHVm1ZWFZzZERwd2NtOXRaWFJvWlhWekxXdDFZbVV0Y0hKdmJXVjBhR1YxY3kxaGJHVnlkRzFoYm1GblpYSWlmUS5obDNIY21zOVR0cjJJU210OFZxU1F3TjZ1dFl1Q0dWaHFDR3hrbzc1YzM5X1JDM1lZV21nOWs2ZEsxS25seXNrWVEwSUJHdXpBQ0p1UU5fcWE4aUhBam9qQzg4bXVxb2pBQ281aDhhV2Jna19HNGE1UVJNbzktVExBSV9GdVlZaWJ6emgyRTJLVGRVd3p1OFg3OGt6YnJ3WGpnZmpZbkc2V3ZwQXJKSHF6RnlWLTV0RjFCLWFuSllSS3ViMkdSYUFLYmpRbGFBVThuYmozYWpSUVRsWTlXSThlOU1Xb0lrRUIyU20zZzgyQ3pzR2hwXzBBX0JTTDZCVERKQWROY0puZFhfRGJGc19fN3VHOXpvZkNHNWM5eFptVUVVV2RBeU5iVVY4a3NnVTRweXdITjkxZlZPZ1F6b0NqNU5LLUZ0VzFqN250QVQ0WWFaclNQMl9RMkNIdFE="},"metadata":{"annotations":{"kubernetes.io/service-account.name":"prometheus-kube-prometheus-alertmanager","kubernetes.io/service-account.uid":"1cc0c029-851d-43a1-9655-7304d54f55c7"},"creationTimestamp":"2021-10-25T16:45:14.000Z","managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:ca.crt":{},"f:namespace":{},"f:token":{}},"f:metadata":{"f:annotations":{".":{},"f:kubernetes.io/service-account.name":{},"f:kubernetes.io/service-account.uid":{}}},"f:type":{}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-alertmanager-token-s52vp","namespace":"default","resourceVersion":"640317","uid":"cdc05be2-4d28-49fb-b325-a2d601501c4b"},"type":"kubernetes.io/service-account-token"},{"data":{"ca.crt":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1UQXhOREl4TkRBMU0xb1hEVE14TVRBeE1qSXhOREExTTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnlMCkN5RERwQnU0KzJmbEhWMVBEc2xhZEJGTkVKdCtQRmpFejI3S3VIWWROY20vL256OVp2ODFuYmpibWlZUEMyRXMKMzJKS1ZCRU0xMW5hK2FLc24rcHNtMXhLcXd1dnl3Z25NNmJlSG5EVG5MSlFVczdvUDhYVVBvdGwyeWg0V3pVdwpnMm5hUkd4RkVhRlFuN2N1aXlRSUVmL0VOOHFXUmt6TzdFbVZhNiszdkVVVVBaWlBUSXNhT2NlNmhiQ0hzUit6CkEydms4SGxTYkx0cUJ6U1l1aERHbzlobXN0cTN3ckNGcGRkLys1dWNhdlJVN2hRZkwySGN0TlRZWUFHSk01dFYKVlowVlFlU0t6TWVTUlhXQ1JOMFpIRUk3L1FTU0RFUDZQcXNGcVA0M3gvMThJM0JMN0ZzcExyaStWdWViQXFjbwpXQVkwcHhPeGpYbTFiNW5EWDVrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDNk9VelFIak9RYmkyUGJNWVV5WWQvdDdrbUJNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBMkw2TUEydEZaUW9Ib0d5dmVzaGwyZ0JXSWpPWVlYVHUxNFByTWUvckFhdEcyVmxocQpJUUV2Wlpjd0I4cVpCcXVOYk1QakQyRlZHZTRXdzFHcEo2dXRVWFprdnhtdkdhdVlTdjJLODE3M2lGRmJrZUNvCmduRk0rcGRsdkxhTU1UZ2dPL2xiY1hFbWpjMVJyNlJ0WWxCa0JKNWlrM0FqOXJVMHZ4Nm5ob1dTeHVaMENuNjEKblRCTVBnN0tFbHZoUzdIbjV2bGtnejJjK0tUajVxRTFRdGFSeG8zcG9JMEtSZHdkWTlHWmZJVVRaMUQyNW94KworMWRZYVF2UDdyUzJ0cFo2TC9mK2k0ZnJQZ0RnSzZ3ODB2b25CQzNBUlNOVUxyMWtZL3l0UERaNDc4MC84dHVICmw0SkJPVzFhZmpVQjNhdGFHSWpUN3FOVGZmN29rK25zUFRkYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==","namespace":"ZGVmYXVsdA==","token":"ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklubzBMWHBTV0ZGM04xQjZaazFwVjA1TVNGUTJTbEpOYkc1MlpYbHlZWGRyWWpGM2EwUm1RbXd6WXpBaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbkJ5YjIxbGRHaGxkWE10YTNWaVpTMXdjbTl0WlhSb1pYVnpMVzl3WlhKaGRHOXlMWFJ2YTJWdUxUZHlaSGh5SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWJtRnRaU0k2SW5CeWIyMWxkR2hsZFhNdGEzVmlaUzF3Y205dFpYUm9aWFZ6TFc5d1pYSmhkRzl5SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pWWpsa09HWXlZVFV0WlRWbFpTMDBNbUl4TFRsaFkySXRNamsxWmpjelpHTmlOemt5SWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9tUmxabUYxYkhRNmNISnZiV1YwYUdWMWN5MXJkV0psTFhCeWIyMWxkR2hsZFhNdGIzQmxjbUYwYjNJaWZRLm5tQU1QV1l0ejRQRVc1NDhwNjZ5TTdvV3pMeEUxTGxoemNNZjlaOENoQ1dBTWFubUlzcWdFbElIOWlaelJFa3RHM1R2bXhSaS1RZlZ6d2Zralg4T29RRm1NZDJSSHVZUTAyYWF1MXo0VXlUVkxuYW5kcmRUYnVVeHRTZG96enRlS0twWHNKMS11ZVB6T1BScG9CQ2RIVms3LWhpRkVEc0x1dWt6Nzl5UnFuSk5VLW1tVElLYVRwRGl3dVJwU3pqa19UdlJjZzItRzRxQ1l4M2dEM3o5TDVZNG9XT3VFQ3ZNU3VuUDAzb015UFpJRENTeC1UbGZRdGxqMzVDa1hRUk9pMlk3ZUFyQWNaX2JMdFJMQXk4VkgwckpnSUwyak41VnUxclQyX1VwUjRyTXZaNEZkTEhveHk4bVN3X2lIcF9qVGR0UFFMLVptUXI0Q2NnbVQzZlFKUQ=="},"metadata":{"annotations":{"kubernetes.io/service-account.name":"prometheus-kube-prometheus-operator","kubernetes.io/service-account.uid":"b9d8f2a5-e5ee-42b1-9acb-295f73dcb792"},"creationTimestamp":"2021-10-25T16:45:14.000Z","managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:ca.crt":{},"f:namespace":{},"f:token":{}},"f:metadata":{"f:annotations":{".":{},"f:kubernetes.io/service-account.name":{},"f:kubernetes.io/service-account.uid":{}}},"f:type":{}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-operator-token-7rdxr","namespace":"default","resourceVersion":"640316","uid":"78d30cb6-a633-4848-ba3d-6f6304e7d5f0"},"type":"kubernetes.io/service-account-token"},{"data":{"ca.crt":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1UQXhOREl4TkRBMU0xb1hEVE14TVRBeE1qSXhOREExTTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnlMCkN5RERwQnU0KzJmbEhWMVBEc2xhZEJGTkVKdCtQRmpFejI3S3VIWWROY20vL256OVp2ODFuYmpibWlZUEMyRXMKMzJKS1ZCRU0xMW5hK2FLc24rcHNtMXhLcXd1dnl3Z25NNmJlSG5EVG5MSlFVczdvUDhYVVBvdGwyeWg0V3pVdwpnMm5hUkd4RkVhRlFuN2N1aXlRSUVmL0VOOHFXUmt6TzdFbVZhNiszdkVVVVBaWlBUSXNhT2NlNmhiQ0hzUit6CkEydms4SGxTYkx0cUJ6U1l1aERHbzlobXN0cTN3ckNGcGRkLys1dWNhdlJVN2hRZkwySGN0TlRZWUFHSk01dFYKVlowVlFlU0t6TWVTUlhXQ1JOMFpIRUk3L1FTU0RFUDZQcXNGcVA0M3gvMThJM0JMN0ZzcExyaStWdWViQXFjbwpXQVkwcHhPeGpYbTFiNW5EWDVrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDNk9VelFIak9RYmkyUGJNWVV5WWQvdDdrbUJNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBMkw2TUEydEZaUW9Ib0d5dmVzaGwyZ0JXSWpPWVlYVHUxNFByTWUvckFhdEcyVmxocQpJUUV2Wlpjd0I4cVpCcXVOYk1QakQyRlZHZTRXdzFHcEo2dXRVWFprdnhtdkdhdVlTdjJLODE3M2lGRmJrZUNvCmduRk0rcGRsdkxhTU1UZ2dPL2xiY1hFbWpjMVJyNlJ0WWxCa0JKNWlrM0FqOXJVMHZ4Nm5ob1dTeHVaMENuNjEKblRCTVBnN0tFbHZoUzdIbjV2bGtnejJjK0tUajVxRTFRdGFSeG8zcG9JMEtSZHdkWTlHWmZJVVRaMUQyNW94KworMWRZYVF2UDdyUzJ0cFo2TC9mK2k0ZnJQZ0RnSzZ3ODB2b25CQzNBUlNOVUxyMWtZL3l0UERaNDc4MC84dHVICmw0SkJPVzFhZmpVQjNhdGFHSWpUN3FOVGZmN29rK25zUFRkYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==","namespace":"ZGVmYXVsdA==","token":"ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklubzBMWHBTV0ZGM04xQjZaazFwVjA1TVNGUTJTbEpOYkc1MlpYbHlZWGRyWWpGM2EwUm1RbXd6WXpBaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbkJ5YjIxbGRHaGxkWE10YTNWaVpTMXdjbTl0WlhSb1pYVnpMWEJ5YjIxbGRHaGxkWE10ZEc5clpXNHRkM0UwYTJJaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaWNISnZiV1YwYUdWMWN5MXJkV0psTFhCeWIyMWxkR2hsZFhNdGNISnZiV1YwYUdWMWN5SXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMblZwWkNJNkltWmtPRE13T0RRMExUWXlZamN0TkRGaE1TMDRaV1JpTFdNd1lqQm1PR00wTVRKaU1DSXNJbk4xWWlJNkluTjVjM1JsYlRwelpYSjJhV05sWVdOamIzVnVkRHBrWldaaGRXeDBPbkJ5YjIxbGRHaGxkWE10YTNWaVpTMXdjbTl0WlhSb1pYVnpMWEJ5YjIxbGRHaGxkWE1pZlEuakxHQjhyNDVDYXhicVBNaTJPdG1KVkt1TTl1bDcydVlLald0MDR2TEZYeHBZUXltUGNGVllqOGQ0all4V1h6QlFQekdyOU40QTVoeW9UN0hBbDYwU2lJOFlmd3FBTFZyOUY0RmtTZTVqanMtOS1Pek5JQXFVSXdzZDY3YzZfZnVYRS0yTjY4TDN4UnpWWHVYU0VtUW5DZEdsREZFUFppTEZheWRja05OM1NRSllXZGlEWVJ0SWEySktHaktKLUxaWkdObHRYOUMtY3FubVVObERIbXFTX2xLYXgzMVVHR29CZ0tTcGRFZXZSeWV1dE9lVWJSSFB6eUgxVHpibEI1aHpRNTRKMXJlLU16UGF3b2JfdG44dmM1YVhoS29SeVZUSVktdUNuYXhjQk1tOU1UYkc5aGRYVl9HLTVvdFlVdzFpb3NXc3Y5am1rM290UjBJR2lpQ3R3"},"metadata":{"annotations":{"kubernetes.io/service-account.name":"prometheus-kube-prometheus-prometheus","kubernetes.io/service-account.uid":"fd830844-62b7-41a1-8edb-c0b0f8c412b0"},"creationTimestamp":"2021-10-25T16:45:14.000Z","managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:ca.crt":{},"f:namespace":{},"f:token":{}},"f:metadata":{"f:annotations":{".":{},"f:kubernetes.io/service-account.name":{},"f:kubernetes.io/service-account.uid":{}}},"f:type":{}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-prometheus-token-wq4kb","namespace":"default","resourceVersion":"640276","uid":"e41b5a45-e68f-40ec-a872-f36c75d3df3e"},"type":"kubernetes.io/service-account-token"},{"data":{"ca.crt":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1UQXhOREl4TkRBMU0xb1hEVE14TVRBeE1qSXhOREExTTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnlMCkN5RERwQnU0KzJmbEhWMVBEc2xhZEJGTkVKdCtQRmpFejI3S3VIWWROY20vL256OVp2ODFuYmpibWlZUEMyRXMKMzJKS1ZCRU0xMW5hK2FLc24rcHNtMXhLcXd1dnl3Z25NNmJlSG5EVG5MSlFVczdvUDhYVVBvdGwyeWg0V3pVdwpnMm5hUkd4RkVhRlFuN2N1aXlRSUVmL0VOOHFXUmt6TzdFbVZhNiszdkVVVVBaWlBUSXNhT2NlNmhiQ0hzUit6CkEydms4SGxTYkx0cUJ6U1l1aERHbzlobXN0cTN3ckNGcGRkLys1dWNhdlJVN2hRZkwySGN0TlRZWUFHSk01dFYKVlowVlFlU0t6TWVTUlhXQ1JOMFpIRUk3L1FTU0RFUDZQcXNGcVA0M3gvMThJM0JMN0ZzcExyaStWdWViQXFjbwpXQVkwcHhPeGpYbTFiNW5EWDVrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDNk9VelFIak9RYmkyUGJNWVV5WWQvdDdrbUJNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBMkw2TUEydEZaUW9Ib0d5dmVzaGwyZ0JXSWpPWVlYVHUxNFByTWUvckFhdEcyVmxocQpJUUV2Wlpjd0I4cVpCcXVOYk1QakQyRlZHZTRXdzFHcEo2dXRVWFprdnhtdkdhdVlTdjJLODE3M2lGRmJrZUNvCmduRk0rcGRsdkxhTU1UZ2dPL2xiY1hFbWpjMVJyNlJ0WWxCa0JKNWlrM0FqOXJVMHZ4Nm5ob1dTeHVaMENuNjEKblRCTVBnN0tFbHZoUzdIbjV2bGtnejJjK0tUajVxRTFRdGFSeG8zcG9JMEtSZHdkWTlHWmZJVVRaMUQyNW94KworMWRZYVF2UDdyUzJ0cFo2TC9mK2k0ZnJQZ0RnSzZ3ODB2b25CQzNBUlNOVUxyMWtZL3l0UERaNDc4MC84dHVICmw0SkJPVzFhZmpVQjNhdGFHSWpUN3FOVGZmN29rK25zUFRkYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==","namespace":"ZGVmYXVsdA==","token":"ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklubzBMWHBTV0ZGM04xQjZaazFwVjA1TVNGUTJTbEpOYkc1MlpYbHlZWGRyWWpGM2EwUm1RbXd6WXpBaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbkJ5YjIxbGRHaGxkWE10YTNWaVpTMXpkR0YwWlMxdFpYUnlhV056TFhSdmEyVnVMV3c0YkdKdElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVibUZ0WlNJNkluQnliMjFsZEdobGRYTXRhM1ZpWlMxemRHRjBaUzF0WlhSeWFXTnpJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1ZFdsa0lqb2laRFJqWVdFME1ERXRaV016WkMwME1UQTRMVGd3WVdNdE56UXpNR1l6Wm1NMU1qUTFJaXdpYzNWaUlqb2ljM2x6ZEdWdE9uTmxjblpwWTJWaFkyTnZkVzUwT21SbFptRjFiSFE2Y0hKdmJXVjBhR1YxY3kxcmRXSmxMWE4wWVhSbExXMWxkSEpwWTNNaWZRLlRFWkNCVUdGNExhNzZGTFlqQTVXMFptdEN0ZFc3N1lTY2pYSnJVRFN2X2JRN252SVNqLUtIajlDU0tVeTNxaGx4N1hfb1ZjSkJGQmYtZS1tWGhLeHY4c1pPcjdna3oyNENEem5qbFgybUJZSzZraFF1dGQ5Q3QzX0pDZTJWX3lQWlk1UGFHbkJDYVZUY240bGxFZnA4M1d3cVdncVc5b3FGWEhOeDZ5WVMxQnB5TTQtc3VDS0ZLQ0tqWkNpd3I1M0ZhSlpsMnFOTEFjbEFQenRkQnNzcW9mRHAyU21kMlFxbzR4RWxJWkhJdXlYVFllM2lyekFSS24xUkxRSE95LW9KUDZHb1RhWHpqOE1nbGxhZjFLQnFjSkpmalljdGdxT0VwbHFQOE5YVHJYSFNlT2VFQkJFQXp3OVBxaWN5XzA4bTcwSG5DU2Q5RXZrTVNCOTBrYW9UQQ=="},"metadata":{"annotations":{"kubernetes.io/service-account.name":"prometheus-kube-state-metrics","kubernetes.io/service-account.uid":"d4caa401-ec3d-4108-80ac-7430f3fc5245"},"creationTimestamp":"2021-10-25T16:45:14.000Z","managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:ca.crt":{},"f:namespace":{},"f:token":{}},"f:metadata":{"f:annotations":{".":{},"f:kubernetes.io/service-account.name":{},"f:kubernetes.io/service-account.uid":{}}},"f:type":{}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-state-metrics-token-l8lbm","namespace":"default","resourceVersion":"640280","uid":"dcb0a295-a9eb-49f9-8f13-df262982d67f"},"type":"kubernetes.io/service-account-token"},{"data":{"prometheus.yaml.gz":"H4sIAAAAAAAA/+ydz47bNhPA734KIshhkw9eJfkuhXIKkAI9NGnQPgBBU+M1Y4okhpS7i6LvXoiWbNmWvPau7ZXWc7NEcYbDGfE3I+vPnbYTodMRY7AQuhBBWcOVCYALoVP2/w9+xJiXKBzs7Ib7AGiE5lpMQPtSCGMObQ5hBoVPWQZTUeiQrPeN58UExo3t9c+t3hzBaSVFyt7e/PjjK//+5duv70ZYaOBTpcGnozFLIMiG8KRs9Umr9D2Kx2W3KHP8IXl/+yByPaosltZM1V3U9dNOuBE5pMwDLpSEb9aoYDE5wEihAUMujLgDTD6MGJtZY7GeNjYV2sOIsbIbGgjguc/WuhkbM7QaUgYmc1aZsJyrcjTeCQnVzFd76o1xPf0jxnIIqKTnToRZypJqc8QYQhzEpjJvC5Sw4dVof/wVBN5BWDamjPOQO97wWj1NUZCQZTilbA7gYudWyZznEARvWr+c4eVxXLhlZ4Q7uE/Z9uT6IOR8Y4pPqBtBg4jOWenfiNhT6fGgpzxfRlRT2ZuABbx5lqI6aLizGGrfrBT8DZNun+8RJrIMwXtehcNcmezoTquxeHACRbCYss/NwX23GXy+uX3/rtrptJCQgwkpe/vPx39b4tHYDPprzw+bHWeOs9kx1qxWhLaZabQdLLAO0pVlmzKr5mMkOpt1STvS2FKStCYIZQC7ZK4OOKHV9UrY5sDx1rF1qOx2eOTEq0OLdy66M+FnsTG3WaFL3H6Mm/U6Ubbn+6d0Q0wVo29v/vrty59f323IimvOMxnoVNnphQDo5QzKcc9CcGXnoH0lf3m0Mh5kgcD9XDm+AFTTh/W4GFsOvTJ+PczYJkXMSFKWLAQmWJjEg0QIPlkfeKtsUs2ZkNIWJiRS3EosxzYBgYA82DmYJ0mKPQcCc2lzZw2szogYc6vYOKEih3ahMsDt1GHluHMRtQ6xnjKImEpMHRpTT7DSdKmLMXRz+7/u+Dkc6Y+e+a8O6tIiZMZfEOlxBP7BB8ivDZ0H1cGVRwZRAj/O0fH6SkVP8UM4JZxeBU5/2snv5Y+L0vSQ8//VQfUOxVQYQReKnwDIZqOyXBkfhJHnv367q3obZ5VXzwjMJyx1xEpiJbHyFJdzD5i7VwequF26BK3WgOPL/8NJ1eD+arDDQ1QdEvGIeEQ8qg4HCl0IMiPM9guzpU8IrARWAiuBlcA6ULA6tPcPRNZ+kTU6hdBKaCW0EloJrQNFq5czyApN14f7hteVYwixhFhCLCGWEDtUxAYRoDa/BbMBi/PePjQQMPb3LqFdN54Zlv2FCkGSIHkVkNyzKlwKmVeHSg3hcnzcrEKf9ihqNTR62vQMwNUQTqhz/otvK76fq+SAh06p8CWmE9N7wfTmInCxR08PPP9XD3i0Ir15wFWmBR9fJi1of/ImkSJbKB9fCkSJAyUOlDhQ4kCJAyUOlDj0L3H41KvEwaGdgKe0gdIGShsobaC0gdIGSht6lTaUK80Y7svl9YVeijkQojad0TV/r+DWNYIpwZRg2geYXvyutWu8Yc06iCflS9ym9ty3Qa9r4q0PUEjA4Kuyllf6+L6XYme58l5Zw6Wo1qrGe6YPmL1hUrz9ZvSGTUNnOb0DmkhOJD8pyY+qTK+KpA3+0CsjzwGms9wLTl8WIgISAYmApyfg8L4sFD/epkysvuJv3sqOuk9sytB2XBmsvxxYC6teelgJiReiHcJU3acsWZ5UjXIw7uiEZRcu24C5hcxNaDImnCorSx8tWnyqTNmxunV9bl2hD4y4tkupO2Xp5sf0njuGDk5skOK/AAAA//+qpJrSiHIAAA=="},"metadata":{"annotations":{"generated":"true"},"creationTimestamp":"2021-10-25T16:45:16.000Z","labels":{"managed-by":"prometheus-operator"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:prometheus.yaml.gz":{}},"f:metadata":{"f:annotations":{".":{},"f:generated":{}},"f:labels":{".":{},"f:managed-by":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c424c4cd-4cc8-4031-863b-1d1ca12111f7\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:type":{}},"manager":"operator","operation":"Update","time":"2021-10-25T16:45:16.000Z"}],"name":"prometheus-prometheus-kube-prometheus-prometheus","namespace":"default","ownerReferences":[{"apiVersion":"monitoring.coreos.com/v1","blockOwnerDeletion":true,"controller":true,"kind":"Prometheus","name":"prometheus-kube-prometheus-prometheus","uid":"c424c4cd-4cc8-4031-863b-1d1ca12111f7"}],"resourceVersion":"640537","uid":"e64db46a-4374-4bf9-979c-b939fa5a10b7"},"type":"Opaque"},{"data":{"secret_default_prometheus-kube-prometheus-admission_ca":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkVENDQVJ1Z0F3SUJBZ0lRVSt1ajlYYkdoVUJmeHR3VHVCRHgzakFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1J1YVd3eE1DQVhEVEl4TVRBeE9URTJNelExTlZvWUR6SXhNakV3T1RJMU1UWXpORFUxV2pBUApNUTB3Q3dZRFZRUUtFd1J1YVd3eE1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXVCWWJRYyt3Cmc3Wk1tZHF3TnhXMWVLSjVuTEVjRlAyMzNsRkc1Vkd1aXNGaVJCejJkd3Y4d3pqSUNDb0NvK0VUSnlIY01NUWsKQUJRL25qZ1Q3Zlh1SnFOWE1GVXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRgpCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkFCVFdtOTE5Nk1qaEFMZzh1d24yaUhnCjE1clNNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUNPcUNOSTRSZ2pUem12T0oyOGtlYkcyeWtySnpGbWovbDkKdFhMZ0dTTVNkQUlnV2pTK3ZHMDRvcGhXWHpkVTBNdktVME56VEhBYnN1b1h3ODlFcWVSYWpzdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="},"metadata":{"creationTimestamp":"2021-10-25T16:45:16.000Z","labels":{"managed-by":"prometheus-operator"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:secret_default_prometheus-kube-prometheus-admission_ca":{}},"f:metadata":{"f:labels":{".":{},"f:managed-by":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c424c4cd-4cc8-4031-863b-1d1ca12111f7\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:type":{}},"manager":"operator","operation":"Update","time":"2021-10-25T16:45:17.000Z"}],"name":"prometheus-prometheus-kube-prometheus-prometheus-tls-assets","namespace":"default","ownerReferences":[{"apiVersion":"monitoring.coreos.com/v1","blockOwnerDeletion":true,"controller":true,"kind":"Prometheus","name":"prometheus-kube-prometheus-prometheus","uid":"c424c4cd-4cc8-4031-863b-1d1ca12111f7"}],"resourceVersion":"640539","uid":"feae7915-1645-4ec4-aefb-519f05b5aeff"},"type":"Opaque"},{"data":{"web-config.yaml":""},"metadata":{"creationTimestamp":"2021-10-25T16:45:16.000Z","labels":{"managed-by":"prometheus-operator"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:web-config.yaml":{}},"f:metadata":{"f:labels":{".":{},"f:managed-by":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c424c4cd-4cc8-4031-863b-1d1ca12111f7\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:type":{}},"manager":"operator","operation":"Update","time":"2021-10-25T16:45:16.000Z"}],"name":"prometheus-prometheus-kube-prometheus-prometheus-web-config","namespace":"default","ownerReferences":[{"apiVersion":"monitoring.coreos.com/v1","blockOwnerDeletion":true,"controller":true,"kind":"Prometheus","name":"prometheus-kube-prometheus-prometheus","uid":"c424c4cd-4cc8-4031-863b-1d1ca12111f7"}],"resourceVersion":"640467","uid":"9156ff15-c5d3-48ec-804e-a7c8d3696dd2"},"type":"Opaque"},{"data":{"ca.crt":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1UQXhOREl4TkRBMU0xb1hEVE14TVRBeE1qSXhOREExTTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnlMCkN5RERwQnU0KzJmbEhWMVBEc2xhZEJGTkVKdCtQRmpFejI3S3VIWWROY20vL256OVp2ODFuYmpibWlZUEMyRXMKMzJKS1ZCRU0xMW5hK2FLc24rcHNtMXhLcXd1dnl3Z25NNmJlSG5EVG5MSlFVczdvUDhYVVBvdGwyeWg0V3pVdwpnMm5hUkd4RkVhRlFuN2N1aXlRSUVmL0VOOHFXUmt6TzdFbVZhNiszdkVVVVBaWlBUSXNhT2NlNmhiQ0hzUit6CkEydms4SGxTYkx0cUJ6U1l1aERHbzlobXN0cTN3ckNGcGRkLys1dWNhdlJVN2hRZkwySGN0TlRZWUFHSk01dFYKVlowVlFlU0t6TWVTUlhXQ1JOMFpIRUk3L1FTU0RFUDZQcXNGcVA0M3gvMThJM0JMN0ZzcExyaStWdWViQXFjbwpXQVkwcHhPeGpYbTFiNW5EWDVrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDNk9VelFIak9RYmkyUGJNWVV5WWQvdDdrbUJNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBMkw2TUEydEZaUW9Ib0d5dmVzaGwyZ0JXSWpPWVlYVHUxNFByTWUvckFhdEcyVmxocQpJUUV2Wlpjd0I4cVpCcXVOYk1QakQyRlZHZTRXdzFHcEo2dXRVWFprdnhtdkdhdVlTdjJLODE3M2lGRmJrZUNvCmduRk0rcGRsdkxhTU1UZ2dPL2xiY1hFbWpjMVJyNlJ0WWxCa0JKNWlrM0FqOXJVMHZ4Nm5ob1dTeHVaMENuNjEKblRCTVBnN0tFbHZoUzdIbjV2bGtnejJjK0tUajVxRTFRdGFSeG8zcG9JMEtSZHdkWTlHWmZJVVRaMUQyNW94KworMWRZYVF2UDdyUzJ0cFo2TC9mK2k0ZnJQZ0RnSzZ3ODB2b25CQzNBUlNOVUxyMWtZL3l0UERaNDc4MC84dHVICmw0SkJPVzFhZmpVQjNhdGFHSWpUN3FOVGZmN29rK25zUFRkYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==","namespace":"ZGVmYXVsdA==","token":"ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklubzBMWHBTV0ZGM04xQjZaazFwVjA1TVNGUTJTbEpOYkc1MlpYbHlZWGRyWWpGM2EwUm1RbXd6WXpBaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbkJ5YjIxbGRHaGxkWE10Y0hKdmJXVjBhR1YxY3kxdWIyUmxMV1Y0Y0c5eWRHVnlMWFJ2YTJWdUxYaDROSGMzSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWJtRnRaU0k2SW5CeWIyMWxkR2hsZFhNdGNISnZiV1YwYUdWMWN5MXViMlJsTFdWNGNHOXlkR1Z5SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pTlRWallUTTFNR0V0WldJeVl5MDBNelZtTFRrMVpURXRNamszWWpoaFl6Y3dNak5pSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9tUmxabUYxYkhRNmNISnZiV1YwYUdWMWN5MXdjbTl0WlhSb1pYVnpMVzV2WkdVdFpYaHdiM0owWlhJaWZRLmloYXNtbkxTNVhCQ2ZjNkRtSl9mWXNvZlZRTzBSd3VmM3dmSVFnVkEwR3hxVnVYTnJVRTlpZjU5RDR3X2NZdmNwLVo1QmZjc2NtZlZVckxmS2pRYjN2QUREdExpU0RibTNHWGpSUjZCMWVzVVFhdzFmMFRDdXNxc1BNMGE3NVFMZ3NRRDB6ZXJlaU9jbVdKaGVfZzhQaFhDRUgzMU1tTGJYTGJhM0gzTEI5cnFzcTFNZlBwOHpoLVBlZmJrXzNEU2F2a2RFdDBNb1lmNFR4M2x4NnVJYjJLck9leFh0dzFjRW11aTFiZkZwMW9aYm1JenRhQXIxMkJjMXZYWVYxeU9PUFlYNzFlZlMyZmdjMm5kMkxpd0xBZDhHN1lyTkJ0S2xodkYzOF9QTkRWV2FiYkdTRFlCdzhTOVZpeWtxbWIyOURxNXZnV0RseThpamdodlU4LXpqZw=="},"metadata":{"annotations":{"kubernetes.io/service-account.name":"prometheus-prometheus-node-exporter","kubernetes.io/service-account.uid":"55ca350a-eb2c-435f-95e1-297b8ac7023b"},"creationTimestamp":"2021-10-25T16:45:14.000Z","managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:ca.crt":{},"f:namespace":{},"f:token":{}},"f:metadata":{"f:annotations":{".":{},"f:kubernetes.io/service-account.name":{},"f:kubernetes.io/service-account.uid":{}}},"f:type":{}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-prometheus-node-exporter-token-xx4w7","namespace":"default","resourceVersion":"640277","uid":"18ad1c80-46f4-4d98-a575-6a788f67dc2d"},"type":"kubernetes.io/service-account-token"},{"data":{"ca":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkakNDQVJ1Z0F3SUJBZ0lRVVRoL0pnUzlva1hBVGhySDg1R2VwekFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1J1YVd3eE1DQVhEVEl4TVRBeU1ESXlNakl3TUZvWUR6SXhNakV3T1RJMk1qSXlNakF3V2pBUApNUTB3Q3dZRFZRUUtFd1J1YVd3eE1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXlrZWdwRUp4ClJWU053UmVzY3Mvb0hvSG93VitnNkJ0QXJsTWd0ZEFUbkFtVTA1WW0zYk04YS9jZjlZaGJjdnRkRGNJenVwUmoKd2lkd1RKV0k5bGhOa3FOWE1GVXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRgpCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkltMFZjZTB5TE92K2NqeWxlVFpmcWx3CkdacnRNQW9HQ0NxR1NNNDlCQU1DQTBrQU1FWUNJUUNuRTIyNk1NSThwMng0VTBRUzdrUmVwVFhjL1hVTkNKaW4KK25uOWlZZXpvZ0loQU0ySThCK0hKUFRoN3hNS2xUL1RKTXpXV2JOa2ZHRWR0MU52Y2U5UzdrOWMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=","cert":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ0VENDQVZxZ0F3SUJBZ0lRTkI0QnRhYVpoUzBLTWgyZ1dhZmxEREFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1J1YVd3eE1DQVhEVEl4TVRBeU1ESXlNakl3TUZvWUR6SXhNakV3T1RJMk1qSXlNakF3V2pBUApNUTB3Q3dZRFZRUUtFd1J1YVd3eU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRVZNNDhhWGNWCm9jWnlpRytBS2NQOVRMbkVoV1ltckNRQS9kSTZZWDQxS01ZdzN1aHJZMXk0WGRVa1RWT0JuMDhYV25NeWM4TmoKRWljMWZwQTY1TUFyaHFPQmxUQ0JrakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQgpCUVVIQXdFd0RBWURWUjBUQVFIL0JBSXdBREJkQmdOVkhSRUVWakJVZ2lKd2NtOXRaWFJvZFhNdGEzVmlaUzF3CmNtOXRaWFJvWlhWekxXOXdaWEpoZEc5eWdpNXdjbTl0WlhSb2RYTXRhM1ZpWlMxd2NtOXRaWFJvWlhWekxXOXcKWlhKaGRHOXlMbVJsWm1GMWJIUXVjM1pqTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDSVFEWmt4VTJGZ2d2bmdSUQpWSWl5bVVobXNka2Q0Nk55WGJvUnlZQTM0Z1lRK1FJaEFLek9IcGVzSkxUUnQ1Qi8xWU5kdkp5Qnk1TFdZREh4CjZGYiswRkw3Rjh4VwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==","key":"LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUkrc2ZMZzhhSjBxeHlUWlNtSGIwN0FkNWorVEd0ckpsamF2VVQ4R0dpVDVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFVk00OGFYY1ZvY1p5aUcrQUtjUDlUTG5FaFdZbXJDUUEvZEk2WVg0MUtNWXczdWhyWTF5NApYZFVrVFZPQm4wOFhXbk15YzhOakVpYzFmcEE2NU1BcmhnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="},"metadata":{"creationTimestamp":"2021-10-20T22:27:00.000Z","managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:ca":{},"f:cert":{},"f:key":{}},"f:type":{}},"manager":"kube-webhook-certgen","operation":"Update","time":"2021-10-20T22:27:00.000Z"}],"name":"promethus-kube-prometheus-admission","namespace":"default","resourceVersion":"361194","uid":"c5b363ec-e711-477e-b4d4-f476518514dc"},"type":"Opaque"},{"data":{"release":""},"metadata":{"creationTimestamp":"2021-10-25T16:45:10.000Z","labels":{"modifiedAt":"1635180323","name":"prometheus","owner":"helm","status":"deployed","version":"1"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:release":{}},"f:metadata":{"f:labels":{".":{},"f:modifiedAt":{},"f:name":{},"f:owner":{},"f:status":{},"f:version":{}}},"f:type":{}},"manager":"helm.exe","operation":"Update","time":"2021-10-25T16:45:10.000Z"}],"name":"sh.helm.release.v1.prometheus.v1","namespace":"default","resourceVersion":"640640","uid":"1fb50609-1cc1-4cbc-8be9-80b263868c1b"},"type":"helm.sh/release.v1"}],"podtemplates":[],"endpoints":[{"metadata":{"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2021-10-25T16:45:26Z"},"creationTimestamp":"2021-10-25T16:45:16.000Z","labels":{"operated-alertmanager":"true","service.kubernetes.io/headless":""},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:labels":{".":{},"f:operated-alertmanager":{},"f:service.kubernetes.io/headless":{}}},"f:subsets":{}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:20.000Z"}],"name":"alertmanager-operated","namespace":"default","resourceVersion":"640662","uid":"8d901d8a-19cc-49ba-bbe8-2b6bc38da4dc"},"subsets":[{"addresses":[{"hostname":"alertmanager-prometheus-kube-prometheus-alertmanager-0","ip":"10.1.0.241","nodeName":"docker-desktop","targetRef":{"kind":"Pod","name":"alertmanager-prometheus-kube-prometheus-alertmanager-0","namespace":"default","resourceVersion":"640661","uid":"654d3759-1128-49d5-9efd-62d7330826f6"}}],"ports":[{"name":"udp-mesh","port":9094,"protocol":"UDP"},{"name":"tcp-mesh","port":9094,"protocol":"TCP"},{"name":"web","port":9093,"protocol":"TCP"}]}]},{"metadata":{"creationTimestamp":"2021-10-23T22:13:20.000Z","labels":{"endpointslice.kubernetes.io/skip-mirror":"true"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:labels":{".":{},"f:endpointslice.kubernetes.io/skip-mirror":{}}},"f:subsets":{}},"manager":"kube-apiserver","operation":"Update","time":"2021-10-23T22:13:20.000Z"}],"name":"kubernetes","namespace":"default","resourceVersion":"555410","uid":"3d14abd7-10a0-4d21-83ed-4dd6ab624b3f"},"subsets":[{"addresses":[{"ip":"192.168.65.4"}],"ports":[{"name":"https","port":6443,"protocol":"TCP"}]}]},{"metadata":{"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2021-10-25T16:45:24Z"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"8.2.1","helm.sh/chart":"grafana-6.17.2"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:helm.sh/chart":{}}},"f:subsets":{}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:19.000Z"}],"name":"prometheus-grafana","namespace":"default","resourceVersion":"640652","uid":"d8039f78-2476-42f1-8b4a-9d849575384e"},"subsets":[{"addresses":[{"ip":"10.1.0.239","nodeName":"docker-desktop","targetRef":{"kind":"Pod","name":"prometheus-grafana-5b96fb5467-xdplf","namespace":"default","resourceVersion":"640651","uid":"b1f224f3-3cab-4b0e-b517-c011b782cf4b"}}],"ports":[{"name":"service","port":3000,"protocol":"TCP"}]}]},{"metadata":{"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2021-10-25T16:45:26Z"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-alertmanager","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus","self-monitor":"true"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{},"f:self-monitor":{}}},"f:subsets":{}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:20.000Z"}],"name":"prometheus-kube-prometheus-alertmanager","namespace":"default","resourceVersion":"640664","uid":"95817444-ea09-437a-958a-77b2bed65a92"},"subsets":[{"addresses":[{"ip":"10.1.0.241","nodeName":"docker-desktop","targetRef":{"kind":"Pod","name":"alertmanager-prometheus-kube-prometheus-alertmanager-0","namespace":"default","resourceVersion":"640661","uid":"654d3759-1128-49d5-9efd-62d7330826f6"}}],"ports":[{"name":"web","port":9093,"protocol":"TCP"}]}]},{"metadata":{"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2021-10-25T16:45:16Z"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-operator","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:subsets":{}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:17.000Z"}],"name":"prometheus-kube-prometheus-operator","namespace":"default","resourceVersion":"640543","uid":"fe317bf2-52a9-438d-885f-b444692aa48d"},"subsets":[{"addresses":[{"ip":"10.1.0.238","nodeName":"docker-desktop","targetRef":{"kind":"Pod","name":"prometheus-kube-prometheus-operator-bcdfdbc79-bpr5l","namespace":"default","resourceVersion":"640542","uid":"b8ebba9d-8cd8-4198-ac45-ff4e506bb62e"}}],"ports":[{"name":"https","port":10250,"protocol":"TCP"}]}]},{"metadata":{"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2021-10-25T16:45:21Z"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-prometheus","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus","self-monitor":"true"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{},"f:self-monitor":{}}},"f:subsets":{}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:21.000Z"}],"name":"prometheus-kube-prometheus-prometheus","namespace":"default","resourceVersion":"640620","uid":"4c992744-6221-444f-aa5d-f523075af8df"},"subsets":[{"addresses":[{"ip":"10.1.0.242","nodeName":"docker-desktop","targetRef":{"kind":"Pod","name":"prometheus-prometheus-kube-prometheus-prometheus-0","namespace":"default","resourceVersion":"640619","uid":"a66e2bc3-1a13-4574-8899-aabc8975b400"}}],"ports":[{"name":"web","port":9090,"protocol":"TCP"}]}]},{"metadata":{"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2021-10-25T16:45:24Z"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"kube-state-metrics","helm.sh/chart":"kube-state-metrics-3.5.2"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:helm.sh/chart":{}}},"f:subsets":{}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:19.000Z"}],"name":"prometheus-kube-state-metrics","namespace":"default","resourceVersion":"640648","uid":"fd300c38-27a0-4f11-9be9-b1868370a07b"},"subsets":[{"addresses":[{"ip":"10.1.0.240","nodeName":"docker-desktop","targetRef":{"kind":"Pod","name":"prometheus-kube-state-metrics-58c5cd6ddb-wzpxn","namespace":"default","resourceVersion":"640646","uid":"c78a67cc-72f2-4274-a308-1418f8cb658d"}}],"ports":[{"name":"http","port":8080,"protocol":"TCP"}]}]},{"metadata":{"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2021-10-25T16:45:21Z"},"creationTimestamp":"2021-10-25T16:45:16.000Z","labels":{"operated-prometheus":"true","service.kubernetes.io/headless":""},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:labels":{".":{},"f:operated-prometheus":{},"f:service.kubernetes.io/headless":{}}},"f:subsets":{}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:21.000Z"}],"name":"prometheus-operated","namespace":"default","resourceVersion":"640621","uid":"d5eb1d73-e1ef-4c0e-b279-3f0caa47135d"},"subsets":[{"addresses":[{"hostname":"prometheus-prometheus-kube-prometheus-prometheus-0","ip":"10.1.0.242","nodeName":"docker-desktop","targetRef":{"kind":"Pod","name":"prometheus-prometheus-kube-prometheus-prometheus-0","namespace":"default","resourceVersion":"640619","uid":"a66e2bc3-1a13-4574-8899-aabc8975b400"}}],"ports":[{"name":"web","port":9090,"protocol":"TCP"}]}]},{"metadata":{"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2021-10-25T16:45:14Z"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"prometheus-node-exporter","app.kubernetes.io/managed-by":"Helm","chart":"prometheus-node-exporter-2.0.4","heritage":"Helm","jobLabel":"node-exporter","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/managed-by":{},"f:chart":{},"f:heritage":{},"f:jobLabel":{},"f:release":{}}},"f:subsets":{}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-prometheus-node-exporter","namespace":"default","resourceVersion":"640409","uid":"667edafb-d630-4849-aa06-78c60775c198"},"subsets":[{"notReadyAddresses":[{"ip":"192.168.65.4","nodeName":"docker-desktop","targetRef":{"kind":"Pod","name":"prometheus-prometheus-node-exporter-8nzfh","namespace":"default","resourceVersion":"640403","uid":"86144d4d-38dc-41ea-b2fc-d1509235c51c"}}],"ports":[{"name":"metrics","port":9100,"protocol":"TCP"}]}]}],"serviceaccounts":[{"metadata":{"creationTimestamp":"2021-10-14T21:42:03.000Z","name":"default","namespace":"default","resourceVersion":"383","uid":"82c0bd55-a416-4a01-bf6d-2e00e38fa6f7"},"secrets":[{"name":"default-token-dz5vd"}]},{"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"8.2.1","helm.sh/chart":"grafana-6.17.2"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:helm.sh/chart":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:secrets":{".":{},"k:{\"name\":\"prometheus-grafana-token-z74cb\"}":{".":{},"f:name":{}}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-grafana","namespace":"default","resourceVersion":"640298","uid":"08221515-1418-4ce1-9d47-d2113824773d"},"secrets":[{"name":"prometheus-grafana-token-z74cb"}]},{"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"8.2.1","helm.sh/chart":"grafana-6.17.2"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:helm.sh/chart":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:secrets":{".":{},"k:{\"name\":\"prometheus-grafana-test-token-9qzpr\"}":{".":{},"f:name":{}}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-grafana-test","namespace":"default","resourceVersion":"640296","uid":"64994c4e-8004-4095-b53f-3de324ac7ce4"},"secrets":[{"name":"prometheus-grafana-test-token-9qzpr"}]},{"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-alertmanager","app.kubernetes.io/component":"alertmanager","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"kube-prometheus-stack-alertmanager","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:secrets":{".":{},"k:{\"name\":\"prometheus-kube-prometheus-alertmanager-token-s52vp\"}":{".":{},"f:name":{}}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-alertmanager","namespace":"default","resourceVersion":"640318","uid":"1cc0c029-851d-43a1-9655-7304d54f55c7"},"secrets":[{"name":"prometheus-kube-prometheus-alertmanager-token-s52vp"}]},{"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-operator","app.kubernetes.io/component":"prometheus-operator","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"kube-prometheus-stack-prometheus-operator","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:secrets":{".":{},"k:{\"name\":\"prometheus-kube-prometheus-operator-token-7rdxr\"}":{".":{},"f:name":{}}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-operator","namespace":"default","resourceVersion":"640319","uid":"b9d8f2a5-e5ee-42b1-9acb-295f73dcb792"},"secrets":[{"name":"prometheus-kube-prometheus-operator-token-7rdxr"}]},{"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-prometheus","app.kubernetes.io/component":"prometheus","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"kube-prometheus-stack-prometheus","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:secrets":{".":{},"k:{\"name\":\"prometheus-kube-prometheus-prometheus-token-wq4kb\"}":{".":{},"f:name":{}}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-prometheus","namespace":"default","resourceVersion":"640295","uid":"fd830844-62b7-41a1-8edb-c0b0f8c412b0"},"secrets":[{"name":"prometheus-kube-prometheus-prometheus-token-wq4kb"}]},{"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"kube-state-metrics","helm.sh/chart":"kube-state-metrics-3.5.2"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:helm.sh/chart":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:secrets":{".":{},"k:{\"name\":\"prometheus-kube-state-metrics-token-l8lbm\"}":{".":{},"f:name":{}}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-state-metrics","namespace":"default","resourceVersion":"640294","uid":"d4caa401-ec3d-4108-80ac-7430f3fc5245"},"secrets":[{"name":"prometheus-kube-state-metrics-token-l8lbm"}]},{"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"prometheus-node-exporter","app.kubernetes.io/managed-by":"Helm","chart":"prometheus-node-exporter-2.0.4","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/managed-by":{},"f:chart":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:secrets":{".":{},"k:{\"name\":\"prometheus-prometheus-node-exporter-token-xx4w7\"}":{".":{},"f:name":{}}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-prometheus-node-exporter","namespace":"default","resourceVersion":"640297","uid":"55ca350a-eb2c-435f-95e1-297b8ac7023b"},"secrets":[{"name":"prometheus-prometheus-node-exporter-token-xx4w7"}]}],"nodes":[{"metadata":{"annotations":{"kubeadm.alpha.kubernetes.io/cri-socket":"/var/run/dockershim.sock","node.alpha.kubernetes.io/ttl":"0","volumes.kubernetes.io/controller-managed-attach-detach":"true"},"creationTimestamp":"2021-10-14T21:41:56.000Z","labels":{"beta.kubernetes.io/arch":"amd64","beta.kubernetes.io/os":"linux","kubernetes.io/arch":"amd64","kubernetes.io/hostname":"docker-desktop","kubernetes.io/os":"linux","node-role.kubernetes.io/control-plane":"","node-role.kubernetes.io/master":"","node.kubernetes.io/exclude-from-external-load-balancers":""},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubeadm.alpha.kubernetes.io/cri-socket":{}},"f:labels":{"f:node-role.kubernetes.io/control-plane":{},"f:node-role.kubernetes.io/master":{},"f:node.kubernetes.io/exclude-from-external-load-balancers":{}}}},"manager":"kubeadm","operation":"Update","time":"2021-10-14T21:41:58.000Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:node.alpha.kubernetes.io/ttl":{}}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-14T21:42:03.000Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:volumes.kubernetes.io/controller-managed-attach-detach":{}},"f:labels":{".":{},"f:beta.kubernetes.io/arch":{},"f:beta.kubernetes.io/os":{},"f:kubernetes.io/arch":{},"f:kubernetes.io/hostname":{},"f:kubernetes.io/os":{}}},"f:status":{"f:addresses":{"k:{\"type\":\"InternalIP\"}":{"f:address":{}}},"f:conditions":{"k:{\"type\":\"DiskPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"MemoryPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"PIDPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"Ready\"}":{"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{}}},"f:images":{},"f:nodeInfo":{"f:bootID":{}}}},"manager":"kubelet","operation":"Update","time":"2021-10-19T05:58:29.000Z"}],"name":"docker-desktop","resourceVersion":"651855","uid":"a606f08d-8b2e-4254-ac2c-5c81c98bcecf"},"spec":{},"status":{"addresses":[{"address":"192.168.65.4","type":"InternalIP"},{"address":"docker-desktop","type":"Hostname"}],"allocatable":{"cpu":"16","ephemeral-storage":"242541353378","hugepages-1Gi":"0","hugepages-2Mi":"0","memory":"26102636Ki","pods":"110"},"capacity":{"cpu":"16","ephemeral-storage":"263174212Ki","hugepages-1Gi":"0","hugepages-2Mi":"0","memory":"26205036Ki","pods":"110"},"conditions":[{"lastHeartbeatTime":"2021-10-25T19:00:06.000Z","lastTransitionTime":"2021-10-14T21:41:54.000Z","message":"kubelet has sufficient memory available","reason":"KubeletHasSufficientMemory","status":"False","type":"MemoryPressure"},{"lastHeartbeatTime":"2021-10-25T19:00:06.000Z","lastTransitionTime":"2021-10-14T21:41:54.000Z","message":"kubelet has no disk pressure","reason":"KubeletHasNoDiskPressure","status":"False","type":"DiskPressure"},{"lastHeartbeatTime":"2021-10-25T19:00:06.000Z","lastTransitionTime":"2021-10-14T21:41:54.000Z","message":"kubelet has sufficient PID available","reason":"KubeletHasSufficientPID","status":"False","type":"PIDPressure"},{"lastHeartbeatTime":"2021-10-25T19:00:06.000Z","lastTransitionTime":"2021-10-14T21:42:26.000Z","message":"kubelet is posting ready status","reason":"KubeletReady","status":"True","type":"Ready"}],"daemonEndpoints":{"kubeletEndpoint":{"Port":10250}},"images":[{"names":["docker/desktop-kubernetes@sha256:d78aeb4fba8b86c5fc2faec67842cab37b36fde2f21bb75c59db943ca9cc0ee8","docker/desktop-kubernetes:kubernetes-v1.21.5-cni-v0.8.5-critools-v1.17.0-debian"],"sizeBytes":290007723},{"names":["k8s.gcr.io/ingress-nginx/controller@sha256:545cff00370f28363dad31e3b59a94ba377854d3a11f18988f5f9e56841ef9ef"],"sizeBytes":284052202},{"names":["k8s.gcr.io/etcd@sha256:4ad90a11b55313b182afc186b9876c8e891531b8db4c9bf1541953021618d0e2","k8s.gcr.io/etcd:3.4.13-0"],"sizeBytes":253392289},{"names":["grafana/grafana@sha256:b3ec90dcb532054144a039760a71311b60b17db22b4711541eb72b08d583c52e","grafana/grafana:8.2.1"],"sizeBytes":248790293},{"names":["grafana/grafana@sha256:b071787d69cf1e8ece704838475ffd24ccbd46fad6f0b141e5922ee8dd39c30d","grafana/grafana:7.5.2"],"sizeBytes":203540729},{"names":["quay.io/prometheus/prometheus@sha256:5c030438c1e4c86bdc7428f24ee1ad18476eefdfa8a7f76a8ccc9b74f1970d81","quay.io/prometheus/prometheus:v2.28.1"],"sizeBytes":188863990},{"names":["<none>@<none>","<none>:<none>"],"sizeBytes":126113528},{"names":["k8s.gcr.io/kube-apiserver@sha256:2a88e173873a9870bea873f3907557aefee3fe6887859b648cea06a38fa08227","k8s.gcr.io/kube-apiserver:v1.21.5"],"sizeBytes":125850013},{"names":["klintonkuach/redis:latest"],"sizeBytes":124008842},{"names":["klintonkuach/event-bus@sha256:48ccc25b7d16a3df8d6b7afe7409eb8de80c3d08adf51da0bd6f8d9cfad9b1c3"],"sizeBytes":120512619},{"names":["klintonkuach/event-bus@sha256:5c142cb9ea688c6367afe225ea8c2c002f187bfa8eeb6a61456a2c9ada6c228e","klintonkuach/event-bus:latest"],"sizeBytes":120512618},{"names":["klintonkuach/event-bus@sha256:c1b7dc7f8979ba9454e45b7a22d4d777f2d1737e28abdd628915a49212d97b98"],"sizeBytes":120512600},{"names":["klintonkuach/comments@sha256:5e68acca2d6cb1cf861c391250ba5a45742208d3dd7b51941d59a9baa567967d","klintonkuach/comments:latest"],"sizeBytes":120420814},{"names":["<none>@<none>","<none>:<none>"],"sizeBytes":120420806},{"names":["klintonkuach/query@sha256:92d1e26cf677c0ac81003550c68383c765a0177bd892f0ad1a418e3f4e0fccd8","klintonkuach/query:latest"],"sizeBytes":120420485},{"names":["<none>@<none>","<none>:<none>"],"sizeBytes":120420481},{"names":["klintonkuach/posts@sha256:0d8c7af72d0b418bb7a34fd93de135a801b9438860b5ba77d278c7b81f398a32","klintonkuach/posts:latest"],"sizeBytes":120420117},{"names":["klintonkuach/posts@sha256:5eaadcdc32c22bf669f9b3015e5891403929afc579d407cf3c943488b660e467"],"sizeBytes":120420113},{"names":["klintonkuach/posts:0.0.5"],"sizeBytes":120420113},{"names":["klintonkuach/posts:0.0.1"],"sizeBytes":120420091},{"names":["klintonkuach/moderation@sha256:082eac5c963b1480371792a42f0b362d6b0b6b76b027d0a92a9746bd888055c7","klintonkuach/moderation:latest"],"sizeBytes":120362720},{"names":["<none>@<none>","<none>:<none>"],"sizeBytes":120362716},{"names":["k8s.gcr.io/kube-controller-manager@sha256:1c3ae19287a122c4d58b6b7ffb030ea8962edfae798d9986445f85cdc1de1844","k8s.gcr.io/kube-controller-manager:v1.21.5"],"sizeBytes":119886835},{"names":["klintonkuach/simpleweb:latest"],"sizeBytes":114636796},{"names":["<none>@<none>","<none>:<none>"],"sizeBytes":114636788},{"names":["<none>@<none>","<none>:<none>"],"sizeBytes":114636450},{"names":["<none>@<none>","<none>:<none>"],"sizeBytes":114636449},{"names":["redis@sha256:a89cb097693dd354de598d279c304a1c73ee550fbfff6d9ee515568e0c749cfe","redis:latest"],"sizeBytes":112691012},{"names":["<none>@<none>","<none>:<none>"],"sizeBytes":109825773},{"names":["node@sha256:417b3856d2e5d06385123f3924c36f5735fb1f690289ca69f2ac9c35fd06c009","node:alpine"],"sizeBytes":109824885},{"names":["k8s.gcr.io/kube-proxy@sha256:b9f3f8764f5b74085edbed44202aa83dab3555638ea9de182b9f79b6728bee5b","k8s.gcr.io/kube-proxy:v1.21.5"],"sizeBytes":103542696},{"names":["quay.io/kiwigrid/k8s-sidecar@sha256:35654389f8a9b7816193a4811cf3ceb6cf309ece8874e84b3d2d8399e618059b","quay.io/kiwigrid/k8s-sidecar:1.14.2"],"sizeBytes":90483307},{"names":["quay.io/prometheus/alertmanager@sha256:624c1a5063c7c80635081a504c3e1b020d89809651978eb5d0b652a394f3022d","quay.io/prometheus/alertmanager:v0.22.2"],"sizeBytes":51591341},{"names":["k8s.gcr.io/kube-scheduler@sha256:af426d1982a88ed5a4facd0cac3d670fee77575ed9d7cf5e98dc7b653f8f8ceb","k8s.gcr.io/kube-scheduler:v1.21.5"],"sizeBytes":50848503},{"names":["k8s.gcr.io/ingress-nginx/kube-webhook-certgen@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660"],"sizeBytes":47736388},{"names":["quay.io/prometheus-operator/prometheus-operator@sha256:ab4f480f2cc65e98f1b4dfb93eb3a41410036359c238fdd60bb3f59deca8d522","quay.io/prometheus-operator/prometheus-operator:v0.50.0"],"sizeBytes":47233225},{"names":["k8s.gcr.io/ingress-nginx/kube-webhook-certgen@sha256:f3b6b39a6062328c095337b4cadcefd1612348fdd5190b1dcbcb9b9e90bd8068"],"sizeBytes":46747265},{"names":["k8s.gcr.io/coredns/coredns@sha256:cc8fb77bc2a0541949d1d9320a641b82fd392b0d3d8145469ca4709ae769980e","k8s.gcr.io/coredns/coredns:v1.8.0"],"sizeBytes":42454755},{"names":["docker/desktop-storage-provisioner@sha256:115d77efe6e256cefbcdf1d3292bede9339ef3952a2a83393cea217a3ffdef36","docker/desktop-storage-provisioner:v2.0"],"sizeBytes":41850220},{"names":["k8s.gcr.io/kube-state-metrics/kube-state-metrics@sha256:0ccff0db0a342d264c8f4fe5a0841d727fbb8e6cc0c7e741441771f165262182","k8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.2.0"],"sizeBytes":38359453},{"names":["quay.io/prometheus/node-exporter@sha256:a990408ed288669bbad5b5b374fe1584e54825cde4a911c1a3d6301a907a030c","quay.io/prometheus/node-exporter:v1.2.2"],"sizeBytes":21171152},{"names":["docker/desktop-vpnkit-controller@sha256:b5bcb3a7172ae44d3a1df2e74a1b4d4e10d5562efe1d3c9197b23b383de70a86","docker/desktop-vpnkit-controller:v2.0"],"sizeBytes":21034536},{"names":["quay.io/prometheus-operator/prometheus-config-reloader@sha256:8b42df399f6d8085d9c7377e4f5508c10791d19cd1df00ab41de856741c65d28","quay.io/prometheus-operator/prometheus-config-reloader:v0.50.0"],"sizeBytes":12445897},{"names":["<none>@<none>","<none>:<none>"],"sizeBytes":10139792},{"names":["<none>@<none>","<none>:<none>"],"sizeBytes":10139409},{"names":["alpine@sha256:e1c082e3d3c45cccac829840a25941e679c25d438cc8412c2fa221cf1a824e6a","alpine:latest"],"sizeBytes":5595292},{"names":["busybox@sha256:f7ca5a32c10d51aeda3b4d01c61c6061f497893d7f6628b92f822f7117182a57","busybox:latest"],"sizeBytes":1235724},{"names":["k8s.gcr.io/pause@sha256:6c3835cab3980f11b83277305d0d736051c32b17606f5ec59f1dda67c9ba3810","k8s.gcr.io/pause:3.4.1"],"sizeBytes":682696},{"names":["hello-world@sha256:9ade9cc2e26189a19c2e8854b9c8f1e14829b51c55a630ee675a5a9540ef6ccf","hello-world:latest"],"sizeBytes":13256}],"nodeInfo":{"architecture":"amd64","bootID":"0d70b353-38a5-435d-a1c0-28c026d65953","containerRuntimeVersion":"docker://20.10.8","kernelVersion":"5.10.16.3-microsoft-standard-WSL2","kubeProxyVersion":"v1.21.5","kubeletVersion":"v1.21.5","machineID":"ca6c6eaf-4ff6-4e18-9584-289e8fddf60a","operatingSystem":"linux","osImage":"Docker Desktop","systemUUID":"ca6c6eaf-4ff6-4e18-9584-289e8fddf60a"}}}],"configmaps":[{"data":{"ca.crt":"-----BEGIN CERTIFICATE-----\nMIIC5zCCAc+gAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIxMTAxNDIxNDA1M1oXDTMxMTAxMjIxNDA1M1owFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANyL\nCyDDpBu4+2flHV1PDsladBFNEJt+PFjEz27KuHYdNcm//nz9Zv81nbjbmiYPC2Es\n32JKVBEM11na+aKsn+psm1xKqwuvywgnM6beHnDTnLJQUs7oP8XUPotl2yh4WzUw\ng2naRGxFEaFQn7cuiyQIEf/EN8qWRkzO7EmVa6+3vEUUPZZPTIsaOce6hbCHsR+z\nA2vk8HlSbLtqBzSYuhDGo9hmstq3wrCFpdd/+5ucavRU7hQfL2HctNTYYAGJM5tV\nVZ0VQeSKzMeSRXWCRN0ZHEI7/QSSDEP6PqsFqP43x/18I3BL7FspLri+VuebAqco\nWAY0pxOxjXm1b5nDX5kCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFC6OUzQHjOQbi2PbMYUyYd/t7kmBMA0GCSqGSIb3\nDQEBCwUAA4IBAQA2L6MA2tFZQoHoGyveshl2gBWIjOYYXTu14PrMe/rAatG2Vlhq\nIQEvZZcwB8qZBquNbMPjD2FVGe4Ww1GpJ6utUXZkvxmvGauYSv2K8173iFFbkeCo\ngnFM+pdlvLaMMTggO/lbcXEmjc1Rr6RtYlBkBJ5ik3Aj9rU0vx6nhoWSxuZ0Cn61\nnTBMPg7KElvhS7Hn5vlkgz2c+KTj5qE1QtaRxo3poI0KRdwdY9GZfIUTZ1D25ox+\n+1dYaQvP7rS2tpZ6L/f+i4frPgDgK6w80vonBC3ARSNULr1kY/ytPDZ4780/8tuH\nl4JBOW1afjUB3ataGIjT7qNTff7ok+nsPTdc\n-----END CERTIFICATE-----\n"},"metadata":{"creationTimestamp":"2021-10-14T21:42:03.000Z","managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:ca.crt":{}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-10-14T21:42:03.000Z"}],"name":"kube-root-ca.crt","namespace":"default","resourceVersion":"390","uid":"0371caac-3f31-4fb1-948b-a91d702c1002"}},{"data":{"grafana.ini":"[analytics]\ncheck_for_updates = true\n[grafana_net]\nurl = https://grafana.net\n[log]\nmode = console\n[paths]\ndata = /var/lib/grafana/\nlogs = /var/log/grafana\nplugins = /var/lib/grafana/plugins\nprovisioning = /etc/grafana/provisioning\n"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"8.2.1","helm.sh/chart":"grafana-6.17.2"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:grafana.ini":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:helm.sh/chart":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-grafana","namespace":"default","resourceVersion":"640282","uid":"e4fe858a-a618-4706-8224-930e5a8904a0"}},{"data":{"provider.yaml":"apiVersion: 1\nproviders:\n- name: 'sidecarProvider'\n  orgId: 1\n  folder: ''\n  type: file\n  disableDeletion: false\n  allowUiUpdates: false\n  updateIntervalSeconds: 30\n  options:\n    foldersFromFilesStructure: false\n    path: /tmp/dashboards"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"8.2.1","helm.sh/chart":"grafana-6.17.2"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:provider.yaml":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:helm.sh/chart":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-grafana-config-dashboards","namespace":"default","resourceVersion":"640284","uid":"f3d50fd7-2308-46d5-aa56-790024002281"}},{"data":{"run.sh":"@test \"Test Health\" {\n  url=\"http://prometheus-grafana/api/health\"\n\n  code=$(wget --server-response --spider --timeout 10 --tries 1 ${url} 2>&1 | awk '/^  HTTP/{print $2}')\n  [ \"$code\" == \"200\" ]\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"8.2.1","helm.sh/chart":"grafana-6.17.2"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:run.sh":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:helm.sh/chart":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-grafana-test","namespace":"default","resourceVersion":"640283","uid":"0c9e452b-40ec-4eb5-b143-1150f8f71339"}},{"data":{"alertmanager-overview.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\": 1,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"refresh\": \"30s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 2,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(alertmanager_alerts{namespace=\\\"$namespace\\\",service=\\\"$service\\\"}) by (namespace,service,instance)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Alerts\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"none\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"none\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 3,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(alertmanager_alerts_received_total{namespace=\\\"$namespace\\\",service=\\\"$service\\\"}[5m])) by (namespace,service,instance)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Received\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"sum(rate(alertmanager_alerts_invalid_total{namespace=\\\"$namespace\\\",service=\\\"$service\\\"}[5m])) by (namespace,service,instance)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Invalid\",\n                            \"refId\": \"B\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Alerts receive rate\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Alerts\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 4,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": \"integration\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(alertmanager_notifications_total{namespace=\\\"$namespace\\\",service=\\\"$service\\\", integration=\\\"$integration\\\"}[5m])) by (integration,namespace,service,instance)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Total\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"sum(rate(alertmanager_notifications_failed_total{namespace=\\\"$namespace\\\",service=\\\"$service\\\", integration=\\\"$integration\\\"}[5m])) by (integration,namespace,service,instance)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Failed\",\n                            \"refId\": \"B\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"$integration: Notifications Send Rate\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 5,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": \"integration\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"histogram_quantile(0.99,\\n  sum(rate(alertmanager_notification_latency_seconds_bucket{namespace=\\\"$namespace\\\",service=\\\"$service\\\", integration=\\\"$integration\\\"}[5m])) by (le,namespace,service,instance)\\n) \\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} 99th Percentile\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"histogram_quantile(0.50,\\n  sum(rate(alertmanager_notification_latency_seconds_bucket{namespace=\\\"$namespace\\\",service=\\\"$service\\\", integration=\\\"$integration\\\"}[5m])) by (le,namespace,service,instance)\\n) \\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Median\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"sum(rate(alertmanager_notification_latency_seconds_sum{namespace=\\\"$namespace\\\",service=\\\"$service\\\", integration=\\\"$integration\\\"}[5m])) by (namespace,service,instance)\\n/\\nsum(rate(alertmanager_notification_latency_seconds_count{namespace=\\\"$namespace\\\",service=\\\"$service\\\", integration=\\\"$integration\\\"}[5m])) by (namespace,service,instance)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Average\",\n                            \"refId\": \"C\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"$integration: Notification Duration\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Notifications\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"alertmanager-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"Prometheus\",\n                    \"value\": \"Prometheus\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"namespace\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(alertmanager_alerts, namespace)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"service\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(alertmanager_alerts, service)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"all\",\n                    \"value\": \"$__all\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": true,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"integration\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(alertmanager_notifications_total{integration=~\\\".*\\\"}, integration)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Alertmanager / Overview\",\n    \"uid\": \"alertmanager-overview\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:alertmanager-overview.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-alertmanager-overview","namespace":"default","resourceVersion":"640304","uid":"1ee54347-7395-4c19-974c-d403ac49bfe6"}},{"data":{"apiserver.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"panels\": [\n        {\n            \"content\": \"The SLO (service level objective) and other metrics displayed on this dashboard are for informational purposes only.\",\n            \"datasource\": null,\n            \"description\": \"The SLO (service level objective) and other metrics displayed on this dashboard are for informational purposes only.\",\n            \"gridPos\": {\n                \"h\": 2,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"mode\": \"markdown\",\n            \"span\": 12,\n            \"title\": \"Notice\",\n            \"type\": \"text\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"#299c46\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"#d44a3a\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"decimals\": 3,\n                    \"description\": \"How many percent of requests (both read and write) in 30 days have been answered successfully and fast enough?\",\n                    \"format\": \"percentunit\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": false,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 3,\n                    \"interval\": null,\n                    \"links\": [\n\n                    ],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 4,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"full\": false,\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": false\n                    },\n                    \"tableColumn\": \"\",\n                    \"targets\": [\n                        {\n                            \"expr\": \"apiserver_request:availability30d{verb=\\\"all\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"\",\n                    \"title\": \"Availability (30d) > 99.000%\",\n                    \"tooltip\": {\n                        \"shared\": false\n                    },\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"80%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"N/A\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"avg\"\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"decimals\": 3,\n                    \"description\": \"How much error budget is left looking at our 0.990% availability guarantees?\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 4,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 8,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"100 * (apiserver_request:availability30d{verb=\\\"all\\\", cluster=\\\"$cluster\\\"} - 0.990000)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"errorbudget\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"ErrorBudget (30d) > 99.000%\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"decimals\": 3,\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"decimals\": 3,\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"#299c46\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"#d44a3a\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"decimals\": 3,\n                    \"description\": \"How many percent of read requests (LIST,GET) in 30 days have been answered successfully and fast enough?\",\n                    \"format\": \"percentunit\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": false,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 5,\n                    \"interval\": null,\n                    \"links\": [\n\n                    ],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 3,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"full\": false,\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": false\n                    },\n                    \"tableColumn\": \"\",\n                    \"targets\": [\n                        {\n                            \"expr\": \"apiserver_request:availability30d{verb=\\\"read\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"\",\n                    \"title\": \"Read Availability (30d)\",\n                    \"tooltip\": {\n                        \"shared\": false\n                    },\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"80%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"N/A\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"avg\"\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"description\": \"How many read requests (LIST,GET) per second do the apiservers get by code?\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 6,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"/2../i\",\n                            \"color\": \"#56A64B\"\n                        },\n                        {\n                            \"alias\": \"/3../i\",\n                            \"color\": \"#F2CC0C\"\n                        },\n                        {\n                            \"alias\": \"/4../i\",\n                            \"color\": \"#3274D9\"\n                        },\n                        {\n                            \"alias\": \"/5../i\",\n                            \"color\": \"#E02F44\"\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 3,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum by (code) (code_resource:apiserver_request_total:rate5m{verb=\\\"read\\\", cluster=\\\"$cluster\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{ code }}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Read SLI - Requests\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"reqps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"reqps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"description\": \"How many percent of read requests (LIST,GET) per second are returned with errors (5xx)?\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 7,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 3,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\\\"read\\\",code=~\\\"5..\\\", cluster=\\\"$cluster\\\"}) / sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\\\"read\\\", cluster=\\\"$cluster\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{ resource }}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Read SLI - Errors\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"description\": \"How many seconds is the 99th percentile for reading (LIST|GET) a given resource?\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 8,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 3,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"cluster_quantile:apiserver_request_duration_seconds:histogram_quantile{verb=\\\"read\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{ resource }}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Read SLI - Duration\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"#299c46\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"#d44a3a\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"decimals\": 3,\n                    \"description\": \"How many percent of write requests (POST|PUT|PATCH|DELETE) in 30 days have been answered successfully and fast enough?\",\n                    \"format\": \"percentunit\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": false,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 9,\n                    \"interval\": null,\n                    \"links\": [\n\n                    ],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 3,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"full\": false,\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": false\n                    },\n                    \"tableColumn\": \"\",\n                    \"targets\": [\n                        {\n                            \"expr\": \"apiserver_request:availability30d{verb=\\\"write\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"\",\n                    \"title\": \"Write Availability (30d)\",\n                    \"tooltip\": {\n                        \"shared\": false\n                    },\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"80%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"N/A\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"avg\"\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"description\": \"How many write requests (POST|PUT|PATCH|DELETE) per second do the apiservers get by code?\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 10,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"/2../i\",\n                            \"color\": \"#56A64B\"\n                        },\n                        {\n                            \"alias\": \"/3../i\",\n                            \"color\": \"#F2CC0C\"\n                        },\n                        {\n                            \"alias\": \"/4../i\",\n                            \"color\": \"#3274D9\"\n                        },\n                        {\n                            \"alias\": \"/5../i\",\n                            \"color\": \"#E02F44\"\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 3,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum by (code) (code_resource:apiserver_request_total:rate5m{verb=\\\"write\\\", cluster=\\\"$cluster\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{ code }}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Write SLI - Requests\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"reqps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"reqps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"description\": \"How many percent of write requests (POST|PUT|PATCH|DELETE) per second are returned with errors (5xx)?\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 11,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 3,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\\\"write\\\",code=~\\\"5..\\\", cluster=\\\"$cluster\\\"}) / sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\\\"write\\\", cluster=\\\"$cluster\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{ resource }}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Write SLI - Errors\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"description\": \"How many seconds is the 99th percentile for writing (POST|PUT|PATCH|DELETE) a given resource?\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 12,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 3,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"cluster_quantile:apiserver_request_duration_seconds:histogram_quantile{verb=\\\"write\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{ resource }}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Write SLI - Duration\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 13,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(workqueue_adds_total{job=\\\"apiserver\\\", instance=~\\\"$instance\\\", cluster=\\\"$cluster\\\"}[5m])) by (instance, name)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} {{name}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Work Queue Add Rate\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 14,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(workqueue_depth{job=\\\"apiserver\\\", instance=~\\\"$instance\\\", cluster=\\\"$cluster\\\"}[5m])) by (instance, name)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} {{name}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Work Queue Depth\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 15,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{job=\\\"apiserver\\\", instance=~\\\"$instance\\\", cluster=\\\"$cluster\\\"}[5m])) by (instance, name, le))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} {{name}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Work Queue Latency\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 16,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"process_resident_memory_bytes{job=\\\"apiserver\\\",instance=~\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 17,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(process_cpu_seconds_total{job=\\\"apiserver\\\",instance=~\\\"$instance\\\", cluster=\\\"$cluster\\\"}[5m])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 18,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"go_goroutines{job=\\\"apiserver\\\",instance=~\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Goroutines\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": \"cluster\",\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(apiserver_request_total, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"instance\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(apiserver_request_total{job=\\\"apiserver\\\", cluster=\\\"$cluster\\\"}, instance)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / API server\",\n    \"uid\": \"09ec8aa1e996d6ffcd6817bbaff4db1b\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:apiserver.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-apiserver","namespace":"default","resourceVersion":"640287","uid":"ce241e1b-3d81-4c36-bc31-8df2c301d9f2"}},{"data":{"cluster-total.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n            {\n                \"builtIn\": 1,\n                \"datasource\": \"-- Grafana --\",\n                \"enable\": true,\n                \"hide\": true,\n                \"iconColor\": \"rgba(0, 211, 255, 1)\",\n                \"name\": \"Annotations & Alerts\",\n                \"type\": \"dashboard\"\n            }\n        ]\n    },\n    \"editable\": true,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"panels\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"panels\": [\n\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Current Bandwidth\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": true,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 2,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 1\n            },\n            \"id\": 3,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"sort\": \"current\",\n                \"sortDesc\": true,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": false,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"minSpan\": 24,\n            \"nullPointMode\": \"null\",\n            \"paceLength\": 10,\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"span\": 24,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"{{namespace}}\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Current Rate of Bytes Received\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"series\",\n                \"name\": null,\n                \"show\": false,\n                \"values\": [\n                    \"current\"\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": true,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 2,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 1\n            },\n            \"id\": 4,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"sort\": \"current\",\n                \"sortDesc\": true,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": false,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"minSpan\": 24,\n            \"nullPointMode\": \"null\",\n            \"paceLength\": 10,\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"span\": 24,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"{{namespace}}\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Current Rate of Bytes Transmitted\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"series\",\n                \"name\": null,\n                \"show\": false,\n                \"values\": [\n                    \"current\"\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"columns\": [\n                {\n                    \"text\": \"Time\",\n                    \"value\": \"Time\"\n                },\n                {\n                    \"text\": \"Value #A\",\n                    \"value\": \"Value #A\"\n                },\n                {\n                    \"text\": \"Value #B\",\n                    \"value\": \"Value #B\"\n                },\n                {\n                    \"text\": \"Value #C\",\n                    \"value\": \"Value #C\"\n                },\n                {\n                    \"text\": \"Value #D\",\n                    \"value\": \"Value #D\"\n                },\n                {\n                    \"text\": \"Value #E\",\n                    \"value\": \"Value #E\"\n                },\n                {\n                    \"text\": \"Value #F\",\n                    \"value\": \"Value #F\"\n                },\n                {\n                    \"text\": \"Value #G\",\n                    \"value\": \"Value #G\"\n                },\n                {\n                    \"text\": \"Value #H\",\n                    \"value\": \"Value #H\"\n                },\n                {\n                    \"text\": \"namespace\",\n                    \"value\": \"namespace\"\n                }\n            ],\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fontSize\": \"90%\",\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 10\n            },\n            \"id\": 5,\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"minSpan\": 24,\n            \"nullPointMode\": \"null as zero\",\n            \"renderer\": \"flot\",\n            \"scroll\": true,\n            \"showHeader\": true,\n            \"sort\": {\n                \"col\": 0,\n                \"desc\": false\n            },\n            \"spaceLength\": 10,\n            \"span\": 24,\n            \"styles\": [\n                {\n                    \"alias\": \"Time\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Time\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"hidden\",\n                    \"unit\": \"short\"\n                },\n                {\n                    \"alias\": \"Current Bandwidth Received\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #A\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"Bps\"\n                },\n                {\n                    \"alias\": \"Current Bandwidth Transmitted\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #B\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"Bps\"\n                },\n                {\n                    \"alias\": \"Average Bandwidth Received\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #C\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"Bps\"\n                },\n                {\n                    \"alias\": \"Average Bandwidth Transmitted\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #D\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"Bps\"\n                },\n                {\n                    \"alias\": \"Rate of Received Packets\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #E\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"pps\"\n                },\n                {\n                    \"alias\": \"Rate of Transmitted Packets\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #F\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"pps\"\n                },\n                {\n                    \"alias\": \"Rate of Received Packets Dropped\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #G\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"pps\"\n                },\n                {\n                    \"alias\": \"Rate of Transmitted Packets Dropped\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #H\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"pps\"\n                },\n                {\n                    \"alias\": \"Namespace\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": true,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"d/8b7a8b326d7a6f1f04244066368c67af/kubernetes-networking-namespace-pods?orgId=1&refresh=30s&var-namespace=$__cell\",\n                    \"pattern\": \"namespace\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"short\"\n                }\n            ],\n            \"targets\": [\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"B\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sort_desc(avg(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"C\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sort_desc(avg(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"D\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"E\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"F\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"G\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"H\",\n                    \"step\": 10\n                }\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Current Status\",\n            \"type\": \"table\"\n        },\n        {\n            \"collapse\": true,\n            \"collapsed\": true,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 10\n            },\n            \"id\": 6,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": true,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 12,\n                        \"x\": 0,\n                        \"y\": 11\n                    },\n                    \"id\": 7,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"sort\": \"current\",\n                        \"sortDesc\": true,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": false,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 24,\n                    \"nullPointMode\": \"null\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 24,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(avg(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Average Rate of Bytes Received\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"series\",\n                        \"name\": null,\n                        \"show\": false,\n                        \"values\": [\n                            \"current\"\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": true,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 12,\n                        \"x\": 12,\n                        \"y\": 11\n                    },\n                    \"id\": 8,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"sort\": \"current\",\n                        \"sortDesc\": true,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": false,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 24,\n                    \"nullPointMode\": \"null\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 24,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(avg(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Average Rate of Bytes Transmitted\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"series\",\n                        \"name\": null,\n                        \"show\": false,\n                        \"values\": [\n                            \"current\"\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Average Bandwidth\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 11\n            },\n            \"id\": 9,\n            \"panels\": [\n\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Bandwidth History\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 2,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 12\n            },\n            \"id\": 10,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": true,\n                \"current\": true,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": true,\n                \"min\": true,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": true,\n            \"linewidth\": 2,\n            \"links\": [\n\n            ],\n            \"minSpan\": 24,\n            \"nullPointMode\": \"connected\",\n            \"paceLength\": 10,\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"span\": 24,\n            \"stack\": true,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"{{namespace}}\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Receive Bandwidth\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 2,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 21\n            },\n            \"id\": 11,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": true,\n                \"current\": true,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": true,\n                \"min\": true,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": true,\n            \"linewidth\": 2,\n            \"links\": [\n\n            ],\n            \"minSpan\": 24,\n            \"nullPointMode\": \"connected\",\n            \"paceLength\": 10,\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"span\": 24,\n            \"stack\": true,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"{{namespace}}\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Transmit Bandwidth\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"collapse\": true,\n            \"collapsed\": true,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 30\n            },\n            \"id\": 12,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 24,\n                        \"x\": 0,\n                        \"y\": 31\n                    },\n                    \"id\": 13,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": true,\n                        \"current\": true,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": true,\n                        \"min\": true,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 24,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 24,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 24,\n                        \"x\": 0,\n                        \"y\": 40\n                    },\n                    \"id\": 14,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": true,\n                        \"current\": true,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": true,\n                        \"min\": true,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 24,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 24,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Packets\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": true,\n            \"collapsed\": true,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 31\n            },\n            \"id\": 15,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 24,\n                        \"x\": 0,\n                        \"y\": 50\n                    },\n                    \"id\": 16,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": true,\n                        \"current\": true,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": true,\n                        \"min\": true,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 24,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 24,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 24,\n                        \"x\": 0,\n                        \"y\": 59\n                    },\n                    \"id\": 17,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": true,\n                        \"current\": true,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": true,\n                        \"min\": true,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 24,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 24,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\".+\\\"}[$interval:$resolution])) by (namespace))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 24,\n                        \"x\": 0,\n                        \"y\": 59\n                    },\n                    \"id\": 18,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": true,\n                        \"current\": true,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": true,\n                        \"min\": true,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n                        {\n                            \"targetBlank\": true,\n                            \"title\": \"What is TCP Retransmit?\",\n                            \"url\": \"https://accedian.com/enterprises/blog/network-packet-loss-retransmissions-and-duplicate-acknowledgements/\"\n                        }\n                    ],\n                    \"minSpan\": 24,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 24,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(sum(rate(node_netstat_Tcp_RetransSegs{cluster=\\\"$cluster\\\"}[$interval:$resolution]) / rate(node_netstat_Tcp_OutSegs{cluster=\\\"$cluster\\\"}[$interval:$resolution])) by (instance))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of TCP Retransmits out of all sent segments\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 24,\n                        \"x\": 0,\n                        \"y\": 59\n                    },\n                    \"id\": 19,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": true,\n                        \"current\": true,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": true,\n                        \"min\": true,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n                        {\n                            \"targetBlank\": true,\n                            \"title\": \"Why monitor SYN retransmits?\",\n                            \"url\": \"https://github.com/prometheus/node_exporter/issues/1023#issuecomment-408128365\"\n                        }\n                    ],\n                    \"minSpan\": 24,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 24,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(sum(rate(node_netstat_TcpExt_TCPSynRetrans{cluster=\\\"$cluster\\\"}[$interval:$resolution]) / rate(node_netstat_Tcp_RetransSegs{cluster=\\\"$cluster\\\"}[$interval:$resolution])) by (instance))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of TCP SYN Retransmits out of all retransmits\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Errors\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n\n    ],\n    \"schemaVersion\": 18,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"allValue\": null,\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"5m\",\n                    \"value\": \"5m\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"resolution\",\n                \"options\": [\n                    {\n                        \"selected\": false,\n                        \"text\": \"30s\",\n                        \"value\": \"30s\"\n                    },\n                    {\n                        \"selected\": true,\n                        \"text\": \"5m\",\n                        \"value\": \"5m\"\n                    },\n                    {\n                        \"selected\": false,\n                        \"text\": \"1h\",\n                        \"value\": \"1h\"\n                    }\n                ],\n                \"query\": \"30s,5m,1h\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"interval\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"5m\",\n                    \"value\": \"5m\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"interval\",\n                \"options\": [\n                    {\n                        \"selected\": true,\n                        \"text\": \"4h\",\n                        \"value\": \"4h\"\n                    }\n                ],\n                \"query\": \"4h\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"interval\",\n                \"useTags\": false\n            },\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(up{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / Networking / Cluster\",\n    \"uid\": \"ff635a025bcfea7bc3dd4f508990a3e9\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:cluster-total.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-cluster-total","namespace":"default","resourceVersion":"640299","uid":"ab4980c1-b2e7-4791-bd61-be9ff9d7db10"}},{"data":{"controller-manager.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"#299c46\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"#d44a3a\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"format\": \"none\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": false,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 2,\n                    \"interval\": null,\n                    \"links\": [\n\n                    ],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 2,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"full\": false,\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": false\n                    },\n                    \"tableColumn\": \"\",\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(up{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"\",\n                    \"title\": \"Up\",\n                    \"tooltip\": {\n                        \"shared\": false\n                    },\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"80%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"N/A\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"min\"\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 3,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 10,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(workqueue_adds_total{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\"}[5m])) by (cluster, instance, name)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}} {{instance}} {{name}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Work Queue Add Rate\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 4,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(workqueue_depth{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\"}[5m])) by (cluster, instance, name)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}} {{instance}} {{name}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Work Queue Depth\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 5,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\"}[5m])) by (cluster, instance, name, le))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}} {{instance}} {{name}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Work Queue Latency\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 6,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(rest_client_requests_total{job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\",code=~\\\"2..\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"2xx\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"sum(rate(rest_client_requests_total{job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\",code=~\\\"3..\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"3xx\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"sum(rate(rest_client_requests_total{job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\",code=~\\\"4..\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"4xx\",\n                            \"refId\": \"C\"\n                        },\n                        {\n                            \"expr\": \"sum(rate(rest_client_requests_total{job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\",code=~\\\"5..\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"5xx\",\n                            \"refId\": \"D\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Kube API Request Rate\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 7,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 8,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\", verb=\\\"POST\\\"}[5m])) by (verb, url, le))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{verb}} {{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Post Request Latency 99th Quantile\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 8,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\", verb=\\\"GET\\\"}[5m])) by (verb, url, le))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{verb}} {{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Get Request Latency 99th Quantile\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 9,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"process_resident_memory_bytes{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\",instance=~\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 10,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(process_cpu_seconds_total{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\",instance=~\\\"$instance\\\"}[5m])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 11,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"go_goroutines{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\",instance=~\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Goroutines\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": \"cluster\",\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(up{job=\\\"kube-controller-manager\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"instance\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(up{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\"}, instance)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / Controller Manager\",\n    \"uid\": \"72e0e05bef5099e5f049b05fdc429ed4\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:controller-manager.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-controller-manager","namespace":"default","resourceVersion":"640309","uid":"8d2b35ab-560d-4f46-8ca7-acba3e82f8a6"}},{"data":{"etcd.json":"{\n    \"annotations\": {\n        \"list\": []\n    },\n    \"description\": \"etcd sample Grafana dashboard with Prometheus\",\n    \"editable\": true,\n    \"gnetId\": null,\n    \"hideControls\": false,\n    \"id\": 6,\n    \"links\": [],\n    \"refresh\": \"10s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"editable\": true,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"rgba(245, 54, 54, 0.9)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(50, 172, 45, 0.97)\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"editable\": true,\n                    \"error\": false,\n                    \"format\": \"none\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": false,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"id\": 28,\n                    \"interval\": null,\n                    \"isNew\": true,\n                    \"links\": [],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 3,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"full\": false,\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": false\n                    },\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(etcd_server_has_leader{job=\\\"$cluster\\\"})\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"metric\": \"etcd_server_has_leader\",\n                            \"refId\": \"A\",\n                            \"step\": 20\n                        }\n                    ],\n                    \"thresholds\": \"\",\n                    \"title\": \"Up\",\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"200%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"N/A\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"avg\"\n                },\n                {\n                    \"aliasColors\": {},\n                    \"bars\": false,\n                    \"datasource\": \"$datasource\",\n                    \"editable\": true,\n                    \"error\": false,\n                    \"fill\": 0,\n                    \"id\": 23,\n                    \"isNew\": true,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": false,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [],\n                    \"nullPointMode\": \"connected\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [],\n                    \"span\": 5,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(grpc_server_started_total{job=\\\"$cluster\\\",grpc_type=\\\"unary\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"RPC Rate\",\n                            \"metric\": \"grpc_server_started_total\",\n                            \"refId\": \"A\",\n                            \"step\": 2\n                        },\n                        {\n                            \"expr\": \"sum(rate(grpc_server_handled_total{job=\\\"$cluster\\\",grpc_type=\\\"unary\\\",grpc_code!=\\\"OK\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"RPC Failed Rate\",\n                            \"metric\": \"grpc_server_handled_total\",\n                            \"refId\": \"B\",\n                            \"step\": 2\n                        }\n                    ],\n                    \"thresholds\": [],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"RPC Rate\",\n                    \"tooltip\": {\n                        \"msResolution\": false,\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": []\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {},\n                    \"bars\": false,\n                    \"datasource\": \"$datasource\",\n                    \"editable\": true,\n                    \"error\": false,\n                    \"fill\": 0,\n                    \"id\": 41,\n                    \"isNew\": true,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": false,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [],\n                    \"nullPointMode\": \"connected\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [],\n                    \"span\": 4,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(grpc_server_started_total{job=\\\"$cluster\\\",grpc_service=\\\"etcdserverpb.Watch\\\",grpc_type=\\\"bidi_stream\\\"}) - sum(grpc_server_handled_total{job=\\\"$cluster\\\",grpc_service=\\\"etcdserverpb.Watch\\\",grpc_type=\\\"bidi_stream\\\"})\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Watch Streams\",\n                            \"metric\": \"grpc_server_handled_total\",\n                            \"refId\": \"A\",\n                            \"step\": 4\n                        },\n                        {\n                            \"expr\": \"sum(grpc_server_started_total{job=\\\"$cluster\\\",grpc_service=\\\"etcdserverpb.Lease\\\",grpc_type=\\\"bidi_stream\\\"}) - sum(grpc_server_handled_total{job=\\\"$cluster\\\",grpc_service=\\\"etcdserverpb.Lease\\\",grpc_type=\\\"bidi_stream\\\"})\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Lease Streams\",\n                            \"metric\": \"grpc_server_handled_total\",\n                            \"refId\": \"B\",\n                            \"step\": 4\n                        }\n                    ],\n                    \"thresholds\": [],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Active Streams\",\n                    \"tooltip\": {\n                        \"msResolution\": false,\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": []\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": \"\",\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"showTitle\": false,\n            \"title\": \"Row\"\n        },\n        {\n            \"collapse\": false,\n            \"editable\": true,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {},\n                    \"bars\": false,\n                    \"datasource\": \"$datasource\",\n                    \"decimals\": null,\n                    \"editable\": true,\n                    \"error\": false,\n                    \"fill\": 0,\n                    \"grid\": {},\n                    \"id\": 1,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": false,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [],\n                    \"nullPointMode\": \"connected\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [],\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"etcd_mvcc_db_total_size_in_bytes{job=\\\"$cluster\\\"}\",\n                            \"hide\": false,\n                            \"interval\": \"\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} DB Size\",\n                            \"metric\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 4\n                        }\n                    ],\n                    \"thresholds\": [],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"DB Size\",\n                    \"tooltip\": {\n                        \"msResolution\": false,\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"cumulative\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": []\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {},\n                    \"bars\": false,\n                    \"datasource\": \"$datasource\",\n                    \"editable\": true,\n                    \"error\": false,\n                    \"fill\": 0,\n                    \"grid\": {},\n                    \"id\": 3,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": false,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [],\n                    \"nullPointMode\": \"connected\",\n                    \"percentage\": false,\n                    \"pointradius\": 1,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [],\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": true,\n                    \"targets\": [\n                        {\n                            \"expr\": \"histogram_quantile(0.99, sum(rate(etcd_disk_wal_fsync_duration_seconds_bucket{job=\\\"$cluster\\\"}[5m])) by (instance, le))\",\n                            \"hide\": false,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} WAL fsync\",\n                            \"metric\": \"etcd_disk_wal_fsync_duration_seconds_bucket\",\n                            \"refId\": \"A\",\n                            \"step\": 4\n                        },\n                        {\n                            \"expr\": \"histogram_quantile(0.99, sum(rate(etcd_disk_backend_commit_duration_seconds_bucket{job=\\\"$cluster\\\"}[5m])) by (instance, le))\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} DB fsync\",\n                            \"metric\": \"etcd_disk_backend_commit_duration_seconds_bucket\",\n                            \"refId\": \"B\",\n                            \"step\": 4\n                        }\n                    ],\n                    \"thresholds\": [],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk Sync Duration\",\n                    \"tooltip\": {\n                        \"msResolution\": false,\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"cumulative\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": []\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"s\",\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {},\n                    \"bars\": false,\n                    \"datasource\": \"$datasource\",\n                    \"editable\": true,\n                    \"error\": false,\n                    \"fill\": 0,\n                    \"id\": 29,\n                    \"isNew\": true,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": false,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [],\n                    \"nullPointMode\": \"connected\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [],\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"process_resident_memory_bytes{job=\\\"$cluster\\\"}\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Resident Memory\",\n                            \"metric\": \"process_resident_memory_bytes\",\n                            \"refId\": \"A\",\n                            \"step\": 4\n                        }\n                    ],\n                    \"thresholds\": [],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory\",\n                    \"tooltip\": {\n                        \"msResolution\": false,\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": []\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"title\": \"New row\"\n        },\n        {\n            \"collapse\": false,\n            \"editable\": true,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {},\n                    \"bars\": false,\n                    \"datasource\": \"$datasource\",\n                    \"editable\": true,\n                    \"error\": false,\n                    \"fill\": 5,\n                    \"id\": 22,\n                    \"isNew\": true,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": false,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [],\n                    \"nullPointMode\": \"connected\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [],\n                    \"span\": 3,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(etcd_network_client_grpc_received_bytes_total{job=\\\"$cluster\\\"}[5m])\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Client Traffic In\",\n                            \"metric\": \"etcd_network_client_grpc_received_bytes_total\",\n                            \"refId\": \"A\",\n                            \"step\": 4\n                        }\n                    ],\n                    \"thresholds\": [],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Client Traffic In\",\n                    \"tooltip\": {\n                        \"msResolution\": false,\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": []\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {},\n                    \"bars\": false,\n                    \"datasource\": \"$datasource\",\n                    \"editable\": true,\n                    \"error\": false,\n                    \"fill\": 5,\n                    \"id\": 21,\n                    \"isNew\": true,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": false,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [],\n                    \"nullPointMode\": \"connected\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [],\n                    \"span\": 3,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(etcd_network_client_grpc_sent_bytes_total{job=\\\"$cluster\\\"}[5m])\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Client Traffic Out\",\n                            \"metric\": \"etcd_network_client_grpc_sent_bytes_total\",\n                            \"refId\": \"A\",\n                            \"step\": 4\n                        }\n                    ],\n                    \"thresholds\": [],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Client Traffic Out\",\n                    \"tooltip\": {\n                        \"msResolution\": false,\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": []\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {},\n                    \"bars\": false,\n                    \"datasource\": \"$datasource\",\n                    \"editable\": true,\n                    \"error\": false,\n                    \"fill\": 0,\n                    \"id\": 20,\n                    \"isNew\": true,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": false,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [],\n                    \"nullPointMode\": \"connected\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [],\n                    \"span\": 3,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(etcd_network_peer_received_bytes_total{job=\\\"$cluster\\\"}[5m])) by (instance)\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Peer Traffic In\",\n                            \"metric\": \"etcd_network_peer_received_bytes_total\",\n                            \"refId\": \"A\",\n                            \"step\": 4\n                        }\n                    ],\n                    \"thresholds\": [],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Peer Traffic In\",\n                    \"tooltip\": {\n                        \"msResolution\": false,\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": []\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {},\n                    \"bars\": false,\n                    \"datasource\": \"$datasource\",\n                    \"decimals\": null,\n                    \"editable\": true,\n                    \"error\": false,\n                    \"fill\": 0,\n                    \"grid\": {},\n                    \"id\": 16,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": false,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [],\n                    \"nullPointMode\": \"connected\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [],\n                    \"span\": 3,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(etcd_network_peer_sent_bytes_total{job=\\\"$cluster\\\"}[5m])) by (instance)\",\n                            \"hide\": false,\n                            \"interval\": \"\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Peer Traffic Out\",\n                            \"metric\": \"etcd_network_peer_sent_bytes_total\",\n                            \"refId\": \"A\",\n                            \"step\": 4\n                        }\n                    ],\n                    \"thresholds\": [],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Peer Traffic Out\",\n                    \"tooltip\": {\n                        \"msResolution\": false,\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"cumulative\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": []\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"title\": \"New row\"\n        },\n        {\n            \"collapse\": false,\n            \"editable\": true,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {},\n                    \"bars\": false,\n                    \"datasource\": \"$datasource\",\n                    \"editable\": true,\n                    \"error\": false,\n                    \"fill\": 0,\n                    \"id\": 40,\n                    \"isNew\": true,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": false,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [],\n                    \"nullPointMode\": \"connected\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [],\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(etcd_server_proposals_failed_total{job=\\\"$cluster\\\"}[5m]))\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Proposal Failure Rate\",\n                            \"metric\": \"etcd_server_proposals_failed_total\",\n                            \"refId\": \"A\",\n                            \"step\": 2\n                        },\n                        {\n                            \"expr\": \"sum(etcd_server_proposals_pending{job=\\\"$cluster\\\"})\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Proposal Pending Total\",\n                            \"metric\": \"etcd_server_proposals_pending\",\n                            \"refId\": \"B\",\n                            \"step\": 2\n                        },\n                        {\n                            \"expr\": \"sum(rate(etcd_server_proposals_committed_total{job=\\\"$cluster\\\"}[5m]))\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Proposal Commit Rate\",\n                            \"metric\": \"etcd_server_proposals_committed_total\",\n                            \"refId\": \"C\",\n                            \"step\": 2\n                        },\n                        {\n                            \"expr\": \"sum(rate(etcd_server_proposals_applied_total{job=\\\"$cluster\\\"}[5m]))\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Proposal Apply Rate\",\n                            \"refId\": \"D\",\n                            \"step\": 2\n                        }\n                    ],\n                    \"thresholds\": [],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Raft Proposals\",\n                    \"tooltip\": {\n                        \"msResolution\": false,\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": []\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": \"\",\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {},\n                    \"bars\": false,\n                    \"datasource\": \"$datasource\",\n                    \"decimals\": 0,\n                    \"editable\": true,\n                    \"error\": false,\n                    \"fill\": 0,\n                    \"id\": 19,\n                    \"isNew\": true,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [],\n                    \"nullPointMode\": \"connected\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [],\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"changes(etcd_server_leader_changes_seen_total{job=\\\"$cluster\\\"}[1d])\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Total Leader Elections Per Day\",\n                            \"metric\": \"etcd_server_leader_changes_seen_total\",\n                            \"refId\": \"A\",\n                            \"step\": 2\n                        }\n                    ],\n                    \"thresholds\": [],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Total Leader Elections Per Day\",\n                    \"tooltip\": {\n                        \"msResolution\": false,\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": []\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"title\": \"New row\"\n        }\n    ],\n    \"schemaVersion\": 13,\n    \"sharedCrosshair\": false,\n    \"style\": \"dark\",\n    \"tags\": [],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"Prometheus\",\n                    \"value\": \"Prometheus\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"prod\",\n                    \"value\": \"prod\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": \"cluster\",\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [],\n                \"query\": \"label_values(etcd_server_has_leader, job)\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"sort\": 2,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-15m\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"now\": true,\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"etcd\",\n    \"version\": 215\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:etcd.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-etcd","namespace":"default","resourceVersion":"640285","uid":"4c88448d-dee4-49fc-aae0-23a60fb6d117"}},{"data":{"datasource.yaml":"apiVersion: 1\ndatasources:\n- name: Prometheus\n  type: prometheus\n  url: http://prometheus-kube-prometheus-prometheus.default:9090/\n  access: proxy\n  isDefault: true\n  jsonData:\n    timeInterval: 30s"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_datasource":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:datasource.yaml":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_datasource":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-grafana-datasource","namespace":"default","resourceVersion":"640291","uid":"f240c976-baa1-4b2f-9a8d-89285abd6ac3"}},{"data":{"k8s-coredns.json":"{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations & Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"description\": \"A dashboard for the CoreDNS DNS server with updated metrics for version 1.7.0+.  Based on the CoreDNS dashboard by buhay.\",\n  \"editable\": true,\n  \"gnetId\": 12539,\n  \"graphTooltip\": 0,\n  \"iteration\": 1603798405693,\n  \"links\": [\n    {\n      \"icon\": \"external link\",\n      \"tags\": [],\n      \"targetBlank\": true,\n      \"title\": \"CoreDNS.io\",\n      \"type\": \"link\",\n      \"url\": \"https://coredns.io\"\n    }\n  ],\n  \"panels\": [\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {},\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"hiddenSeries\": false,\n      \"id\": 2,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.2.0\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [\n        {\n          \"alias\": \"total\",\n          \"yaxis\": 2\n        }\n      ],\n      \"spaceLength\": 10,\n      \"stack\": true,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"sum(rate(coredns_dns_request_count_total{instance=~\\\"$instance\\\"}[5m])) by (proto) or\\nsum(rate(coredns_dns_requests_total{instance=~\\\"$instance\\\"}[5m])) by (proto)\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{proto}}\",\n          \"refId\": \"A\",\n          \"step\": 60\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Requests (total)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"pps\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        },\n        {\n          \"format\": \"pps\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {},\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 0\n      },\n      \"hiddenSeries\": false,\n      \"id\": 4,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.2.0\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [\n        {\n          \"alias\": \"total\",\n          \"yaxis\": 2\n        },\n        {\n          \"alias\": \"other\",\n          \"yaxis\": 2\n        }\n      ],\n      \"spaceLength\": 10,\n      \"stack\": true,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"sum(rate(coredns_dns_request_type_count_total{instance=~\\\"$instance\\\"}[5m])) by (type) or \\nsum(rate(coredns_dns_requests_total{instance=~\\\"$instance\\\"}[5m])) by (type)\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{type}}\",\n          \"refId\": \"A\",\n          \"step\": 60\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Requests (by qtype)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"pps\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        },\n        {\n          \"format\": \"pps\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {},\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 0\n      },\n      \"hiddenSeries\": false,\n      \"id\": 6,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.2.0\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [\n        {\n          \"alias\": \"total\",\n          \"yaxis\": 2\n        }\n      ],\n      \"spaceLength\": 10,\n      \"stack\": true,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"sum(rate(coredns_dns_request_count_total{instance=~\\\"$instance\\\"}[5m])) by (zone) or\\nsum(rate(coredns_dns_requests_total{instance=~\\\"$instance\\\"}[5m])) by (zone)\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{zone}}\",\n          \"refId\": \"A\",\n          \"step\": 60\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Requests (by zone)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"pps\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        },\n        {\n          \"format\": \"pps\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {},\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 7\n      },\n      \"hiddenSeries\": false,\n      \"id\": 8,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.2.0\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [\n        {\n          \"alias\": \"total\",\n          \"yaxis\": 2\n        }\n      ],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"sum(rate(coredns_dns_request_do_count_total{instance=~\\\"$instance\\\"}[5m])) or\\nsum(rate(coredns_dns_do_requests_total{instance=~\\\"$instance\\\"}[5m]))\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"DO\",\n          \"refId\": \"A\",\n          \"step\": 40\n        },\n        {\n          \"expr\": \"sum(rate(coredns_dns_request_count_total{instance=~\\\"$instance\\\"}[5m])) or\\nsum(rate(coredns_dns_requests_total{instance=~\\\"$instance\\\"}[5m]))\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"total\",\n          \"refId\": \"B\",\n          \"step\": 40\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Requests (DO bit)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"pps\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        },\n        {\n          \"format\": \"pps\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {},\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 6,\n        \"x\": 12,\n        \"y\": 7\n      },\n      \"hiddenSeries\": false,\n      \"id\": 10,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.2.0\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [\n        {\n          \"alias\": \"tcp:90\",\n          \"yaxis\": 2\n        },\n        {\n          \"alias\": \"tcp:99 \",\n          \"yaxis\": 2\n        },\n        {\n          \"alias\": \"tcp:50\",\n          \"yaxis\": 2\n        }\n      ],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"histogram_quantile(0.99, sum(rate(coredns_dns_request_size_bytes_bucket{instance=~\\\"$instance\\\",proto=\\\"udp\\\"}[5m])) by (le,proto))\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{proto}}:99 \",\n          \"refId\": \"A\",\n          \"step\": 60\n        },\n        {\n          \"expr\": \"histogram_quantile(0.90, sum(rate(coredns_dns_request_size_bytes_bucket{instance=~\\\"$instance\\\",proto=\\\"udp\\\"}[5m])) by (le,proto))\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{proto}}:90\",\n          \"refId\": \"B\",\n          \"step\": 60\n        },\n        {\n          \"expr\": \"histogram_quantile(0.50, sum(rate(coredns_dns_request_size_bytes_bucket{instance=~\\\"$instance\\\",proto=\\\"udp\\\"}[5m])) by (le,proto))\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{proto}}:50\",\n          \"refId\": \"C\",\n          \"step\": 60\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Requests (size, udp)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"bytes\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {},\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 6,\n        \"x\": 18,\n        \"y\": 7\n      },\n      \"hiddenSeries\": false,\n      \"id\": 12,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.2.0\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [\n        {\n          \"alias\": \"tcp:90\",\n          \"yaxis\": 1\n        },\n        {\n          \"alias\": \"tcp:99 \",\n          \"yaxis\": 1\n        },\n        {\n          \"alias\": \"tcp:50\",\n          \"yaxis\": 1\n        }\n      ],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"histogram_quantile(0.99, sum(rate(coredns_dns_request_size_bytes_bucket{instance=~\\\"$instance\\\",proto=\\\"tcp\\\"}[5m])) by (le,proto))\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{proto}}:99 \",\n          \"refId\": \"A\",\n          \"step\": 60\n        },\n        {\n          \"expr\": \"histogram_quantile(0.90, sum(rate(coredns_dns_request_size_bytes_bucket{instance=~\\\"$instance\\\",proto=\\\"tcp\\\"}[5m])) by (le,proto))\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{proto}}:90\",\n          \"refId\": \"B\",\n          \"step\": 60\n        },\n        {\n          \"expr\": \"histogram_quantile(0.50, sum(rate(coredns_dns_request_size_bytes_bucket{instance=~\\\"$instance\\\",proto=\\\"tcp\\\"}[5m])) by (le,proto))\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{proto}}:50\",\n          \"refId\": \"C\",\n          \"step\": 60\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Requests (size,tcp)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"bytes\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {},\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 14\n      },\n      \"hiddenSeries\": false,\n      \"id\": 14,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.2.0\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": true,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"sum(rate(coredns_dns_response_rcode_count_total{instance=~\\\"$instance\\\"}[5m])) by (rcode) or\\nsum(rate(coredns_dns_responses_total{instance=~\\\"$instance\\\"}[5m])) by (rcode)\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{rcode}}\",\n          \"refId\": \"A\",\n          \"step\": 40\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Responses (by rcode)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"pps\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {},\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 14\n      },\n      \"hiddenSeries\": false,\n      \"id\": 32,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.2.0\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"histogram_quantile(0.99, sum(rate(coredns_dns_request_duration_seconds_bucket{instance=~\\\"$instance\\\"}[5m])) by (le, job))\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"99%\",\n          \"refId\": \"A\",\n          \"step\": 40\n        },\n        {\n          \"expr\": \"histogram_quantile(0.90, sum(rate(coredns_dns_request_duration_seconds_bucket{instance=~\\\"$instance\\\"}[5m])) by (le))\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"90%\",\n          \"refId\": \"B\",\n          \"step\": 40\n        },\n        {\n          \"expr\": \"histogram_quantile(0.50, sum(rate(coredns_dns_request_duration_seconds_bucket{instance=~\\\"$instance\\\"}[5m])) by (le))\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"50%\",\n          \"refId\": \"C\",\n          \"step\": 40\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Responses (duration)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"s\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {},\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 21\n      },\n      \"hiddenSeries\": false,\n      \"id\": 18,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.2.0\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [\n        {\n          \"alias\": \"udp:50%\",\n          \"yaxis\": 1\n        },\n        {\n          \"alias\": \"tcp:50%\",\n          \"yaxis\": 2\n        },\n        {\n          \"alias\": \"tcp:90%\",\n          \"yaxis\": 2\n        },\n        {\n          \"alias\": \"tcp:99%\",\n          \"yaxis\": 2\n        }\n      ],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"histogram_quantile(0.99, sum(rate(coredns_dns_response_size_bytes_bucket{instance=~\\\"$instance\\\",proto=\\\"udp\\\"}[5m])) by (le,proto)) \",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{proto}}:99%\",\n          \"refId\": \"A\",\n          \"step\": 40\n        },\n        {\n          \"expr\": \"histogram_quantile(0.90, sum(rate(coredns_dns_response_size_bytes_bucket{instance=~\\\"$instance\\\",proto=\\\"udp\\\"}[5m])) by (le,proto)) \",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{proto}}:90%\",\n          \"refId\": \"B\",\n          \"step\": 40\n        },\n        {\n          \"expr\": \"histogram_quantile(0.50, sum(rate(coredns_dns_response_size_bytes_bucket{instance=~\\\"$instance\\\",proto=\\\"udp\\\"}[5m])) by (le,proto)) \",\n          \"hide\": false,\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{proto}}:50%\",\n          \"metric\": \"\",\n          \"refId\": \"C\",\n          \"step\": 40\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Responses (size, udp)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"bytes\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {},\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 21\n      },\n      \"hiddenSeries\": false,\n      \"id\": 20,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.2.0\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [\n        {\n          \"alias\": \"udp:50%\",\n          \"yaxis\": 1\n        },\n        {\n          \"alias\": \"tcp:50%\",\n          \"yaxis\": 1\n        },\n        {\n          \"alias\": \"tcp:90%\",\n          \"yaxis\": 1\n        },\n        {\n          \"alias\": \"tcp:99%\",\n          \"yaxis\": 1\n        }\n      ],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"histogram_quantile(0.99, sum(rate(coredns_dns_response_size_bytes_bucket{instance=~\\\"$instance\\\",proto=\\\"tcp\\\"}[5m])) by (le,proto)) \",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{proto}}:99%\",\n          \"refId\": \"A\",\n          \"step\": 40\n        },\n        {\n          \"expr\": \"histogram_quantile(0.90, sum(rate(coredns_dns_response_size_bytes_bucket{instance=~\\\"$instance\\\",proto=\\\"tcp\\\"}[5m])) by (le,proto)) \",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{proto}}:90%\",\n          \"refId\": \"B\",\n          \"step\": 40\n        },\n        {\n          \"expr\": \"histogram_quantile(0.50, sum(rate(coredns_dns_response_size_bytes_bucket{instance=~\\\"$instance\\\",proto=\\\"tcp\\\"}[5m])) by (le, proto)) \",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{proto}}:50%\",\n          \"metric\": \"\",\n          \"refId\": \"C\",\n          \"step\": 40\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Responses (size, tcp)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"bytes\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {},\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 28\n      },\n      \"hiddenSeries\": false,\n      \"id\": 22,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.2.0\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": true,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"sum(coredns_cache_size{instance=~\\\"$instance\\\"}) by (type) or\\nsum(coredns_cache_entries{instance=~\\\"$instance\\\"}) by (type)\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{type}}\",\n          \"refId\": \"A\",\n          \"step\": 40\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Cache (size)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"decbytes\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"$datasource\",\n      \"editable\": true,\n      \"error\": false,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {},\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 28\n      },\n      \"hiddenSeries\": false,\n      \"id\": 24,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.2.0\",\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [\n        {\n          \"alias\": \"misses\",\n          \"yaxis\": 2\n        }\n      ],\n      \"spaceLength\": 10,\n      \"stack\": true,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"sum(rate(coredns_cache_hits_total{instance=~\\\"$instance\\\"}[5m])) by (type)\",\n          \"hide\": false,\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"hits:{{type}}\",\n          \"refId\": \"A\",\n          \"step\": 40\n        },\n        {\n          \"expr\": \"sum(rate(coredns_cache_misses_total{instance=~\\\"$instance\\\"}[5m])) by (type)\",\n          \"hide\": false,\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"misses\",\n          \"refId\": \"B\",\n          \"step\": 40\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Cache (hitrate)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"pps\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        },\n        {\n          \"format\": \"pps\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": 0,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    }\n  ],\n  \"refresh\": \"10s\",\n  \"schemaVersion\": 26,\n  \"style\": \"dark\",\n  \"tags\": [\n    \"dns\",\n    \"coredns\"\n  ],\n  \"templating\": {\n    \"list\": [\n      {\n        \"current\": {\n          \"selected\": true,\n          \"text\": \"default\",\n          \"value\": \"default\"\n        },\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": null,\n        \"multi\": false,\n        \"name\": \"datasource\",\n        \"options\": [],\n        \"query\": \"prometheus\",\n        \"queryValue\": \"\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"type\": \"datasource\"\n      },\n      {\n        \"allValue\": \".*\",\n        \"current\": {\n          \"selected\": true,\n          \"text\": \"All\",\n          \"value\": \"$__all\"\n        },\n        \"datasource\": \"$datasource\",\n        \"definition\": \"label_values(up{job=\\\"coredns\\\"}, instance)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Instance\",\n        \"multi\": false,\n        \"name\": \"instance\",\n        \"options\": [],\n        \"query\": \"label_values(up{job=\\\"coredns\\\"}, instance)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 3,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-3h\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ]\n  },\n  \"timezone\": \"utc\",\n  \"title\": \"CoreDNS\",\n  \"uid\": \"vkQ0UHxik\",\n  \"version\": 2\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:k8s-coredns.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-k8s-coredns","namespace":"default","resourceVersion":"640292","uid":"714bf0fe-16cb-4a48-86b6-6314d91d7365"}},{"data":{"k8s-resources-cluster.json":"{\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": true,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"links\": [\n\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"height\": \"100px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"format\": \"percentunit\",\n                    \"id\": 1,\n                    \"interval\": \"1m\",\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 2,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"1 - avg(rate(node_cpu_seconds_total{mode=\\\"idle\\\", cluster=\\\"$cluster\\\"}[$__rate_interval]))\",\n                            \"format\": \"time_series\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"70,80\",\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"singlestat\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"format\": \"percentunit\",\n                    \"id\": 2,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 2,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"}) / sum(kube_node_status_allocatable{resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\n                            \"format\": \"time_series\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"70,80\",\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Requests Commitment\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"singlestat\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"format\": \"percentunit\",\n                    \"id\": 3,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 2,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"}) / sum(kube_node_status_allocatable{resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\n                            \"format\": \"time_series\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"70,80\",\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Limits Commitment\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"singlestat\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"format\": \"percentunit\",\n                    \"id\": 4,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 2,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"1 - sum(:node_memory_MemAvailable_bytes:sum{cluster=\\\"$cluster\\\"}) / sum(node_memory_MemTotal_bytes{cluster=\\\"$cluster\\\"})\",\n                            \"format\": \"time_series\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"70,80\",\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"singlestat\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"format\": \"percentunit\",\n                    \"id\": 5,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 2,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"}) / sum(kube_node_status_allocatable{resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\n                            \"format\": \"time_series\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"70,80\",\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Requests Commitment\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"singlestat\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"format\": \"percentunit\",\n                    \"id\": 6,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 2,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"}) / sum(kube_node_status_allocatable{resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\n                            \"format\": \"time_series\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"70,80\",\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Limits Commitment\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"singlestat\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Headlines\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 7,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 8,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"Pods\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 0,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down to pods\",\n                            \"linkUrl\": \"/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell_1\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Workloads\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 0,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down to workloads\",\n                            \"linkUrl\": \"/d/a87fb0d919ec0ea5f6543124e16c42a5/k8s-resources-workloads-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell_1\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Usage\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Requests\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Requests %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"CPU Limits\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #F\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Limits %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #G\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Namespace\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down to pods\",\n                            \"linkUrl\": \"/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell\",\n                            \"pattern\": \"namespace\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(kube_pod_owner{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"count(avg(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\"}) by (workload, namespace)) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\"}) by (namespace) / sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"F\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\"}) by (namespace) / sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"G\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Quota\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU Quota\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 9,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(container_memory_rss{cluster=\\\"$cluster\\\", container!=\\\"\\\"}) by (namespace)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Usage (w/o cache)\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 10,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"Pods\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 0,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down to pods\",\n                            \"linkUrl\": \"/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell_1\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Workloads\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 0,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down to workloads\",\n                            \"linkUrl\": \"/d/a87fb0d919ec0ea5f6543124e16c42a5/k8s-resources-workloads-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell_1\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Memory Usage\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Requests\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Requests %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Memory Limits\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #F\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Limits %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #G\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Namespace\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down to pods\",\n                            \"linkUrl\": \"/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell\",\n                            \"pattern\": \"namespace\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(kube_pod_owner{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"count(avg(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\"}) by (workload, namespace)) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(container_memory_rss{cluster=\\\"$cluster\\\", container!=\\\"\\\"}) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(container_memory_rss{cluster=\\\"$cluster\\\", container!=\\\"\\\"}) by (namespace) / sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"F\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(container_memory_rss{cluster=\\\"$cluster\\\", container!=\\\"\\\"}) by (namespace) / sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"G\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Requests by Namespace\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory Requests\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 11,\n                    \"interval\": \"1m\",\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"Current Receive Bandwidth\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Current Transmit Bandwidth\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Rate of Received Packets\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"pps\"\n                        },\n                        {\n                            \"alias\": \"Rate of Transmitted Packets\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"pps\"\n                        },\n                        {\n                            \"alias\": \"Rate of Received Packets Dropped\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"pps\"\n                        },\n                        {\n                            \"alias\": \"Rate of Transmitted Packets Dropped\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #F\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"pps\"\n                        },\n                        {\n                            \"alias\": \"Namespace\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down to pods\",\n                            \"linkUrl\": \"/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell\",\n                            \"pattern\": \"namespace\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"F\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Current Network Usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Current Network Usage\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 12,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Receive Bandwidth\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 13,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Transmit Bandwidth\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Bandwidth\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 14,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"avg(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Average Container Bandwidth by Namespace: Received\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 15,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"avg(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Average Container Bandwidth by Namespace: Transmitted\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Average Container Bandwidth by Namespace\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 16,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 17,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Rate of Packets\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 18,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 19,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Rate of Packets Dropped\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"decimals\": -1,\n                    \"fill\": 10,\n                    \"id\": 20,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"ceil(sum by(namespace) (rate(container_fs_reads_total{container!=\\\"\\\", cluster=\\\"$cluster\\\"}[5m]) + rate(container_fs_writes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\"}[5m])))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"IOPS(Reads+Writes)\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 21,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum by(namespace) (rate(container_fs_reads_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\"}[5m]) + rate(container_fs_writes_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{namespace}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"ThroughPut(Read+Write)\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Storage IO\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 22,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"sort\": {\n                        \"col\": 4,\n                        \"desc\": true\n                    },\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"IOPS(Reads)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": -1,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"IOPS(Writes)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": -1,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"IOPS(Reads + Writes)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": -1,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Throughput(Read)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Throughput(Write)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Throughput(Read + Write)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #F\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Namespace\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down to pods\",\n                            \"linkUrl\": \"/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$__cell\",\n                            \"pattern\": \"namespace\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum by(namespace) (rate(container_fs_reads_total{container!=\\\"\\\", cluster=\\\"$cluster\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by(namespace) (rate(container_fs_writes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by(namespace) (rate(container_fs_reads_total{container!=\\\"\\\", cluster=\\\"$cluster\\\"}[5m]) + rate(container_fs_writes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by(namespace) (rate(container_fs_reads_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by(namespace) (rate(container_fs_writes_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by(namespace) (rate(container_fs_reads_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\"}[5m]) + rate(container_fs_writes_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"F\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Current Storage IO\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Storage IO - Distribution\",\n            \"titleSize\": \"h6\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(up{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / Compute Resources / Cluster\",\n    \"uid\": \"efa86fd1d0c121a26444b636a3f509a8\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:k8s-resources-cluster.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-k8s-resources-cluster","namespace":"default","resourceVersion":"640293","uid":"e99c987d-311a-4fea-ac11-4b64a54e5f63"}},{"data":{"k8s-resources-namespace.json":"{\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": true,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"links\": [\n\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"height\": \"100px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"format\": \"percentunit\",\n                    \"id\": 1,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 3,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\n                            \"format\": \"time_series\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"70,80\",\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Utilisation (from requests)\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"singlestat\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"format\": \"percentunit\",\n                    \"id\": 2,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 3,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\n                            \"format\": \"time_series\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"70,80\",\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Utilisation (from limits)\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"singlestat\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"format\": \"percentunit\",\n                    \"id\": 3,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 3,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\", image!=\\\"\\\"}) / sum(kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\n                            \"format\": \"time_series\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"70,80\",\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Utilisation (from requests)\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"singlestat\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"format\": \"percentunit\",\n                    \"id\": 4,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 3,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\", image!=\\\"\\\"}) / sum(kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\n                            \"format\": \"time_series\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"70,80\",\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Utilisation (from limits)\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"singlestat\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Headlines\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 5,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"quota - requests\",\n                            \"color\": \"#F2495C\",\n                            \"dashes\": true,\n                            \"fill\": 0,\n                            \"hiddenSeries\": true,\n                            \"hideTooltip\": true,\n                            \"legend\": true,\n                            \"linewidth\": 2,\n                            \"stack\": false\n                        },\n                        {\n                            \"alias\": \"quota - limits\",\n                            \"color\": \"#FF9830\",\n                            \"dashes\": true,\n                            \"fill\": 0,\n                            \"hiddenSeries\": true,\n                            \"hideTooltip\": true,\n                            \"legend\": true,\n                            \"linewidth\": 2,\n                            \"stack\": false\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"scalar(kube_resourcequota{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.cpu\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"quota - requests\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"scalar(kube_resourcequota{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.cpu\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"quota - limits\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU Usage\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 6,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"CPU Usage\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Requests\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Requests %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"CPU Limits\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Limits %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Pod\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell\",\n                            \"pattern\": \"pod\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Quota\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU Quota\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 7,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"quota - requests\",\n                            \"color\": \"#F2495C\",\n                            \"dashes\": true,\n                            \"fill\": 0,\n                            \"hiddenSeries\": true,\n                            \"hideTooltip\": true,\n                            \"legend\": true,\n                            \"linewidth\": 2,\n                            \"stack\": false\n                        },\n                        {\n                            \"alias\": \"quota - limits\",\n                            \"color\": \"#FF9830\",\n                            \"dashes\": true,\n                            \"fill\": 0,\n                            \"hiddenSeries\": true,\n                            \"hideTooltip\": true,\n                            \"legend\": true,\n                            \"linewidth\": 2,\n                            \"stack\": false\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"scalar(kube_resourcequota{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.memory\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"quota - requests\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"scalar(kube_resourcequota{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.memory\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"quota - limits\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Usage (w/o cache)\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory Usage\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 8,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"Memory Usage\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Requests\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Requests %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Memory Limits\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Limits %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Memory Usage (RSS)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #F\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Usage (Cache)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #G\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Usage (Swap)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #H\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Pod\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell\",\n                            \"pattern\": \"pod\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\", image!=\\\"\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\", image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\", image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(container_memory_rss{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"F\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(container_memory_cache{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"G\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(container_memory_swap{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"H\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Quota\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory Quota\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 9,\n                    \"interval\": \"1m\",\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"Current Receive Bandwidth\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Current Transmit Bandwidth\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Rate of Received Packets\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"pps\"\n                        },\n                        {\n                            \"alias\": \"Rate of Transmitted Packets\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"pps\"\n                        },\n                        {\n                            \"alias\": \"Rate of Received Packets Dropped\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"pps\"\n                        },\n                        {\n                            \"alias\": \"Rate of Transmitted Packets Dropped\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #F\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"pps\"\n                        },\n                        {\n                            \"alias\": \"Pod\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down to pods\",\n                            \"linkUrl\": \"/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell\",\n                            \"pattern\": \"pod\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"F\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Current Network Usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Current Network Usage\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 10,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Receive Bandwidth\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 11,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Transmit Bandwidth\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Bandwidth\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 12,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 13,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Rate of Packets\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 14,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 15,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Rate of Packets Dropped\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"decimals\": -1,\n                    \"fill\": 10,\n                    \"id\": 16,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"ceil(sum by(pod) (rate(container_fs_reads_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[5m]) + rate(container_fs_writes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[5m])))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"IOPS(Reads+Writes)\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 17,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum by(pod) (rate(container_fs_reads_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[5m]) + rate(container_fs_writes_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"ThroughPut(Read+Write)\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Storage IO\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 18,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"sort\": {\n                        \"col\": 4,\n                        \"desc\": true\n                    },\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"IOPS(Reads)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": -1,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"IOPS(Writes)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": -1,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"IOPS(Reads + Writes)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": -1,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Throughput(Read)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Throughput(Write)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Throughput(Read + Write)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #F\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Pod\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down to pods\",\n                            \"linkUrl\": \"/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell\",\n                            \"pattern\": \"pod\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum by(pod) (rate(container_fs_reads_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by(pod) (rate(container_fs_writes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by(pod) (rate(container_fs_reads_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[5m]) + rate(container_fs_writes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by(pod) (rate(container_fs_reads_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by(pod) (rate(container_fs_writes_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by(pod) (rate(container_fs_reads_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[5m]) + rate(container_fs_writes_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"F\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Current Storage IO\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Storage IO - Distribution\",\n            \"titleSize\": \"h6\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kube_pod_info, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"namespace\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kube_pod_info{cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / Compute Resources / Namespace (Pods)\",\n    \"uid\": \"85a562078cdf77779eaa1add43ccec1e\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:k8s-resources-namespace.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-k8s-resources-namespace","namespace":"default","resourceVersion":"640289","uid":"265d3675-65c8-4248-be2a-b04af940d5bc"}},{"data":{"k8s-resources-node.json":"{\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": true,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"links\": [\n\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 1,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU Usage\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 2,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"CPU Usage\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Requests\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Requests %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"CPU Limits\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Limits %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Pod\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"pod\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Quota\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU Quota\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 3,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\\\"$cluster\\\", node=~\\\"$node\\\", container!=\\\"\\\"}) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Usage (w/o cache)\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory Usage\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 4,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"Memory Usage\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Requests\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Requests %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Memory Limits\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Limits %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Memory Usage (RSS)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #F\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Usage (Cache)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #G\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Usage (Swap)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #H\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Pod\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"pod\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\\\"$cluster\\\", node=~\\\"$node\\\",container!=\\\"\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\\\"$cluster\\\", node=~\\\"$node\\\",container!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\\\"$cluster\\\", node=~\\\"$node\\\",container!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_memory_rss{cluster=\\\"$cluster\\\", node=~\\\"$node\\\",container!=\\\"\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"F\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_memory_cache{cluster=\\\"$cluster\\\", node=~\\\"$node\\\",container!=\\\"\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"G\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_memory_swap{cluster=\\\"$cluster\\\", node=~\\\"$node\\\",container!=\\\"\\\"}) by (pod)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"H\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Quota\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory Quota\",\n            \"titleSize\": \"h6\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kube_pod_info, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": true,\n                \"name\": \"node\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kube_pod_info{cluster=\\\"$cluster\\\"}, node)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / Compute Resources / Node (Pods)\",\n    \"uid\": \"200ac8fdbfbb74b39aff88118e4d1c2c\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:k8s-resources-node.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-k8s-resources-node","namespace":"default","resourceVersion":"640307","uid":"22e31739-d0f9-431d-b4df-b0b0590a785e"}},{"data":{"k8s-resources-pod.json":"{\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": true,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"links\": [\n\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 1,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"requests\",\n                            \"color\": \"#F2495C\",\n                            \"fill\": 0,\n                            \"hideTooltip\": true,\n                            \"legend\": true,\n                            \"linewidth\": 2,\n                            \"stack\": false\n                        },\n                        {\n                            \"alias\": \"limits\",\n                            \"color\": \"#FF9830\",\n                            \"fill\": 0,\n                            \"hideTooltip\": true,\n                            \"legend\": true,\n                            \"linewidth\": 2,\n                            \"stack\": false\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", cluster=\\\"$cluster\\\"}) by (container)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{container}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n    kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", resource=\\\"cpu\\\"}\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"requests\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n    kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", resource=\\\"cpu\\\"}\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"limits\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU Usage\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 2,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": true,\n                        \"max\": true,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(increase(container_cpu_cfs_throttled_periods_total{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\"}[5m])) by (container) /sum(increase(container_cpu_cfs_periods_total{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\"}[5m])) by (container)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{container}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n                        {\n                            \"colorMode\": \"critical\",\n                            \"fill\": true,\n                            \"line\": true,\n                            \"op\": \"gt\",\n                            \"value\": 0.25,\n                            \"yaxis\": \"left\"\n                        }\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Throttling\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": 1,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU Throttling\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 3,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"CPU Usage\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Requests\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Requests %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"CPU Limits\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Limits %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Container\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"container\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}) by (container)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}) by (container)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}) by (container) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}) by (container)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}) by (container)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}) by (container) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}) by (container)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Quota\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU Quota\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 4,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"requests\",\n                            \"color\": \"#F2495C\",\n                            \"dashes\": true,\n                            \"fill\": 0,\n                            \"hideTooltip\": true,\n                            \"legend\": true,\n                            \"linewidth\": 2,\n                            \"stack\": false\n                        },\n                        {\n                            \"alias\": \"limits\",\n                            \"color\": \"#FF9830\",\n                            \"dashes\": true,\n                            \"fill\": 0,\n                            \"hideTooltip\": true,\n                            \"legend\": true,\n                            \"linewidth\": 2,\n                            \"stack\": false\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\", image!=\\\"\\\"}) by (container)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{container}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n    kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", resource=\\\"memory\\\"}\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"requests\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n    kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", resource=\\\"memory\\\"}\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"limits\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Usage (WSS)\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory Usage\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 5,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"Memory Usage (WSS)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Requests\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Requests %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Memory Limits\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Limits %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Memory Usage (RSS)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #F\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Usage (Cache)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #G\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Usage (Swap)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #H\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Container\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"container\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\", image!=\\\"\\\"}) by (container)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}) by (container)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", image!=\\\"\\\"}) by (container) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}) by (container)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}) by (container)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\", image!=\\\"\\\"}) by (container) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}) by (container)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(container_memory_rss{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container != \\\"\\\", container != \\\"POD\\\"}) by (container)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"F\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(container_memory_cache{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container != \\\"\\\", container != \\\"POD\\\"}) by (container)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"G\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(container_memory_swap{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container != \\\"\\\", container != \\\"POD\\\"}) by (container)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"H\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Quota\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory Quota\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 6,\n                    \"interval\": \"1m\",\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Receive Bandwidth\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 7,\n                    \"interval\": \"1m\",\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Transmit Bandwidth\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Bandwidth\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 8,\n                    \"interval\": \"1m\",\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 9,\n                    \"interval\": \"1m\",\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Rate of Packets\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 10,\n                    \"interval\": \"1m\",\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 11,\n                    \"interval\": \"1m\",\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Rate of Packets Dropped\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"decimals\": -1,\n                    \"fill\": 10,\n                    \"id\": 12,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"ceil(sum by(pod) (rate(container_fs_reads_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[5m])))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Reads\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"ceil(sum by(pod) (rate(container_fs_writes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[5m])))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Writes\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"IOPS\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 13,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum by(pod) (rate(container_fs_reads_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Reads\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by(pod) (rate(container_fs_writes_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Writes\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"ThroughPut\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Storage IO - Distribution(Pod - Read & Writes)\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"decimals\": -1,\n                    \"fill\": 10,\n                    \"id\": 14,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"ceil(sum by(container) (rate(container_fs_reads_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=\\\"$pod\\\"}[5m]) + rate(container_fs_writes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=\\\"$pod\\\"}[5m])))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{container}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"IOPS(Reads+Writes)\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 15,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum by(container) (rate(container_fs_reads_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=\\\"$pod\\\"}[5m]) + rate(container_fs_writes_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=\\\"$pod\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{container}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"ThroughPut(Read+Write)\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Storage IO - Distribution(Containers)\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 16,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"sort\": {\n                        \"col\": 4,\n                        \"desc\": true\n                    },\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"IOPS(Reads)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": -1,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"IOPS(Writes)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": -1,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"IOPS(Reads + Writes)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": -1,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Throughput(Read)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Throughput(Write)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Throughput(Read + Write)\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #F\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Container\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"container\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum by(container) (rate(container_fs_reads_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=\\\"$pod\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by(container) (rate(container_fs_writes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=\\\"$pod\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by(container) (rate(container_fs_reads_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=\\\"$pod\\\"}[5m]) + rate(container_fs_writes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=\\\"$pod\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by(container) (rate(container_fs_reads_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=\\\"$pod\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by(container) (rate(container_fs_writes_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=\\\"$pod\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by(container) (rate(container_fs_reads_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=\\\"$pod\\\"}[5m]) + rate(container_fs_writes_bytes_total{container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=\\\"$pod\\\"}[5m]))\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"F\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Current Storage IO\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Storage IO - Distribution\",\n            \"titleSize\": \"h6\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kube_pod_info, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"namespace\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kube_pod_info{cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"pod\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kube_pod_info{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}, pod)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / Compute Resources / Pod\",\n    \"uid\": \"6581e46e4e5c7ba40a07646395ef7b23\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:k8s-resources-pod.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-k8s-resources-pod","namespace":"default","resourceVersion":"640315","uid":"e8e75034-201d-4887-8960-acedd7b7ca68"}},{"data":{"k8s-resources-workload.json":"{\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": true,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"links\": [\n\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 1,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(\\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=\\\"$type\\\"}\\n) by (pod)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU Usage\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 2,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"CPU Usage\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Requests\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Requests %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"CPU Limits\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Limits %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Pod\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell\",\n                            \"pattern\": \"pod\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(\\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=\\\"$type\\\"}\\n) by (pod)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n    kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=\\\"$type\\\"}\\n) by (pod)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=\\\"$type\\\"}\\n) by (pod)\\n/sum(\\n    kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=\\\"$type\\\"}\\n) by (pod)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n    kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=\\\"$type\\\"}\\n) by (pod)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=\\\"$type\\\"}\\n) by (pod)\\n/sum(\\n    kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=\\\"$type\\\"}\\n) by (pod)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Quota\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU Quota\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 3,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(\\n    container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=\\\"$type\\\"}\\n) by (pod)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory Usage\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 4,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"Memory Usage\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Requests\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Requests %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Memory Limits\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Limits %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Pod\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell\",\n                            \"pattern\": \"pod\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(\\n    container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=\\\"$type\\\"}\\n) by (pod)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n    kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=\\\"$type\\\"}\\n) by (pod)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n    container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=\\\"$type\\\"}\\n) by (pod)\\n/sum(\\n    kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=\\\"$type\\\"}\\n) by (pod)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n    kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=\\\"$type\\\"}\\n) by (pod)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n    container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=\\\"$type\\\"}\\n) by (pod)\\n/sum(\\n    kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=\\\"$type\\\"}\\n) by (pod)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Quota\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory Quota\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 5,\n                    \"interval\": \"1m\",\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"Current Receive Bandwidth\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Current Transmit Bandwidth\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Rate of Received Packets\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"pps\"\n                        },\n                        {\n                            \"alias\": \"Rate of Transmitted Packets\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"pps\"\n                        },\n                        {\n                            \"alias\": \"Rate of Received Packets Dropped\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"pps\"\n                        },\n                        {\n                            \"alias\": \"Rate of Transmitted Packets Dropped\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #F\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"pps\"\n                        },\n                        {\n                            \"alias\": \"Pod\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-pod=$__cell\",\n                            \"pattern\": \"pod\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"(sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"(sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"(sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"(sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"(sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"(sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"F\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Current Network Usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Current Network Usage\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 6,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Receive Bandwidth\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 7,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Transmit Bandwidth\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Bandwidth\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 8,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(avg(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Average Container Bandwidth by Pod: Received\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 9,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(avg(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Average Container Bandwidth by Pod: Transmitted\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Average Container Bandwidth by Pod\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 10,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 11,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Rate of Packets\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 12,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 13,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Rate of Packets Dropped\",\n            \"titleSize\": \"h6\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kube_pod_info, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"namespace\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kube_pod_info{cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"workload\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}, workload)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"type\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\"}, workload_type)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / Compute Resources / Workload\",\n    \"uid\": \"a164a7f0339f99e89cea5cb47e9be617\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:k8s-resources-workload.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-k8s-resources-workload","namespace":"default","resourceVersion":"640300","uid":"70376ca3-d25d-4b3a-af89-47161c649bb8"}},{"data":{"k8s-resources-workloads-namespace.json":"{\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": true,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"links\": [\n\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 1,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"quota - requests\",\n                            \"color\": \"#F2495C\",\n                            \"dashes\": true,\n                            \"fill\": 0,\n                            \"hiddenSeries\": true,\n                            \"hideTooltip\": true,\n                            \"legend\": true,\n                            \"linewidth\": 2,\n                            \"stack\": false\n                        },\n                        {\n                            \"alias\": \"quota - limits\",\n                            \"color\": \"#FF9830\",\n                            \"dashes\": true,\n                            \"fill\": 0,\n                            \"hiddenSeries\": true,\n                            \"hideTooltip\": true,\n                            \"legend\": true,\n                            \"linewidth\": 2,\n                            \"stack\": false\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(\\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{workload}} - {{workload_type}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"scalar(kube_resourcequota{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.cpu\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"quota - requests\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"scalar(kube_resourcequota{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.cpu\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"quota - limits\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU Usage\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 2,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"Running Pods\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 0,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Usage\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Requests\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Requests %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"CPU Limits\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"CPU Limits %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #F\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Workload\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$__cell_2\",\n                            \"pattern\": \"workload\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Workload Type\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"workload_type\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"count(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}) by (workload, workload_type)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n  kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}\\n) by (workload, workload_type)\\n/sum(\\n  kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n  kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}\\n) by (workload, workload_type)\\n/sum(\\n  kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"F\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Quota\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU Quota\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 3,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"quota - requests\",\n                            \"color\": \"#F2495C\",\n                            \"dashes\": true,\n                            \"fill\": 0,\n                            \"hiddenSeries\": true,\n                            \"hideTooltip\": true,\n                            \"legend\": true,\n                            \"linewidth\": 2,\n                            \"stack\": false\n                        },\n                        {\n                            \"alias\": \"quota - limits\",\n                            \"color\": \"#FF9830\",\n                            \"dashes\": true,\n                            \"fill\": 0,\n                            \"hiddenSeries\": true,\n                            \"hideTooltip\": true,\n                            \"legend\": true,\n                            \"linewidth\": 2,\n                            \"stack\": false\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(\\n    container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{workload}} - {{workload_type}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"scalar(kube_resourcequota{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.memory\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"quota - requests\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"scalar(kube_resourcequota{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.memory\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"quota - limits\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory Usage\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 4,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"Running Pods\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 0,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Memory Usage\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Requests\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Requests %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Memory Limits\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"bytes\"\n                        },\n                        {\n                            \"alias\": \"Memory Limits %\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #F\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"percentunit\"\n                        },\n                        {\n                            \"alias\": \"Workload\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$__cell_2\",\n                            \"pattern\": \"workload\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Workload Type\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"workload_type\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"count(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}) by (workload, workload_type)\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n    container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n  kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n    container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}\\n) by (workload, workload_type)\\n/sum(\\n  kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n  kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum(\\n    container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}\\n) by (workload, workload_type)\\n/sum(\\n  kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"F\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Quota\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory Quota\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 5,\n                    \"interval\": \"1m\",\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"Current Receive Bandwidth\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Current Transmit Bandwidth\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"Bps\"\n                        },\n                        {\n                            \"alias\": \"Rate of Received Packets\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #C\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"pps\"\n                        },\n                        {\n                            \"alias\": \"Rate of Transmitted Packets\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #D\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"pps\"\n                        },\n                        {\n                            \"alias\": \"Rate of Received Packets Dropped\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #E\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"pps\"\n                        },\n                        {\n                            \"alias\": \"Rate of Transmitted Packets Dropped\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #F\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"pps\"\n                        },\n                        {\n                            \"alias\": \"Workload\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": true,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down to pods\",\n                            \"linkUrl\": \"/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$type\",\n                            \"pattern\": \"workload\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Workload Type\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"workload_type\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"(sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"(sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"(sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"C\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"(sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"D\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"(sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"E\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"(sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"F\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Current Network Usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Current Network Usage\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 6,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{workload}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Receive Bandwidth\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 7,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{workload}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Transmit Bandwidth\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Bandwidth\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 8,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(avg(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{workload}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Average Container Bandwidth by Workload: Received\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 9,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(avg(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{workload}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Average Container Bandwidth by Workload: Transmitted\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Average Container Bandwidth by Workload\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 10,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{workload}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 11,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{workload}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Rate of Packets\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 12,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{workload}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 13,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{workload}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Rate of Packets Dropped\",\n            \"titleSize\": \"h6\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kube_pod_info, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"deployment\",\n                    \"value\": \"deployment\"\n                },\n                \"datasource\": \"$datasource\",\n                \"definition\": \"label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\".+\\\"}, workload_type)\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"type\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\".+\\\"}, workload_type)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"namespace\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kube_pod_info{cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / Compute Resources / Namespace (Workloads)\",\n    \"uid\": \"a87fb0d919ec0ea5f6543124e16c42a5\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:k8s-resources-workloads-namespace.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-k8s-resources-workloads-namespace","namespace":"default","resourceVersion":"640301","uid":"2ddfccc8-f25d-48c2-bddd-5b86728ed9f4"}},{"data":{"kubelet.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"panels\": [\n        {\n            \"datasource\": \"$datasource\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"links\": [\n\n                    ],\n                    \"mappings\": [\n\n                    ],\n                    \"thresholds\": {\n                        \"mode\": \"absolute\",\n                        \"steps\": [\n\n                        ]\n                    },\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 4,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"links\": [\n\n            ],\n            \"options\": {\n                \"colorMode\": \"value\",\n                \"graphMode\": \"area\",\n                \"justifyMode\": \"auto\",\n                \"orientation\": \"auto\",\n                \"reduceOptions\": {\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"fields\": \"\",\n                    \"values\": false\n                },\n                \"textMode\": \"auto\"\n            },\n            \"pluginVersion\": \"7\",\n            \"targets\": [\n                {\n                    \"expr\": \"sum(kubelet_node_name{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\"})\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"title\": \"Running Kubelets\",\n            \"transparent\": false,\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": \"$datasource\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"links\": [\n\n                    ],\n                    \"mappings\": [\n\n                    ],\n                    \"thresholds\": {\n                        \"mode\": \"absolute\",\n                        \"steps\": [\n\n                        ]\n                    },\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 4,\n                \"x\": 4,\n                \"y\": 0\n            },\n            \"id\": 3,\n            \"links\": [\n\n            ],\n            \"options\": {\n                \"colorMode\": \"value\",\n                \"graphMode\": \"area\",\n                \"justifyMode\": \"auto\",\n                \"orientation\": \"auto\",\n                \"reduceOptions\": {\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"fields\": \"\",\n                    \"values\": false\n                },\n                \"textMode\": \"auto\"\n            },\n            \"pluginVersion\": \"7\",\n            \"targets\": [\n                {\n                    \"expr\": \"sum(kubelet_running_pods{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"}) OR sum(kubelet_running_pod_count{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"})\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"title\": \"Running Pods\",\n            \"transparent\": false,\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": \"$datasource\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"links\": [\n\n                    ],\n                    \"mappings\": [\n\n                    ],\n                    \"thresholds\": {\n                        \"mode\": \"absolute\",\n                        \"steps\": [\n\n                        ]\n                    },\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 4,\n                \"x\": 8,\n                \"y\": 0\n            },\n            \"id\": 4,\n            \"links\": [\n\n            ],\n            \"options\": {\n                \"colorMode\": \"value\",\n                \"graphMode\": \"area\",\n                \"justifyMode\": \"auto\",\n                \"orientation\": \"auto\",\n                \"reduceOptions\": {\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"fields\": \"\",\n                    \"values\": false\n                },\n                \"textMode\": \"auto\"\n            },\n            \"pluginVersion\": \"7\",\n            \"targets\": [\n                {\n                    \"expr\": \"sum(kubelet_running_containers{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"}) OR sum(kubelet_running_container_count{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"})\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"title\": \"Running Container\",\n            \"transparent\": false,\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": \"$datasource\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"links\": [\n\n                    ],\n                    \"mappings\": [\n\n                    ],\n                    \"thresholds\": {\n                        \"mode\": \"absolute\",\n                        \"steps\": [\n\n                        ]\n                    },\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 4,\n                \"x\": 12,\n                \"y\": 0\n            },\n            \"id\": 5,\n            \"links\": [\n\n            ],\n            \"options\": {\n                \"colorMode\": \"value\",\n                \"graphMode\": \"area\",\n                \"justifyMode\": \"auto\",\n                \"orientation\": \"auto\",\n                \"reduceOptions\": {\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"fields\": \"\",\n                    \"values\": false\n                },\n                \"textMode\": \"auto\"\n            },\n            \"pluginVersion\": \"7\",\n            \"targets\": [\n                {\n                    \"expr\": \"sum(volume_manager_total_volumes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\", state=\\\"actual_state_of_world\\\"})\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"title\": \"Actual Volume Count\",\n            \"transparent\": false,\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": \"$datasource\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"links\": [\n\n                    ],\n                    \"mappings\": [\n\n                    ],\n                    \"thresholds\": {\n                        \"mode\": \"absolute\",\n                        \"steps\": [\n\n                        ]\n                    },\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 4,\n                \"x\": 16,\n                \"y\": 0\n            },\n            \"id\": 6,\n            \"links\": [\n\n            ],\n            \"options\": {\n                \"colorMode\": \"value\",\n                \"graphMode\": \"area\",\n                \"justifyMode\": \"auto\",\n                \"orientation\": \"auto\",\n                \"reduceOptions\": {\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"fields\": \"\",\n                    \"values\": false\n                },\n                \"textMode\": \"auto\"\n            },\n            \"pluginVersion\": \"7\",\n            \"targets\": [\n                {\n                    \"expr\": \"sum(volume_manager_total_volumes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\",state=\\\"desired_state_of_world\\\"})\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"title\": \"Desired Volume Count\",\n            \"transparent\": false,\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": \"$datasource\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"links\": [\n\n                    ],\n                    \"mappings\": [\n\n                    ],\n                    \"thresholds\": {\n                        \"mode\": \"absolute\",\n                        \"steps\": [\n\n                        ]\n                    },\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 4,\n                \"x\": 20,\n                \"y\": 0\n            },\n            \"id\": 7,\n            \"links\": [\n\n            ],\n            \"options\": {\n                \"colorMode\": \"value\",\n                \"graphMode\": \"area\",\n                \"justifyMode\": \"auto\",\n                \"orientation\": \"auto\",\n                \"reduceOptions\": {\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"fields\": \"\",\n                    \"values\": false\n                },\n                \"textMode\": \"auto\"\n            },\n            \"pluginVersion\": \"7\",\n            \"targets\": [\n                {\n                    \"expr\": \"sum(rate(kubelet_node_config_error{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"}[5m]))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"title\": \"Config Error Count\",\n            \"transparent\": false,\n            \"type\": \"stat\"\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 7\n            },\n            \"id\": 8,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sum(rate(kubelet_runtime_operations_total{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[5m])) by (operation_type, instance)\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} {{operation_type}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Operation Rate\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"ops\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"ops\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 7\n            },\n            \"id\": 9,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sum(rate(kubelet_runtime_operations_errors_total{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[5m])) by (instance, operation_type)\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} {{operation_type}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Operation Error Rate\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"ops\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"ops\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 14\n            },\n            \"id\": 10,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(kubelet_runtime_operations_duration_seconds_bucket{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[5m])) by (instance, operation_type, le))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} {{operation_type}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Operation duration 99th quantile\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"s\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"s\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 21\n            },\n            \"id\": 11,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sum(rate(kubelet_pod_start_duration_seconds_count{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[5m])) by (instance)\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} pod\",\n                    \"refId\": \"A\"\n                },\n                {\n                    \"expr\": \"sum(rate(kubelet_pod_worker_duration_seconds_count{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[5m])) by (instance)\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} worker\",\n                    \"refId\": \"B\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Pod Start Rate\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"ops\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"ops\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 21\n            },\n            \"id\": 12,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(kubelet_pod_start_duration_seconds_count{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[5m])) by (instance, le))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} pod\",\n                    \"refId\": \"A\"\n                },\n                {\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[5m])) by (instance, le))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} worker\",\n                    \"refId\": \"B\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Pod Start Duration\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"s\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"s\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 28\n            },\n            \"id\": 13,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sum(rate(storage_operation_duration_seconds_count{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[5m])) by (instance, operation_name, volume_plugin)\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} {{operation_name}} {{volume_plugin}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Storage Operation Rate\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"ops\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"ops\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 28\n            },\n            \"id\": 14,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sum(rate(storage_operation_errors_total{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[5m])) by (instance, operation_name, volume_plugin)\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} {{operation_name}} {{volume_plugin}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Storage Operation Error Rate\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"ops\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"ops\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 35\n            },\n            \"id\": 15,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(storage_operation_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"}[5m])) by (instance, operation_name, volume_plugin, le))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} {{operation_name}} {{volume_plugin}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Storage Operation Duration 99th quantile\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"s\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"s\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 42\n            },\n            \"id\": 16,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sum(rate(kubelet_cgroup_manager_duration_seconds_count{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"}[5m])) by (instance, operation_type)\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{operation_type}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Cgroup manager operation rate\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"ops\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"ops\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 42\n            },\n            \"id\": 17,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(kubelet_cgroup_manager_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"}[5m])) by (instance, operation_type, le))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} {{operation_type}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Cgroup manager 99th quantile\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"s\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"s\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"description\": \"Pod lifecycle event generator\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 49\n            },\n            \"id\": 18,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sum(rate(kubelet_pleg_relist_duration_seconds_count{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"}[5m])) by (instance)\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"PLEG relist rate\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"ops\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"ops\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 49\n            },\n            \"id\": 19,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_interval_seconds_bucket{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[5m])) by (instance, le))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"PLEG relist interval\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"s\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"s\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 56\n            },\n            \"id\": 20,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[5m])) by (instance, le))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"PLEG relist duration\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"s\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"s\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 63\n            },\n            \"id\": 21,\n            \"legend\": {\n                \"alignAsTable\": false,\n                \"avg\": false,\n                \"current\": false,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": false,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": false\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\",code=~\\\"2..\\\"}[5m]))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"2xx\",\n                    \"refId\": \"A\"\n                },\n                {\n                    \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\",code=~\\\"3..\\\"}[5m]))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"3xx\",\n                    \"refId\": \"B\"\n                },\n                {\n                    \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\",code=~\\\"4..\\\"}[5m]))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"4xx\",\n                    \"refId\": \"C\"\n                },\n                {\n                    \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\",code=~\\\"5..\\\"}[5m]))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"5xx\",\n                    \"refId\": \"D\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"RPC Rate\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"ops\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"ops\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 70\n            },\n            \"id\": 22,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"}[5m])) by (instance, verb, url, le))\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} {{verb}} {{url}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Request duration 99th quantile\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"s\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"s\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 0,\n                \"y\": 77\n            },\n            \"id\": 23,\n            \"legend\": {\n                \"alignAsTable\": false,\n                \"avg\": false,\n                \"current\": false,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": false,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": false\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"process_resident_memory_bytes{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Memory\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"bytes\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"bytes\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 8,\n                \"y\": 77\n            },\n            \"id\": 24,\n            \"legend\": {\n                \"alignAsTable\": false,\n                \"avg\": false,\n                \"current\": false,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": false,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": false\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"rate(process_cpu_seconds_total{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[5m])\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"CPU usage\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"short\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"short\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 16,\n                \"y\": 77\n            },\n            \"id\": 25,\n            \"legend\": {\n                \"alignAsTable\": false,\n                \"avg\": false,\n                \"current\": false,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": false,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": false\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"nullPointMode\": \"null\",\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"go_goroutines{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Goroutines\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"short\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"short\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ]\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": \"cluster\",\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(up{job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"instance\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kubelet_runtime_operations_total{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\"}, instance)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / Kubelet\",\n    \"uid\": \"3138fa155d5915769fbded898ac09fd9\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:kubelet.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-kubelet","namespace":"default","resourceVersion":"640303","uid":"5490dd86-48ca-4f76-8f4e-b0e13af2e6c5"}},{"data":{"namespace-by-pod.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n            {\n                \"builtIn\": 1,\n                \"datasource\": \"-- Grafana --\",\n                \"enable\": true,\n                \"hide\": true,\n                \"iconColor\": \"rgba(0, 211, 255, 1)\",\n                \"name\": \"Annotations & Alerts\",\n                \"type\": \"dashboard\"\n            }\n        ]\n    },\n    \"editable\": true,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"panels\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"panels\": [\n\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Current Bandwidth\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"cacheTimeout\": null,\n            \"colorBackground\": false,\n            \"colorValue\": false,\n            \"colors\": [\n                \"#299c46\",\n                \"rgba(237, 129, 40, 0.89)\",\n                \"#d44a3a\"\n            ],\n            \"datasource\": \"$datasource\",\n            \"decimals\": 0,\n            \"format\": \"time_series\",\n            \"gauge\": {\n                \"maxValue\": 100,\n                \"minValue\": 0,\n                \"show\": false,\n                \"thresholdLabels\": false,\n                \"thresholdMarkers\": true\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 1\n            },\n            \"height\": 9,\n            \"id\": 3,\n            \"interval\": null,\n            \"links\": [\n\n            ],\n            \"mappingType\": 1,\n            \"mappingTypes\": [\n                {\n                    \"name\": \"value to text\",\n                    \"value\": 1\n                },\n                {\n                    \"name\": \"range to text\",\n                    \"value\": 2\n                }\n            ],\n            \"maxDataPoints\": 100,\n            \"minSpan\": 12,\n            \"nullPointMode\": \"connected\",\n            \"nullText\": null,\n            \"options\": {\n                \"fieldOptions\": {\n                    \"calcs\": [\n                        \"last\"\n                    ],\n                    \"defaults\": {\n                        \"max\": 10000000000,\n                        \"min\": 0,\n                        \"title\": \"$namespace\",\n                        \"unit\": \"Bps\"\n                    },\n                    \"mappings\": [\n\n                    ],\n                    \"override\": {\n\n                    },\n                    \"thresholds\": [\n                        {\n                            \"color\": \"dark-green\",\n                            \"index\": 0,\n                            \"value\": null\n                        },\n                        {\n                            \"color\": \"dark-yellow\",\n                            \"index\": 1,\n                            \"value\": 5000000000\n                        },\n                        {\n                            \"color\": \"dark-red\",\n                            \"index\": 2,\n                            \"value\": 7000000000\n                        }\n                    ],\n                    \"values\": false\n                }\n            },\n            \"postfix\": \"\",\n            \"postfixFontSize\": \"50%\",\n            \"prefix\": \"\",\n            \"prefixFontSize\": \"50%\",\n            \"rangeMaps\": [\n                {\n                    \"from\": \"null\",\n                    \"text\": \"N/A\",\n                    \"to\": \"null\"\n                }\n            ],\n            \"span\": 12,\n            \"sparkline\": {\n                \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                \"full\": false,\n                \"lineColor\": \"rgb(31, 120, 193)\",\n                \"show\": false\n            },\n            \"tableColumn\": \"\",\n            \"targets\": [\n                {\n                    \"expr\": \"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution]))\",\n                    \"format\": \"time_series\",\n                    \"instant\": null,\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": \"\",\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Current Rate of Bytes Received\",\n            \"type\": \"gauge\",\n            \"valueFontSize\": \"80%\",\n            \"valueMaps\": [\n                {\n                    \"op\": \"=\",\n                    \"text\": \"N/A\",\n                    \"value\": \"null\"\n                }\n            ],\n            \"valueName\": \"current\"\n        },\n        {\n            \"cacheTimeout\": null,\n            \"colorBackground\": false,\n            \"colorValue\": false,\n            \"colors\": [\n                \"#299c46\",\n                \"rgba(237, 129, 40, 0.89)\",\n                \"#d44a3a\"\n            ],\n            \"datasource\": \"$datasource\",\n            \"decimals\": 0,\n            \"format\": \"time_series\",\n            \"gauge\": {\n                \"maxValue\": 100,\n                \"minValue\": 0,\n                \"show\": false,\n                \"thresholdLabels\": false,\n                \"thresholdMarkers\": true\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 1\n            },\n            \"height\": 9,\n            \"id\": 4,\n            \"interval\": null,\n            \"links\": [\n\n            ],\n            \"mappingType\": 1,\n            \"mappingTypes\": [\n                {\n                    \"name\": \"value to text\",\n                    \"value\": 1\n                },\n                {\n                    \"name\": \"range to text\",\n                    \"value\": 2\n                }\n            ],\n            \"maxDataPoints\": 100,\n            \"minSpan\": 12,\n            \"nullPointMode\": \"connected\",\n            \"nullText\": null,\n            \"options\": {\n                \"fieldOptions\": {\n                    \"calcs\": [\n                        \"last\"\n                    ],\n                    \"defaults\": {\n                        \"max\": 10000000000,\n                        \"min\": 0,\n                        \"title\": \"$namespace\",\n                        \"unit\": \"Bps\"\n                    },\n                    \"mappings\": [\n\n                    ],\n                    \"override\": {\n\n                    },\n                    \"thresholds\": [\n                        {\n                            \"color\": \"dark-green\",\n                            \"index\": 0,\n                            \"value\": null\n                        },\n                        {\n                            \"color\": \"dark-yellow\",\n                            \"index\": 1,\n                            \"value\": 5000000000\n                        },\n                        {\n                            \"color\": \"dark-red\",\n                            \"index\": 2,\n                            \"value\": 7000000000\n                        }\n                    ],\n                    \"values\": false\n                }\n            },\n            \"postfix\": \"\",\n            \"postfixFontSize\": \"50%\",\n            \"prefix\": \"\",\n            \"prefixFontSize\": \"50%\",\n            \"rangeMaps\": [\n                {\n                    \"from\": \"null\",\n                    \"text\": \"N/A\",\n                    \"to\": \"null\"\n                }\n            ],\n            \"span\": 12,\n            \"sparkline\": {\n                \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                \"full\": false,\n                \"lineColor\": \"rgb(31, 120, 193)\",\n                \"show\": false\n            },\n            \"tableColumn\": \"\",\n            \"targets\": [\n                {\n                    \"expr\": \"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution]))\",\n                    \"format\": \"time_series\",\n                    \"instant\": null,\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": \"\",\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Current Rate of Bytes Transmitted\",\n            \"type\": \"gauge\",\n            \"valueFontSize\": \"80%\",\n            \"valueMaps\": [\n                {\n                    \"op\": \"=\",\n                    \"text\": \"N/A\",\n                    \"value\": \"null\"\n                }\n            ],\n            \"valueName\": \"current\"\n        },\n        {\n            \"columns\": [\n                {\n                    \"text\": \"Time\",\n                    \"value\": \"Time\"\n                },\n                {\n                    \"text\": \"Value #A\",\n                    \"value\": \"Value #A\"\n                },\n                {\n                    \"text\": \"Value #B\",\n                    \"value\": \"Value #B\"\n                },\n                {\n                    \"text\": \"Value #C\",\n                    \"value\": \"Value #C\"\n                },\n                {\n                    \"text\": \"Value #D\",\n                    \"value\": \"Value #D\"\n                },\n                {\n                    \"text\": \"Value #E\",\n                    \"value\": \"Value #E\"\n                },\n                {\n                    \"text\": \"Value #F\",\n                    \"value\": \"Value #F\"\n                },\n                {\n                    \"text\": \"pod\",\n                    \"value\": \"pod\"\n                }\n            ],\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fontSize\": \"100%\",\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 10\n            },\n            \"id\": 5,\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"minSpan\": 24,\n            \"nullPointMode\": \"null as zero\",\n            \"renderer\": \"flot\",\n            \"scroll\": true,\n            \"showHeader\": true,\n            \"sort\": {\n                \"col\": 0,\n                \"desc\": false\n            },\n            \"spaceLength\": 10,\n            \"span\": 24,\n            \"styles\": [\n                {\n                    \"alias\": \"Time\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Time\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"hidden\",\n                    \"unit\": \"short\"\n                },\n                {\n                    \"alias\": \"Bandwidth Received\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #A\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"Bps\"\n                },\n                {\n                    \"alias\": \"Bandwidth Transmitted\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #B\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"Bps\"\n                },\n                {\n                    \"alias\": \"Rate of Received Packets\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #C\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"pps\"\n                },\n                {\n                    \"alias\": \"Rate of Transmitted Packets\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #D\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"pps\"\n                },\n                {\n                    \"alias\": \"Rate of Received Packets Dropped\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #E\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"pps\"\n                },\n                {\n                    \"alias\": \"Rate of Transmitted Packets Dropped\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #F\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"pps\"\n                },\n                {\n                    \"alias\": \"Pod\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": true,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"d/7a18067ce943a40ae25454675c19ff5c/kubernetes-networking-pod?orgId=1&refresh=30s&var-namespace=$namespace&var-pod=$__cell\",\n                    \"pattern\": \"pod\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"short\"\n                }\n            ],\n            \"targets\": [\n                {\n                    \"expr\": \"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"B\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"C\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"D\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"E\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"F\",\n                    \"step\": 10\n                }\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Current Status\",\n            \"type\": \"table\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 19\n            },\n            \"id\": 6,\n            \"panels\": [\n\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Bandwidth\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 2,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 20\n            },\n            \"id\": 7,\n            \"legend\": {\n                \"alignAsTable\": false,\n                \"avg\": false,\n                \"current\": false,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": false,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": false\n            },\n            \"lines\": true,\n            \"linewidth\": 2,\n            \"links\": [\n\n            ],\n            \"minSpan\": 12,\n            \"nullPointMode\": \"connected\",\n            \"paceLength\": 10,\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"span\": 12,\n            \"stack\": true,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])) by (pod)\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"{{pod}}\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Receive Bandwidth\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 2,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 20\n            },\n            \"id\": 8,\n            \"legend\": {\n                \"alignAsTable\": false,\n                \"avg\": false,\n                \"current\": false,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": false,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": false\n            },\n            \"lines\": true,\n            \"linewidth\": 2,\n            \"links\": [\n\n            ],\n            \"minSpan\": 12,\n            \"nullPointMode\": \"connected\",\n            \"paceLength\": 10,\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"span\": 12,\n            \"stack\": true,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])) by (pod)\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"{{pod}}\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Transmit Bandwidth\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"collapse\": true,\n            \"collapsed\": true,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 29\n            },\n            \"id\": 9,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 10,\n                        \"w\": 12,\n                        \"x\": 0,\n                        \"y\": 30\n                    },\n                    \"id\": 10,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 12,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 10,\n                        \"w\": 12,\n                        \"x\": 12,\n                        \"y\": 30\n                    },\n                    \"id\": 11,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 12,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Packets\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": true,\n            \"collapsed\": true,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 30\n            },\n            \"id\": 12,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 10,\n                        \"w\": 12,\n                        \"x\": 0,\n                        \"y\": 40\n                    },\n                    \"id\": 13,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 12,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 10,\n                        \"w\": 12,\n                        \"x\": 12,\n                        \"y\": 40\n                    },\n                    \"id\": 14,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 12,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Errors\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n\n    ],\n    \"schemaVersion\": 18,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(up{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": \".+\",\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"kube-system\",\n                    \"value\": \"kube-system\"\n                },\n                \"datasource\": \"$datasource\",\n                \"definition\": \"label_values(container_network_receive_packets_total{cluster=\\\"$cluster\\\"}, namespace)\",\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"namespace\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(container_network_receive_packets_total{cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"5m\",\n                    \"value\": \"5m\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"resolution\",\n                \"options\": [\n                    {\n                        \"selected\": false,\n                        \"text\": \"30s\",\n                        \"value\": \"30s\"\n                    },\n                    {\n                        \"selected\": true,\n                        \"text\": \"5m\",\n                        \"value\": \"5m\"\n                    },\n                    {\n                        \"selected\": false,\n                        \"text\": \"1h\",\n                        \"value\": \"1h\"\n                    }\n                ],\n                \"query\": \"30s,5m,1h\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"interval\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"5m\",\n                    \"value\": \"5m\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"interval\",\n                \"options\": [\n                    {\n                        \"selected\": true,\n                        \"text\": \"4h\",\n                        \"value\": \"4h\"\n                    }\n                ],\n                \"query\": \"4h\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"interval\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / Networking / Namespace (Pods)\",\n    \"uid\": \"8b7a8b326d7a6f1f04244066368c67af\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:namespace-by-pod.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-namespace-by-pod","namespace":"default","resourceVersion":"640302","uid":"4b3e3d8e-90ae-4788-84d8-e09f84b9b0ed"}},{"data":{"namespace-by-workload.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n            {\n                \"builtIn\": 1,\n                \"datasource\": \"-- Grafana --\",\n                \"enable\": true,\n                \"hide\": true,\n                \"iconColor\": \"rgba(0, 211, 255, 1)\",\n                \"name\": \"Annotations & Alerts\",\n                \"type\": \"dashboard\"\n            }\n        ]\n    },\n    \"editable\": true,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"panels\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"panels\": [\n\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Current Bandwidth\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": true,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 2,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 1\n            },\n            \"id\": 3,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"sort\": \"current\",\n                \"sortDesc\": true,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": false,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"minSpan\": 24,\n            \"nullPointMode\": \"null\",\n            \"paceLength\": 10,\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"span\": 24,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"{{ workload }}\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Current Rate of Bytes Received\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"series\",\n                \"name\": null,\n                \"show\": false,\n                \"values\": [\n                    \"current\"\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": true,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 2,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 1\n            },\n            \"id\": 4,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"sort\": \"current\",\n                \"sortDesc\": true,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": false,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"minSpan\": 24,\n            \"nullPointMode\": \"null\",\n            \"paceLength\": 10,\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"span\": 24,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"{{ workload }}\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Current Rate of Bytes Transmitted\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"series\",\n                \"name\": null,\n                \"show\": false,\n                \"values\": [\n                    \"current\"\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"columns\": [\n                {\n                    \"text\": \"Time\",\n                    \"value\": \"Time\"\n                },\n                {\n                    \"text\": \"Value #A\",\n                    \"value\": \"Value #A\"\n                },\n                {\n                    \"text\": \"Value #B\",\n                    \"value\": \"Value #B\"\n                },\n                {\n                    \"text\": \"Value #C\",\n                    \"value\": \"Value #C\"\n                },\n                {\n                    \"text\": \"Value #D\",\n                    \"value\": \"Value #D\"\n                },\n                {\n                    \"text\": \"Value #E\",\n                    \"value\": \"Value #E\"\n                },\n                {\n                    \"text\": \"Value #F\",\n                    \"value\": \"Value #F\"\n                },\n                {\n                    \"text\": \"Value #G\",\n                    \"value\": \"Value #G\"\n                },\n                {\n                    \"text\": \"Value #H\",\n                    \"value\": \"Value #H\"\n                },\n                {\n                    \"text\": \"workload\",\n                    \"value\": \"workload\"\n                }\n            ],\n            \"datasource\": \"$datasource\",\n            \"fill\": 1,\n            \"fontSize\": \"90%\",\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 10\n            },\n            \"id\": 5,\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"minSpan\": 24,\n            \"nullPointMode\": \"null as zero\",\n            \"renderer\": \"flot\",\n            \"scroll\": true,\n            \"showHeader\": true,\n            \"sort\": {\n                \"col\": 0,\n                \"desc\": false\n            },\n            \"spaceLength\": 10,\n            \"span\": 24,\n            \"styles\": [\n                {\n                    \"alias\": \"Time\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Time\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"hidden\",\n                    \"unit\": \"short\"\n                },\n                {\n                    \"alias\": \"Current Bandwidth Received\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #A\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"Bps\"\n                },\n                {\n                    \"alias\": \"Current Bandwidth Transmitted\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #B\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"Bps\"\n                },\n                {\n                    \"alias\": \"Average Bandwidth Received\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #C\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"Bps\"\n                },\n                {\n                    \"alias\": \"Average Bandwidth Transmitted\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #D\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"Bps\"\n                },\n                {\n                    \"alias\": \"Rate of Received Packets\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #E\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"pps\"\n                },\n                {\n                    \"alias\": \"Rate of Transmitted Packets\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #F\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"pps\"\n                },\n                {\n                    \"alias\": \"Rate of Received Packets Dropped\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #G\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"pps\"\n                },\n                {\n                    \"alias\": \"Rate of Transmitted Packets Dropped\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": false,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"\",\n                    \"pattern\": \"Value #H\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"pps\"\n                },\n                {\n                    \"alias\": \"Workload\",\n                    \"colorMode\": null,\n                    \"colors\": [\n\n                    ],\n                    \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                    \"decimals\": 2,\n                    \"link\": true,\n                    \"linkTooltip\": \"Drill down\",\n                    \"linkUrl\": \"d/728bf77cc1166d2f3133bf25846876cc/kubernetes-networking-workload?orgId=1&refresh=30s&var-namespace=$namespace&var-type=$type&var-workload=$__cell\",\n                    \"pattern\": \"workload\",\n                    \"thresholds\": [\n\n                    ],\n                    \"type\": \"number\",\n                    \"unit\": \"short\"\n                }\n            ],\n            \"targets\": [\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"B\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sort_desc(avg(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"C\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sort_desc(avg(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"D\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"E\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"F\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"G\",\n                    \"step\": 10\n                },\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true,\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"H\",\n                    \"step\": 10\n                }\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Current Status\",\n            \"type\": \"table\"\n        },\n        {\n            \"collapse\": true,\n            \"collapsed\": true,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 19\n            },\n            \"id\": 6,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": true,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 12,\n                        \"x\": 0,\n                        \"y\": 20\n                    },\n                    \"id\": 7,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"sort\": \"current\",\n                        \"sortDesc\": true,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": false,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 24,\n                    \"nullPointMode\": \"null\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 24,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(avg(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{ workload }}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Average Rate of Bytes Received\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"series\",\n                        \"name\": null,\n                        \"show\": false,\n                        \"values\": [\n                            \"current\"\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": true,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 12,\n                        \"x\": 12,\n                        \"y\": 20\n                    },\n                    \"id\": 8,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"sort\": \"current\",\n                        \"sortDesc\": true,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": false,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 24,\n                    \"nullPointMode\": \"null\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 24,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(avg(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{ workload }}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Average Rate of Bytes Transmitted\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"series\",\n                        \"name\": null,\n                        \"show\": false,\n                        \"values\": [\n                            \"current\"\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Average Bandwidth\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 29\n            },\n            \"id\": 9,\n            \"panels\": [\n\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Bandwidth HIstory\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 2,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 38\n            },\n            \"id\": 10,\n            \"legend\": {\n                \"alignAsTable\": false,\n                \"avg\": false,\n                \"current\": false,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": false,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": false\n            },\n            \"lines\": true,\n            \"linewidth\": 2,\n            \"links\": [\n\n            ],\n            \"minSpan\": 12,\n            \"nullPointMode\": \"connected\",\n            \"paceLength\": 10,\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"span\": 12,\n            \"stack\": true,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"{{workload}}\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Receive Bandwidth\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 2,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 38\n            },\n            \"id\": 11,\n            \"legend\": {\n                \"alignAsTable\": false,\n                \"avg\": false,\n                \"current\": false,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": false,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": false\n            },\n            \"lines\": true,\n            \"linewidth\": 2,\n            \"links\": [\n\n            ],\n            \"minSpan\": 12,\n            \"nullPointMode\": \"connected\",\n            \"paceLength\": 10,\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"span\": 12,\n            \"stack\": true,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"{{workload}}\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Transmit Bandwidth\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"collapse\": true,\n            \"collapsed\": true,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 39\n            },\n            \"id\": 12,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 12,\n                        \"x\": 0,\n                        \"y\": 40\n                    },\n                    \"id\": 13,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 12,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{workload}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 12,\n                        \"x\": 12,\n                        \"y\": 40\n                    },\n                    \"id\": 14,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 12,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{workload}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Packets\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": true,\n            \"collapsed\": true,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 40\n            },\n            \"id\": 15,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 12,\n                        \"x\": 0,\n                        \"y\": 41\n                    },\n                    \"id\": 16,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 12,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{workload}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 12,\n                        \"x\": 12,\n                        \"y\": 41\n                    },\n                    \"id\": 17,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 12,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=\\\"$type\\\"}) by (workload))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{workload}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Errors\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n\n    ],\n    \"schemaVersion\": 18,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(up{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"kube-system\",\n                    \"value\": \"kube-system\"\n                },\n                \"datasource\": \"$datasource\",\n                \"definition\": \"label_values(container_network_receive_packets_total{cluster=\\\"$cluster\\\"}, namespace)\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"namespace\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(container_network_receive_packets_total{cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"deployment\",\n                    \"value\": \"deployment\"\n                },\n                \"datasource\": \"$datasource\",\n                \"definition\": \"label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\"}, workload_type)\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"type\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\".+\\\"}, workload_type)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"5m\",\n                    \"value\": \"5m\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"resolution\",\n                \"options\": [\n                    {\n                        \"selected\": false,\n                        \"text\": \"30s\",\n                        \"value\": \"30s\"\n                    },\n                    {\n                        \"selected\": true,\n                        \"text\": \"5m\",\n                        \"value\": \"5m\"\n                    },\n                    {\n                        \"selected\": false,\n                        \"text\": \"1h\",\n                        \"value\": \"1h\"\n                    }\n                ],\n                \"query\": \"30s,5m,1h\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"interval\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"5m\",\n                    \"value\": \"5m\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"interval\",\n                \"options\": [\n                    {\n                        \"selected\": true,\n                        \"text\": \"4h\",\n                        \"value\": \"4h\"\n                    }\n                ],\n                \"query\": \"4h\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"interval\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / Networking / Namespace (Workload)\",\n    \"uid\": \"bbb2a765a623ae38130206c7d94a160f\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:namespace-by-workload.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-namespace-by-workload","namespace":"default","resourceVersion":"640290","uid":"998f8273-baa2-4c9f-8d22-3298bd61b2e8"}},{"data":{"node-cluster-rsrc-use.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\": 1,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"refresh\": \"30s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 2,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"((\\n  instance:node_cpu_utilisation:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}\\n  *\\n  instance:node_num_cpu:sum{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}\\n) != 0 )\\n/ scalar(sum(instance:node_num_cpu:sum{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{ instance }}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 3,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n  instance:node_load1_per_cpu:ratio{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}\\n  / scalar(count(instance:node_load1_per_cpu:ratio{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}))\\n)  != 0\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Saturation (Load1 per CPU)\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 4,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n  instance:node_memory_utilisation:ratio{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}\\n  / scalar(count(instance:node_memory_utilisation:ratio{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}))\\n) != 0\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 5,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_vmstat_pgmajfault:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Saturation (Major Page Faults)\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"rds\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"rds\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 6,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"/Receive/\",\n                            \"stack\": \"A\"\n                        },\n                        {\n                            \"alias\": \"/Transmit/\",\n                            \"stack\": \"B\",\n                            \"transform\": \"negative-Y\"\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_network_receive_bytes_excluding_lo:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Receive\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"instance:node_network_transmit_bytes_excluding_lo:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Transmit\",\n                            \"refId\": \"B\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Utilisation (Bytes Receive/Transmit)\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 7,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"/ Receive/\",\n                            \"stack\": \"A\"\n                        },\n                        {\n                            \"alias\": \"/ Transmit/\",\n                            \"stack\": \"B\",\n                            \"transform\": \"negative-Y\"\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_network_receive_drop_excluding_lo:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Receive\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"instance:node_network_transmit_drop_excluding_lo:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Transmit\",\n                            \"refId\": \"B\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Saturation (Drops Receive/Transmit)\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Network\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 8,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n  instance_device:node_disk_io_time_seconds:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}\\n  / scalar(count(instance_device:node_disk_io_time_seconds:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}))\\n) != 0\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} {{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk IO Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 9,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n  instance_device:node_disk_io_time_weighted_seconds:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}\\n  / scalar(count(instance_device:node_disk_io_time_weighted_seconds:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}))\\n) != 0\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} {{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk IO Saturation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Disk IO\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 10,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum without (device) (\\n  max without (fstype, mountpoint) ((\\n    node_filesystem_size_bytes{job=\\\"node-exporter\\\", fstype!=\\\"\\\", cluster=\\\"$cluster\\\"}\\n    -\\n    node_filesystem_avail_bytes{job=\\\"node-exporter\\\", fstype!=\\\"\\\", cluster=\\\"$cluster\\\"}\\n  ) != 0)\\n)\\n/ scalar(sum(max without (fstype, mountpoint) (node_filesystem_size_bytes{job=\\\"node-exporter\\\", fstype!=\\\"\\\", cluster=\\\"$cluster\\\"})))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk Space Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Disk Space\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"node-exporter-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"Prometheus\",\n                    \"value\": \"Prometheus\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(node_time_seconds, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Node Exporter / USE Method / Cluster\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:node-cluster-rsrc-use.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-node-cluster-rsrc-use","namespace":"default","resourceVersion":"640288","uid":"f623625d-c8ee-4d15-a325-658d6cb44945"}},{"data":{"node-rsrc-use.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\": 1,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"refresh\": \"30s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 2,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_cpu_utilisation:rate5m{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Utilisation\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 3,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_load1_per_cpu:ratio{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Saturation\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Saturation (Load1 per CPU)\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 4,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_memory_utilisation:ratio{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Utilisation\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 5,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_vmstat_pgmajfault:rate5m{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Major page Faults\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Saturation (Major Page Faults)\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"rds\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"rds\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 6,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"/Receive/\",\n                            \"stack\": \"A\"\n                        },\n                        {\n                            \"alias\": \"/Transmit/\",\n                            \"stack\": \"B\",\n                            \"transform\": \"negative-Y\"\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_network_receive_bytes_excluding_lo:rate5m{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Receive\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"instance:node_network_transmit_bytes_excluding_lo:rate5m{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Transmit\",\n                            \"refId\": \"B\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Utilisation (Bytes Receive/Transmit)\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 7,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"/ Receive/\",\n                            \"stack\": \"A\"\n                        },\n                        {\n                            \"alias\": \"/ Transmit/\",\n                            \"stack\": \"B\",\n                            \"transform\": \"negative-Y\"\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_network_receive_drop_excluding_lo:rate5m{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Receive\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"instance:node_network_transmit_drop_excluding_lo:rate5m{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Transmit\",\n                            \"refId\": \"B\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Saturation (Drops Receive/Transmit)\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Network\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 8,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance_device:node_disk_io_time_seconds:rate5m{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk IO Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 9,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance_device:node_disk_io_time_weighted_seconds:rate5m{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk IO Saturation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Disk IO\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 10,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(1 -\\n  (\\n   max without (mountpoint, fstype) (node_filesystem_avail_bytes{job=\\\"node-exporter\\\", fstype!=\\\"\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"})\\n   /\\n   max without (mountpoint, fstype) (node_filesystem_size_bytes{job=\\\"node-exporter\\\", fstype!=\\\"\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"})\\n  ) != 0\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk Space Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Disk Space\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"node-exporter-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"Prometheus\",\n                    \"value\": \"Prometheus\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(node_time_seconds, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"instance\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(node_exporter_build_info{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}, instance)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Node Exporter / USE Method / Node\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:node-rsrc-use.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-node-rsrc-use","namespace":"default","resourceVersion":"640311","uid":"dfe955f7-4378-492e-8e6e-9713fa7626d3"}},{"data":{"nodes.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\": 1,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"refresh\": \"30s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 2,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n  (1 - rate(node_cpu_seconds_total{job=\\\"node-exporter\\\", mode=\\\"idle\\\", instance=\\\"$instance\\\"}[$__rate_interval]))\\n/ ignoring(cpu) group_left\\n  count without (cpu)( node_cpu_seconds_total{job=\\\"node-exporter\\\", mode=\\\"idle\\\", instance=\\\"$instance\\\"})\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 5,\n                            \"legendFormat\": \"{{cpu}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Usage\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": 1,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": 1,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 0,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 3,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"node_load1{job=\\\"node-exporter\\\", instance=\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"1m load average\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"node_load5{job=\\\"node-exporter\\\", instance=\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"5m load average\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"node_load15{job=\\\"node-exporter\\\", instance=\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"15m load average\",\n                            \"refId\": \"C\"\n                        },\n                        {\n                            \"expr\": \"count(node_cpu_seconds_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", mode=\\\"idle\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"logical cores\",\n                            \"refId\": \"D\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Load Average\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 4,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 9,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n  node_memory_MemTotal_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\"}\\n-\\n  node_memory_MemFree_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\"}\\n-\\n  node_memory_Buffers_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\"}\\n-\\n  node_memory_Cached_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\"}\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"memory used\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"node_memory_Buffers_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"memory buffers\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"node_memory_Cached_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"memory cached\",\n                            \"refId\": \"C\"\n                        },\n                        {\n                            \"expr\": \"node_memory_MemFree_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"memory free\",\n                            \"refId\": \"D\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Usage\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"rgba(50, 172, 45, 0.97)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(245, 54, 54, 0.9)\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"format\": \"percent\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": true,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 5,\n                    \"interval\": null,\n                    \"links\": [\n\n                    ],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 3,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"full\": false,\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": false\n                    },\n                    \"tableColumn\": \"\",\n                    \"targets\": [\n                        {\n                            \"expr\": \"100 -\\n(\\n  avg(node_memory_MemAvailable_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\"})\\n/\\n  avg(node_memory_MemTotal_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\"})\\n* 100\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"80, 90\",\n                    \"title\": \"Memory Usage\",\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"80%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"N/A\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"current\"\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 0,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 6,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"/ read| written/\",\n                            \"yaxis\": 1\n                        },\n                        {\n                            \"alias\": \"/ io time/\",\n                            \"yaxis\": 2\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(node_disk_read_bytes_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", device=~\\\"mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\\\"}[$__rate_interval])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{device}} read\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"rate(node_disk_written_bytes_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", device=~\\\"mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\\\"}[$__rate_interval])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{device}} written\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"rate(node_disk_io_time_seconds_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", device=~\\\"mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\\\"}[$__rate_interval])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{device}} io time\",\n                            \"refId\": \"C\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk I/O\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 7,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"used\",\n                            \"color\": \"#E0B400\"\n                        },\n                        {\n                            \"alias\": \"available\",\n                            \"color\": \"#73BF69\"\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(\\n  max by (device) (\\n    node_filesystem_size_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", fstype!=\\\"\\\"}\\n  -\\n    node_filesystem_avail_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", fstype!=\\\"\\\"}\\n  )\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"used\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"sum(\\n  max by (device) (\\n    node_filesystem_avail_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", fstype!=\\\"\\\"}\\n  )\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"available\",\n                            \"refId\": \"B\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk Space Usage\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 0,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 8,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(node_network_receive_bytes_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", device!=\\\"lo\\\"}[$__rate_interval])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Received\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 0,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 9,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(node_network_transmit_bytes_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", device!=\\\"lo\\\"}[$__rate_interval])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Transmitted\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"node-exporter-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"Prometheus\",\n                    \"value\": \"Prometheus\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"instance\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(node_exporter_build_info{job=\\\"node-exporter\\\"}, instance)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Node Exporter / Nodes\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:nodes.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-nodes","namespace":"default","resourceVersion":"640306","uid":"b2684b86-c2c9-496d-8e51-6e9824397468"}},{"data":{"persistentvolumesusage.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 2,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": true,\n                        \"current\": true,\n                        \"max\": true,\n                        \"min\": true,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 9,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_capacity_bytes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})))\\n  -\\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_available_bytes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})))\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"Used Space\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"sum without(instance, node) (topk(1, (kubelet_volume_stats_available_bytes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"Free Space\",\n                            \"refId\": \"B\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Volume Space Usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"rgba(50, 172, 45, 0.97)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(245, 54, 54, 0.9)\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"format\": \"percent\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": true,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 3,\n                    \"interval\": null,\n                    \"links\": [\n\n                    ],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 3,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"full\": false,\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": false\n                    },\n                    \"tableColumn\": \"\",\n                    \"targets\": [\n                        {\n                            \"expr\": \"max without(instance,node) (\\n(\\n  topk(1, kubelet_volume_stats_capacity_bytes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})\\n  -\\n  topk(1, kubelet_volume_stats_available_bytes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})\\n)\\n/\\ntopk(1, kubelet_volume_stats_capacity_bytes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})\\n* 100)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"80, 90\",\n                    \"title\": \"Volume Space Usage\",\n                    \"tooltip\": {\n                        \"shared\": false\n                    },\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"80%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"N/A\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"current\"\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 4,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": true,\n                        \"current\": true,\n                        \"max\": true,\n                        \"min\": true,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 9,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes_used{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"Used inodes\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"(\\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})))\\n  -\\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes_used{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})))\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \" Free inodes\",\n                            \"refId\": \"B\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Volume inodes Usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"none\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"none\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"rgba(50, 172, 45, 0.97)\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"rgba(245, 54, 54, 0.9)\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"format\": \"percent\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": true,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 5,\n                    \"interval\": null,\n                    \"links\": [\n\n                    ],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 3,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"full\": false,\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": false\n                    },\n                    \"tableColumn\": \"\",\n                    \"targets\": [\n                        {\n                            \"expr\": \"max without(instance,node) (\\ntopk(1, kubelet_volume_stats_inodes_used{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})\\n/\\ntopk(1, kubelet_volume_stats_inodes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})\\n* 100)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"80, 90\",\n                    \"title\": \"Volume inodes Usage\",\n                    \"tooltip\": {\n                        \"shared\": false\n                    },\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"80%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"N/A\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"current\"\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": \"cluster\",\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kubelet_volume_stats_capacity_bytes, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": \"Namespace\",\n                \"multi\": false,\n                \"name\": \"namespace\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kubelet_volume_stats_capacity_bytes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": \"PersistentVolumeClaim\",\n                \"multi\": false,\n                \"name\": \"volume\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kubelet_volume_stats_capacity_bytes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\"}, persistentvolumeclaim)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-7d\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / Persistent Volumes\",\n    \"uid\": \"919b92a8e8041bd567af9edab12c840c\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:persistentvolumesusage.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-persistentvolumesusage","namespace":"default","resourceVersion":"640312","uid":"a6f7dea5-27e3-4468-8727-a3474dc6db93"}},{"data":{"pod-total.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n            {\n                \"builtIn\": 1,\n                \"datasource\": \"-- Grafana --\",\n                \"enable\": true,\n                \"hide\": true,\n                \"iconColor\": \"rgba(0, 211, 255, 1)\",\n                \"name\": \"Annotations & Alerts\",\n                \"type\": \"dashboard\"\n            }\n        ]\n    },\n    \"editable\": true,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"panels\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"panels\": [\n\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Current Bandwidth\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"cacheTimeout\": null,\n            \"colorBackground\": false,\n            \"colorValue\": false,\n            \"colors\": [\n                \"#299c46\",\n                \"rgba(237, 129, 40, 0.89)\",\n                \"#d44a3a\"\n            ],\n            \"datasource\": \"$datasource\",\n            \"decimals\": 0,\n            \"format\": \"time_series\",\n            \"gauge\": {\n                \"maxValue\": 100,\n                \"minValue\": 0,\n                \"show\": false,\n                \"thresholdLabels\": false,\n                \"thresholdMarkers\": true\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 1\n            },\n            \"height\": 9,\n            \"id\": 3,\n            \"interval\": null,\n            \"links\": [\n\n            ],\n            \"mappingType\": 1,\n            \"mappingTypes\": [\n                {\n                    \"name\": \"value to text\",\n                    \"value\": 1\n                },\n                {\n                    \"name\": \"range to text\",\n                    \"value\": 2\n                }\n            ],\n            \"maxDataPoints\": 100,\n            \"minSpan\": 12,\n            \"nullPointMode\": \"connected\",\n            \"nullText\": null,\n            \"options\": {\n                \"fieldOptions\": {\n                    \"calcs\": [\n                        \"last\"\n                    ],\n                    \"defaults\": {\n                        \"max\": 10000000000,\n                        \"min\": 0,\n                        \"title\": \"$namespace: $pod\",\n                        \"unit\": \"Bps\"\n                    },\n                    \"mappings\": [\n\n                    ],\n                    \"override\": {\n\n                    },\n                    \"thresholds\": [\n                        {\n                            \"color\": \"dark-green\",\n                            \"index\": 0,\n                            \"value\": null\n                        },\n                        {\n                            \"color\": \"dark-yellow\",\n                            \"index\": 1,\n                            \"value\": 5000000000\n                        },\n                        {\n                            \"color\": \"dark-red\",\n                            \"index\": 2,\n                            \"value\": 7000000000\n                        }\n                    ],\n                    \"values\": false\n                }\n            },\n            \"postfix\": \"\",\n            \"postfixFontSize\": \"50%\",\n            \"prefix\": \"\",\n            \"prefixFontSize\": \"50%\",\n            \"rangeMaps\": [\n                {\n                    \"from\": \"null\",\n                    \"text\": \"N/A\",\n                    \"to\": \"null\"\n                }\n            ],\n            \"span\": 12,\n            \"sparkline\": {\n                \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                \"full\": false,\n                \"lineColor\": \"rgb(31, 120, 193)\",\n                \"show\": false\n            },\n            \"tableColumn\": \"\",\n            \"targets\": [\n                {\n                    \"expr\": \"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$interval:$resolution]))\",\n                    \"format\": \"time_series\",\n                    \"instant\": null,\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": \"\",\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Current Rate of Bytes Received\",\n            \"type\": \"gauge\",\n            \"valueFontSize\": \"80%\",\n            \"valueMaps\": [\n                {\n                    \"op\": \"=\",\n                    \"text\": \"N/A\",\n                    \"value\": \"null\"\n                }\n            ],\n            \"valueName\": \"current\"\n        },\n        {\n            \"cacheTimeout\": null,\n            \"colorBackground\": false,\n            \"colorValue\": false,\n            \"colors\": [\n                \"#299c46\",\n                \"rgba(237, 129, 40, 0.89)\",\n                \"#d44a3a\"\n            ],\n            \"datasource\": \"$datasource\",\n            \"decimals\": 0,\n            \"format\": \"time_series\",\n            \"gauge\": {\n                \"maxValue\": 100,\n                \"minValue\": 0,\n                \"show\": false,\n                \"thresholdLabels\": false,\n                \"thresholdMarkers\": true\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 1\n            },\n            \"height\": 9,\n            \"id\": 4,\n            \"interval\": null,\n            \"links\": [\n\n            ],\n            \"mappingType\": 1,\n            \"mappingTypes\": [\n                {\n                    \"name\": \"value to text\",\n                    \"value\": 1\n                },\n                {\n                    \"name\": \"range to text\",\n                    \"value\": 2\n                }\n            ],\n            \"maxDataPoints\": 100,\n            \"minSpan\": 12,\n            \"nullPointMode\": \"connected\",\n            \"nullText\": null,\n            \"options\": {\n                \"fieldOptions\": {\n                    \"calcs\": [\n                        \"last\"\n                    ],\n                    \"defaults\": {\n                        \"max\": 10000000000,\n                        \"min\": 0,\n                        \"title\": \"$namespace: $pod\",\n                        \"unit\": \"Bps\"\n                    },\n                    \"mappings\": [\n\n                    ],\n                    \"override\": {\n\n                    },\n                    \"thresholds\": [\n                        {\n                            \"color\": \"dark-green\",\n                            \"index\": 0,\n                            \"value\": null\n                        },\n                        {\n                            \"color\": \"dark-yellow\",\n                            \"index\": 1,\n                            \"value\": 5000000000\n                        },\n                        {\n                            \"color\": \"dark-red\",\n                            \"index\": 2,\n                            \"value\": 7000000000\n                        }\n                    ],\n                    \"values\": false\n                }\n            },\n            \"postfix\": \"\",\n            \"postfixFontSize\": \"50%\",\n            \"prefix\": \"\",\n            \"prefixFontSize\": \"50%\",\n            \"rangeMaps\": [\n                {\n                    \"from\": \"null\",\n                    \"text\": \"N/A\",\n                    \"to\": \"null\"\n                }\n            ],\n            \"span\": 12,\n            \"sparkline\": {\n                \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                \"full\": false,\n                \"lineColor\": \"rgb(31, 120, 193)\",\n                \"show\": false\n            },\n            \"tableColumn\": \"\",\n            \"targets\": [\n                {\n                    \"expr\": \"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$interval:$resolution]))\",\n                    \"format\": \"time_series\",\n                    \"instant\": null,\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": \"\",\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Current Rate of Bytes Transmitted\",\n            \"type\": \"gauge\",\n            \"valueFontSize\": \"80%\",\n            \"valueMaps\": [\n                {\n                    \"op\": \"=\",\n                    \"text\": \"N/A\",\n                    \"value\": \"null\"\n                }\n            ],\n            \"valueName\": \"current\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 10\n            },\n            \"id\": 5,\n            \"panels\": [\n\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Bandwidth\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 2,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 11\n            },\n            \"id\": 6,\n            \"legend\": {\n                \"alignAsTable\": false,\n                \"avg\": false,\n                \"current\": false,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": false,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": false\n            },\n            \"lines\": true,\n            \"linewidth\": 2,\n            \"links\": [\n\n            ],\n            \"minSpan\": 12,\n            \"nullPointMode\": \"connected\",\n            \"paceLength\": 10,\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"span\": 12,\n            \"stack\": true,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$interval:$resolution])) by (pod)\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"{{pod}}\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Receive Bandwidth\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 2,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 11\n            },\n            \"id\": 7,\n            \"legend\": {\n                \"alignAsTable\": false,\n                \"avg\": false,\n                \"current\": false,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": false,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": false\n            },\n            \"lines\": true,\n            \"linewidth\": 2,\n            \"links\": [\n\n            ],\n            \"minSpan\": 12,\n            \"nullPointMode\": \"connected\",\n            \"paceLength\": 10,\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"span\": 12,\n            \"stack\": true,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$interval:$resolution])) by (pod)\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"{{pod}}\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Transmit Bandwidth\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"collapse\": true,\n            \"collapsed\": true,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 20\n            },\n            \"id\": 8,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 10,\n                        \"w\": 12,\n                        \"x\": 0,\n                        \"y\": 21\n                    },\n                    \"id\": 9,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 12,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$interval:$resolution])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 10,\n                        \"w\": 12,\n                        \"x\": 12,\n                        \"y\": 21\n                    },\n                    \"id\": 10,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 12,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$interval:$resolution])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Packets\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": true,\n            \"collapsed\": true,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 21\n            },\n            \"id\": 11,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 10,\n                        \"w\": 12,\n                        \"x\": 0,\n                        \"y\": 32\n                    },\n                    \"id\": 12,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 12,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$interval:$resolution])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 10,\n                        \"w\": 12,\n                        \"x\": 12,\n                        \"y\": 32\n                    },\n                    \"id\": 13,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 12,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$interval:$resolution])) by (pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Errors\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n\n    ],\n    \"schemaVersion\": 18,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(up{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": \".+\",\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"kube-system\",\n                    \"value\": \"kube-system\"\n                },\n                \"datasource\": \"$datasource\",\n                \"definition\": \"label_values(container_network_receive_packets_total{cluster=\\\"$cluster\\\"}, namespace)\",\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"namespace\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(container_network_receive_packets_total{cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": \".+\",\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"definition\": \"label_values(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}, pod)\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"pod\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}, pod)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"5m\",\n                    \"value\": \"5m\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"resolution\",\n                \"options\": [\n                    {\n                        \"selected\": false,\n                        \"text\": \"30s\",\n                        \"value\": \"30s\"\n                    },\n                    {\n                        \"selected\": true,\n                        \"text\": \"5m\",\n                        \"value\": \"5m\"\n                    },\n                    {\n                        \"selected\": false,\n                        \"text\": \"1h\",\n                        \"value\": \"1h\"\n                    }\n                ],\n                \"query\": \"30s,5m,1h\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"interval\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"5m\",\n                    \"value\": \"5m\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"interval\",\n                \"options\": [\n                    {\n                        \"selected\": true,\n                        \"text\": \"4h\",\n                        \"value\": \"4h\"\n                    }\n                ],\n                \"query\": \"4h\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"interval\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / Networking / Pod\",\n    \"uid\": \"7a18067ce943a40ae25454675c19ff5c\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:pod-total.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-pod-total","namespace":"default","resourceVersion":"640313","uid":"d5e0ce11-2ca3-41d1-ac59-b3838e1af964"}},{"data":{"prometheus.json":"{\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": true,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"links\": [\n\n    ],\n    \"refresh\": \"60s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 1,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"Count\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"hidden\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Uptime\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Instance\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"instance\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Job\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"job\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Version\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"version\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"count by (job, instance, version) (prometheus_build_info{job=~\\\"$job\\\", instance=~\\\"$instance\\\"})\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"max by (job, instance) (time() - process_start_time_seconds{job=~\\\"$job\\\", instance=~\\\"$instance\\\"})\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Prometheus Stats\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Prometheus Stats\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 2,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(prometheus_target_sync_length_seconds_sum{job=~\\\"$job\\\",instance=~\\\"$instance\\\"}[5m])) by (scrape_job) * 1e3\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{scrape_job}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Target Sync\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ms\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 3,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(prometheus_sd_discovered_targets{job=~\\\"$job\\\",instance=~\\\"$instance\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Targets\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Targets\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Discovery\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 4,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(prometheus_target_interval_length_seconds_sum{job=~\\\"$job\\\",instance=~\\\"$instance\\\"}[5m]) / rate(prometheus_target_interval_length_seconds_count{job=~\\\"$job\\\",instance=~\\\"$instance\\\"}[5m]) * 1e3\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{interval}} configured\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Average Scrape Interval Duration\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ms\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 5,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum by (job) (rate(prometheus_target_scrapes_exceeded_body_size_limit_total[1m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"exceeded body size limit: {{job}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by (job) (rate(prometheus_target_scrapes_exceeded_sample_limit_total[1m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"exceeded sample limit: {{job}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by (job) (rate(prometheus_target_scrapes_sample_duplicate_timestamp_total[1m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"duplicate timestamp: {{job}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by (job) (rate(prometheus_target_scrapes_sample_out_of_bounds_total[1m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"out of bounds: {{job}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        },\n                        {\n                            \"expr\": \"sum by (job) (rate(prometheus_target_scrapes_sample_out_of_order_total[1m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"out of order: {{job}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Scrape failures\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 6,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(prometheus_tsdb_head_samples_appended_total{job=~\\\"$job\\\",instance=~\\\"$instance\\\"}[5m])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{job}} {{instance}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Appended Samples\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Retrieval\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 7,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"prometheus_tsdb_head_series{job=~\\\"$job\\\",instance=~\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{job}} {{instance}} head series\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Head Series\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 8,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"prometheus_tsdb_head_chunks{job=~\\\"$job\\\",instance=~\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{job}} {{instance}} head chunks\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Head Chunks\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Storage\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 9,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(prometheus_engine_query_duration_seconds_count{job=~\\\"$job\\\",instance=~\\\"$instance\\\",slice=\\\"inner_eval\\\"}[5m])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{job}} {{instance}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Query Rate\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 10,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"max by (slice) (prometheus_engine_query_duration_seconds{quantile=\\\"0.9\\\",job=~\\\"$job\\\",instance=~\\\"$instance\\\"}) * 1e3\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{slice}}\",\n                            \"legendLink\": null,\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Stage Duration\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ms\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Query\",\n            \"titleSize\": \"h6\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"prometheus-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": \".+\",\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"All\",\n                    \"value\": \"$__all\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": \"job\",\n                \"multi\": true,\n                \"name\": \"job\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(prometheus_build_info{job=\\\"prometheus-k8s\\\",namespace=\\\"monitoring\\\"}, job)\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"sort\": 2,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": \".+\",\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"All\",\n                    \"value\": \"$__all\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": \"instance\",\n                \"multi\": true,\n                \"name\": \"instance\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(prometheus_build_info{job=~\\\"$job\\\"}, instance)\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"sort\": 2,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Prometheus / Overview\",\n    \"uid\": \"\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:prometheus.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-prometheus","namespace":"default","resourceVersion":"640305","uid":"09d46bdc-e090-43a8-acc2-1215d8076fd0"}},{"data":{"proxy.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"#299c46\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"#d44a3a\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"format\": \"none\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": false,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 2,\n                    \"interval\": null,\n                    \"links\": [\n\n                    ],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 2,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"full\": false,\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": false\n                    },\n                    \"tableColumn\": \"\",\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(up{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"\",\n                    \"title\": \"Up\",\n                    \"tooltip\": {\n                        \"shared\": false\n                    },\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"80%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"N/A\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"min\"\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 3,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 5,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(kubeproxy_sync_proxy_rules_duration_seconds_count{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"rate\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rules Sync Rate\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 4,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 5,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"histogram_quantile(0.99,rate(kubeproxy_sync_proxy_rules_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rule Sync Latency 99th Quantile\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 5,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(kubeproxy_network_programming_duration_seconds_count{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"rate\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Programming Rate\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 6,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"histogram_quantile(0.99, sum(rate(kubeproxy_network_programming_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\"}[5m])) by (instance, le))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Programming Latency 99th Quantile\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 7,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\",code=~\\\"2..\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"2xx\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\",code=~\\\"3..\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"3xx\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\",code=~\\\"4..\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"4xx\",\n                            \"refId\": \"C\"\n                        },\n                        {\n                            \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\",code=~\\\"5..\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"5xx\",\n                            \"refId\": \"D\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Kube API Request Rate\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 8,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 8,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\",instance=~\\\"$instance\\\",verb=\\\"POST\\\"}[5m])) by (verb, url, le))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{verb}} {{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Post Request Latency 99th Quantile\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 9,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\", verb=\\\"GET\\\"}[5m])) by (verb, url, le))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{verb}} {{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Get Request Latency 99th Quantile\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 10,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"process_resident_memory_bytes{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\",instance=~\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 11,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(process_cpu_seconds_total{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\",instance=~\\\"$instance\\\"}[5m])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 12,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"go_goroutines{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\",instance=~\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Goroutines\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": \"cluster\",\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kube_pod_info, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"instance\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kubeproxy_network_programming_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\"}, instance)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / Proxy\",\n    \"uid\": \"632e265de029684c40b21cb76bca4f94\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:proxy.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-proxy","namespace":"default","resourceVersion":"640308","uid":"23aecd51-5d1d-48ce-a866-d75073859880"}},{"data":{"scheduler.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"#299c46\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"#d44a3a\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"format\": \"none\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": false,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 2,\n                    \"interval\": null,\n                    \"links\": [\n\n                    ],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 2,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"full\": false,\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": false\n                    },\n                    \"tableColumn\": \"\",\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(up{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"\",\n                    \"title\": \"Up\",\n                    \"tooltip\": {\n                        \"shared\": false\n                    },\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"80%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"N/A\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"min\"\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 3,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 5,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(scheduler_e2e_scheduling_duration_seconds_count{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\"}[5m])) by (cluster, instance)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}} {{instance}} e2e\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"sum(rate(scheduler_binding_duration_seconds_count{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\"}[5m])) by (cluster, instance)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}} {{instance}} binding\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"sum(rate(scheduler_scheduling_algorithm_duration_seconds_count{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\"}[5m])) by (cluster, instance)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}} {{instance}} scheduling algorithm\",\n                            \"refId\": \"C\"\n                        },\n                        {\n                            \"expr\": \"sum(rate(scheduler_volume_scheduling_duration_seconds_count{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\"}[5m])) by (cluster, instance)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}} {{instance}} volume\",\n                            \"refId\": \"D\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Scheduling Rate\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 4,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 5,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\",instance=~\\\"$instance\\\"}[5m])) by (cluster, instance, le))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}} {{instance}} e2e\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\",instance=~\\\"$instance\\\"}[5m])) by (cluster, instance, le))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}} {{instance}} binding\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\",instance=~\\\"$instance\\\"}[5m])) by (cluster, instance, le))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}} {{instance}} scheduling algorithm\",\n                            \"refId\": \"C\"\n                        },\n                        {\n                            \"expr\": \"histogram_quantile(0.99, sum(rate(scheduler_volume_scheduling_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\",instance=~\\\"$instance\\\"}[5m])) by (cluster, instance, le))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}} {{instance}} volume\",\n                            \"refId\": \"D\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Scheduling latency 99th Quantile\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 5,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\",code=~\\\"2..\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"2xx\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\",code=~\\\"3..\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"3xx\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\",code=~\\\"4..\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"4xx\",\n                            \"refId\": \"C\"\n                        },\n                        {\n                            \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\",code=~\\\"5..\\\"}[5m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"5xx\",\n                            \"refId\": \"D\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Kube API Request Rate\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"ops\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 6,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 8,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\", verb=\\\"POST\\\"}[5m])) by (verb, url, le))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{verb}} {{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Post Request Latency 99th Quantile\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 7,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\", verb=\\\"GET\\\"}[5m])) by (verb, url, le))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{verb}} {{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Get Request Latency 99th Quantile\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"s\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 8,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"process_resident_memory_bytes{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 9,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(process_cpu_seconds_total{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\"}[5m])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU usage\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 10,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"go_goroutines{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\",instance=~\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Goroutines\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": \"cluster\",\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(up{job=\\\"kube-scheduler\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"instance\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(process_cpu_seconds_total{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\"}, instance)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / Scheduler\",\n    \"uid\": \"2e6b6a3b4bddf1427b3a55aa1311c656\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:scheduler.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-scheduler","namespace":"default","resourceVersion":"640314","uid":"c4bc144c-a518-4f11-9445-300619646ae5"}},{"data":{"statefulset.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"refresh\": \"\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"#299c46\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"#d44a3a\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"format\": \"none\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": false,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 2,\n                    \"interval\": null,\n                    \"links\": [\n\n                    ],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"cores\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 4,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": true\n                    },\n                    \"tableColumn\": \"\",\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(container_cpu_usage_seconds_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", container!=\\\"\\\", namespace=\\\"$namespace\\\", pod=~\\\"$statefulset.*\\\"}[3m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"\",\n                    \"title\": \"CPU\",\n                    \"tooltip\": {\n                        \"shared\": false\n                    },\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"80%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"0\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"current\"\n                },\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"#299c46\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"#d44a3a\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"format\": \"none\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": false,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 3,\n                    \"interval\": null,\n                    \"links\": [\n\n                    ],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"GB\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 4,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": true\n                    },\n                    \"tableColumn\": \"\",\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(container_memory_usage_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", container!=\\\"\\\", namespace=\\\"$namespace\\\", pod=~\\\"$statefulset.*\\\"}) / 1024^3\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"\",\n                    \"title\": \"Memory\",\n                    \"tooltip\": {\n                        \"shared\": false\n                    },\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"80%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"0\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"current\"\n                },\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"#299c46\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"#d44a3a\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"format\": \"none\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": false,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 4,\n                    \"interval\": null,\n                    \"links\": [\n\n                    ],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"Bps\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 4,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": true\n                    },\n                    \"tableColumn\": \"\",\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=~\\\"$statefulset.*\\\"}[3m])) + sum(rate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",pod=~\\\"$statefulset.*\\\"}[3m]))\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"\",\n                    \"title\": \"Network\",\n                    \"tooltip\": {\n                        \"shared\": false\n                    },\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"80%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"0\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"current\"\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"height\": \"100px\",\n            \"panels\": [\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"#299c46\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"#d44a3a\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"format\": \"none\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": false,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 5,\n                    \"interval\": null,\n                    \"links\": [\n\n                    ],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 3,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"full\": false,\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": false\n                    },\n                    \"tableColumn\": \"\",\n                    \"targets\": [\n                        {\n                            \"expr\": \"max(kube_statefulset_replicas{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", statefulset=\\\"$statefulset\\\"}) without (instance, pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"\",\n                    \"title\": \"Desired Replicas\",\n                    \"tooltip\": {\n                        \"shared\": false\n                    },\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"80%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"0\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"current\"\n                },\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"#299c46\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"#d44a3a\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"format\": \"none\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": false,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 6,\n                    \"interval\": null,\n                    \"links\": [\n\n                    ],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 3,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"full\": false,\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": false\n                    },\n                    \"tableColumn\": \"\",\n                    \"targets\": [\n                        {\n                            \"expr\": \"min(kube_statefulset_status_replicas_current{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", statefulset=\\\"$statefulset\\\"}) without (instance, pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"\",\n                    \"title\": \"Replicas of current version\",\n                    \"tooltip\": {\n                        \"shared\": false\n                    },\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"80%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"0\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"current\"\n                },\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"#299c46\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"#d44a3a\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"format\": \"none\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": false,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 7,\n                    \"interval\": null,\n                    \"links\": [\n\n                    ],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 3,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"full\": false,\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": false\n                    },\n                    \"tableColumn\": \"\",\n                    \"targets\": [\n                        {\n                            \"expr\": \"max(kube_statefulset_status_observed_generation{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", statefulset=\\\"$statefulset\\\"}) without (instance, pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"\",\n                    \"title\": \"Observed Generation\",\n                    \"tooltip\": {\n                        \"shared\": false\n                    },\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"80%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"0\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"current\"\n                },\n                {\n                    \"cacheTimeout\": null,\n                    \"colorBackground\": false,\n                    \"colorValue\": false,\n                    \"colors\": [\n                        \"#299c46\",\n                        \"rgba(237, 129, 40, 0.89)\",\n                        \"#d44a3a\"\n                    ],\n                    \"datasource\": \"$datasource\",\n                    \"format\": \"none\",\n                    \"gauge\": {\n                        \"maxValue\": 100,\n                        \"minValue\": 0,\n                        \"show\": false,\n                        \"thresholdLabels\": false,\n                        \"thresholdMarkers\": true\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 8,\n                    \"interval\": null,\n                    \"links\": [\n\n                    ],\n                    \"mappingType\": 1,\n                    \"mappingTypes\": [\n                        {\n                            \"name\": \"value to text\",\n                            \"value\": 1\n                        },\n                        {\n                            \"name\": \"range to text\",\n                            \"value\": 2\n                        }\n                    ],\n                    \"maxDataPoints\": 100,\n                    \"nullPointMode\": \"connected\",\n                    \"nullText\": null,\n                    \"postfix\": \"\",\n                    \"postfixFontSize\": \"50%\",\n                    \"prefix\": \"\",\n                    \"prefixFontSize\": \"50%\",\n                    \"rangeMaps\": [\n                        {\n                            \"from\": \"null\",\n                            \"text\": \"N/A\",\n                            \"to\": \"null\"\n                        }\n                    ],\n                    \"span\": 3,\n                    \"sparkline\": {\n                        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n                        \"full\": false,\n                        \"lineColor\": \"rgb(31, 120, 193)\",\n                        \"show\": false\n                    },\n                    \"tableColumn\": \"\",\n                    \"targets\": [\n                        {\n                            \"expr\": \"max(kube_statefulset_metadata_generation{job=\\\"kube-state-metrics\\\", statefulset=\\\"$statefulset\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) without (instance, pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": \"\",\n                    \"title\": \"Metadata Generation\",\n                    \"tooltip\": {\n                        \"shared\": false\n                    },\n                    \"type\": \"singlestat\",\n                    \"valueFontSize\": \"80%\",\n                    \"valueMaps\": [\n                        {\n                            \"op\": \"=\",\n                            \"text\": \"0\",\n                            \"value\": \"null\"\n                        }\n                    ],\n                    \"valueName\": \"current\"\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 9,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"max(kube_statefulset_replicas{job=\\\"kube-state-metrics\\\", statefulset=\\\"$statefulset\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) without (instance, pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"replicas specified\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"max(kube_statefulset_status_replicas{job=\\\"kube-state-metrics\\\", statefulset=\\\"$statefulset\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) without (instance, pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"replicas created\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"min(kube_statefulset_status_replicas_ready{job=\\\"kube-state-metrics\\\", statefulset=\\\"$statefulset\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) without (instance, pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"ready\",\n                            \"refId\": \"C\"\n                        },\n                        {\n                            \"expr\": \"min(kube_statefulset_status_replicas_current{job=\\\"kube-state-metrics\\\", statefulset=\\\"$statefulset\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) without (instance, pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"replicas of current version\",\n                            \"refId\": \"D\"\n                        },\n                        {\n                            \"expr\": \"min(kube_statefulset_status_replicas_updated{job=\\\"kube-state-metrics\\\", statefulset=\\\"$statefulset\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) without (instance, pod)\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"updated\",\n                            \"refId\": \"E\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Replicas\",\n                    \"tooltip\": {\n                        \"shared\": false,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": false,\n            \"title\": \"Dashboard Row\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": \"cluster\",\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kube_statefulset_metadata_generation, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": \"Namespace\",\n                \"multi\": false,\n                \"name\": \"namespace\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kube_statefulset_metadata_generation{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": \"Name\",\n                \"multi\": false,\n                \"name\": \"statefulset\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kube_statefulset_metadata_generation{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}, statefulset)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / StatefulSets\",\n    \"uid\": \"a31c1f46e6f727cb37c0d731a7245005\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:statefulset.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-statefulset","namespace":"default","resourceVersion":"640310","uid":"531c45e7-6a4b-443e-990f-dfb38fe9ac02"}},{"data":{"workload-total.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n            {\n                \"builtIn\": 1,\n                \"datasource\": \"-- Grafana --\",\n                \"enable\": true,\n                \"hide\": true,\n                \"iconColor\": \"rgba(0, 211, 255, 1)\",\n                \"name\": \"Annotations & Alerts\",\n                \"type\": \"dashboard\"\n            }\n        ]\n    },\n    \"editable\": true,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"panels\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"panels\": [\n\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Current Bandwidth\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": true,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 2,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 1\n            },\n            \"id\": 3,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"sort\": \"current\",\n                \"sortDesc\": true,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": false,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"minSpan\": 24,\n            \"nullPointMode\": \"null\",\n            \"paceLength\": 10,\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"span\": 24,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"{{ pod }}\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Current Rate of Bytes Received\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"series\",\n                \"name\": null,\n                \"show\": false,\n                \"values\": [\n                    \"current\"\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": true,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 2,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 1\n            },\n            \"id\": 4,\n            \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": false,\n                \"current\": true,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"sort\": \"current\",\n                \"sortDesc\": true,\n                \"total\": false,\n                \"values\": true\n            },\n            \"lines\": false,\n            \"linewidth\": 1,\n            \"links\": [\n\n            ],\n            \"minSpan\": 24,\n            \"nullPointMode\": \"null\",\n            \"paceLength\": 10,\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"span\": 24,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"{{ pod }}\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Current Rate of Bytes Transmitted\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"series\",\n                \"name\": null,\n                \"show\": false,\n                \"values\": [\n                    \"current\"\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"collapse\": true,\n            \"collapsed\": true,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 10\n            },\n            \"id\": 5,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": true,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 12,\n                        \"x\": 0,\n                        \"y\": 11\n                    },\n                    \"id\": 6,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"sort\": \"current\",\n                        \"sortDesc\": true,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": false,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 24,\n                    \"nullPointMode\": \"null\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 24,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(avg(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{ pod }}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Average Rate of Bytes Received\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"series\",\n                        \"name\": null,\n                        \"show\": false,\n                        \"values\": [\n                            \"current\"\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": true,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 12,\n                        \"x\": 12,\n                        \"y\": 11\n                    },\n                    \"id\": 7,\n                    \"legend\": {\n                        \"alignAsTable\": true,\n                        \"avg\": false,\n                        \"current\": true,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": true,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"sort\": \"current\",\n                        \"sortDesc\": true,\n                        \"total\": false,\n                        \"values\": true\n                    },\n                    \"lines\": false,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 24,\n                    \"nullPointMode\": \"null\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 24,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(avg(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{ pod }}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Average Rate of Bytes Transmitted\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"series\",\n                        \"name\": null,\n                        \"show\": false,\n                        \"values\": [\n                            \"current\"\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Average Bandwidth\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 11\n            },\n            \"id\": 8,\n            \"panels\": [\n\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Bandwidth HIstory\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 2,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 12\n            },\n            \"id\": 9,\n            \"legend\": {\n                \"alignAsTable\": false,\n                \"avg\": false,\n                \"current\": false,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": false,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": false\n            },\n            \"lines\": true,\n            \"linewidth\": 2,\n            \"links\": [\n\n            ],\n            \"minSpan\": 12,\n            \"nullPointMode\": \"connected\",\n            \"paceLength\": 10,\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"span\": 12,\n            \"stack\": true,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"{{pod}}\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Receive Bandwidth\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fill\": 2,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 12\n            },\n            \"id\": 10,\n            \"legend\": {\n                \"alignAsTable\": false,\n                \"avg\": false,\n                \"current\": false,\n                \"hideEmpty\": true,\n                \"hideZero\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": false,\n                \"show\": true,\n                \"sideWidth\": null,\n                \"total\": false,\n                \"values\": false\n            },\n            \"lines\": true,\n            \"linewidth\": 2,\n            \"links\": [\n\n            ],\n            \"minSpan\": 12,\n            \"nullPointMode\": \"connected\",\n            \"paceLength\": 10,\n            \"percentage\": false,\n            \"pointradius\": 5,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"repeat\": null,\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"span\": 12,\n            \"stack\": true,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                    \"format\": \"time_series\",\n                    \"intervalFactor\": 1,\n                    \"legendFormat\": \"{{pod}}\",\n                    \"refId\": \"A\",\n                    \"step\": 10\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Transmit Bandwidth\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                },\n                {\n                    \"format\": \"Bps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": 0,\n                    \"show\": true\n                }\n            ]\n        },\n        {\n            \"collapse\": true,\n            \"collapsed\": true,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 21\n            },\n            \"id\": 11,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 12,\n                        \"x\": 0,\n                        \"y\": 22\n                    },\n                    \"id\": 12,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 12,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 12,\n                        \"x\": 12,\n                        \"y\": 22\n                    },\n                    \"id\": 13,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 12,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Packets\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": true,\n            \"collapsed\": true,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 22\n            },\n            \"id\": 14,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 12,\n                        \"x\": 0,\n                        \"y\": 23\n                    },\n                    \"id\": 15,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 12,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Received Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 2,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n                        \"h\": 9,\n                        \"w\": 12,\n                        \"x\": 12,\n                        \"y\": 23\n                    },\n                    \"id\": 16,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"hideEmpty\": true,\n                        \"hideZero\": true,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 2,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 12,\n                    \"nullPointMode\": \"connected\",\n                    \"paceLength\": 10,\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$interval:$resolution])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=\\\"$type\\\"}) by (pod))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{pod}}\",\n                            \"refId\": \"A\",\n                            \"step\": 10\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate of Transmitted Packets Dropped\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"pps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Errors\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"rows\": [\n\n    ],\n    \"schemaVersion\": 18,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(kube_pod_info, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": \".+\",\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"kube-system\",\n                    \"value\": \"kube-system\"\n                },\n                \"datasource\": \"$datasource\",\n                \"definition\": \"label_values(container_network_receive_packets_total{cluster=\\\"$cluster\\\"}, namespace)\",\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"namespace\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(container_network_receive_packets_total{cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"definition\": \"label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}, workload)\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"workload\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}, workload)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"deployment\",\n                    \"value\": \"deployment\"\n                },\n                \"datasource\": \"$datasource\",\n                \"definition\": \"label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\"}, workload_type)\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"type\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\"}, workload_type)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"5m\",\n                    \"value\": \"5m\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"resolution\",\n                \"options\": [\n                    {\n                        \"selected\": false,\n                        \"text\": \"30s\",\n                        \"value\": \"30s\"\n                    },\n                    {\n                        \"selected\": true,\n                        \"text\": \"5m\",\n                        \"value\": \"5m\"\n                    },\n                    {\n                        \"selected\": false,\n                        \"text\": \"1h\",\n                        \"value\": \"1h\"\n                    }\n                ],\n                \"query\": \"30s,5m,1h\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"interval\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"auto\": false,\n                \"auto_count\": 30,\n                \"auto_min\": \"10s\",\n                \"current\": {\n                    \"text\": \"5m\",\n                    \"value\": \"5m\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"interval\",\n                \"options\": [\n                    {\n                        \"selected\": true,\n                        \"text\": \"4h\",\n                        \"value\": \"4h\"\n                    }\n                ],\n                \"query\": \"4h\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"interval\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Kubernetes / Networking / Workload\",\n    \"uid\": \"728bf77cc1166d2f3133bf25846876cc\",\n    \"version\": 0\n}"},"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","grafana_dashboard":"1","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:workload-total.json":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:grafana_dashboard":{},"f:heritage":{},"f:release":{}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-workload-total","namespace":"default","resourceVersion":"640286","uid":"5041d19b-ee87-4123-9453-6eae4a082912"}},{"data":{"default-prometheus-kube-prometheus-alertmanager.rules.yaml":"groups:\n- name: alertmanager.rules\n  rules:\n  - alert: AlertmanagerFailedReload\n    annotations:\n      description: Configuration has failed to load for {{ $labels.namespace }}/{{\n        $labels.pod}}.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-alertmanagerfailedreload\n      summary: Reloading an Alertmanager configuration has failed.\n    expr: |-\n      # Without max_over_time, failed scrapes could create false negatives, see\n      # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n      max_over_time(alertmanager_config_last_reload_successful{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}[5m]) == 0\n    for: 10m\n    labels:\n      severity: critical\n  - alert: AlertmanagerMembersInconsistent\n    annotations:\n      description: Alertmanager {{ $labels.namespace }}/{{ $labels.pod}} has only\n        found {{ $value }} members of the {{$labels.job}} cluster.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-alertmanagermembersinconsistent\n      summary: A member of an Alertmanager cluster has not found all other cluster\n        members.\n    expr: |-\n      # Without max_over_time, failed scrapes could create false negatives, see\n      # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n        max_over_time(alertmanager_cluster_members{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}[5m])\n      < on (namespace,service) group_left\n        count by (namespace,service) (max_over_time(alertmanager_cluster_members{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}[5m]))\n    for: 15m\n    labels:\n      severity: critical\n  - alert: AlertmanagerFailedToSendAlerts\n    annotations:\n      description: Alertmanager {{ $labels.namespace }}/{{ $labels.pod}} failed to\n        send {{ $value | humanizePercentage }} of notifications to {{ $labels.integration\n        }}.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-alertmanagerfailedtosendalerts\n      summary: An Alertmanager instance failed to send notifications.\n    expr: |-\n      (\n        rate(alertmanager_notifications_failed_total{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}[5m])\n      /\n        rate(alertmanager_notifications_total{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}[5m])\n      )\n      > 0.01\n    for: 5m\n    labels:\n      severity: warning\n  - alert: AlertmanagerClusterFailedToSendAlerts\n    annotations:\n      description: The minimum notification failure rate to {{ $labels.integration\n        }} sent from any instance in the {{$labels.job}} cluster is {{ $value | humanizePercentage\n        }}.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-alertmanagerclusterfailedtosendalerts\n      summary: All Alertmanager instances in a cluster failed to send notifications\n        to a critical integration.\n    expr: |-\n      min by (namespace,service, integration) (\n        rate(alertmanager_notifications_failed_total{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\", integration=~`.*`}[5m])\n      /\n        rate(alertmanager_notifications_total{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\", integration=~`.*`}[5m])\n      )\n      > 0.01\n    for: 5m\n    labels:\n      severity: critical\n  - alert: AlertmanagerClusterFailedToSendAlerts\n    annotations:\n      description: The minimum notification failure rate to {{ $labels.integration\n        }} sent from any instance in the {{$labels.job}} cluster is {{ $value | humanizePercentage\n        }}.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-alertmanagerclusterfailedtosendalerts\n      summary: All Alertmanager instances in a cluster failed to send notifications\n        to a non-critical integration.\n    expr: |-\n      min by (namespace,service, integration) (\n        rate(alertmanager_notifications_failed_total{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\", integration!~`.*`}[5m])\n      /\n        rate(alertmanager_notifications_total{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\", integration!~`.*`}[5m])\n      )\n      > 0.01\n    for: 5m\n    labels:\n      severity: warning\n  - alert: AlertmanagerConfigInconsistent\n    annotations:\n      description: Alertmanager instances within the {{$labels.job}} cluster have\n        different configurations.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-alertmanagerconfiginconsistent\n      summary: Alertmanager instances within the same cluster have different configurations.\n    expr: |-\n      count by (namespace,service) (\n        count_values by (namespace,service) (\"config_hash\", alertmanager_config_hash{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"})\n      )\n      != 1\n    for: 20m\n    labels:\n      severity: critical\n  - alert: AlertmanagerClusterDown\n    annotations:\n      description: '{{ $value | humanizePercentage }} of Alertmanager instances within\n        the {{$labels.job}} cluster have been up for less than half of the last 5m.'\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-alertmanagerclusterdown\n      summary: Half or more of the Alertmanager instances within the same cluster\n        are down.\n    expr: |-\n      (\n        count by (namespace,service) (\n          avg_over_time(up{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}[5m]) < 0.5\n        )\n      /\n        count by (namespace,service) (\n          up{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}\n        )\n      )\n      >= 0.5\n    for: 5m\n    labels:\n      severity: critical\n  - alert: AlertmanagerClusterCrashlooping\n    annotations:\n      description: '{{ $value | humanizePercentage }} of Alertmanager instances within\n        the {{$labels.job}} cluster have restarted at least 5 times in the last 10m.'\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-alertmanagerclustercrashlooping\n      summary: Half or more of the Alertmanager instances within the same cluster\n        are crashlooping.\n    expr: |-\n      (\n        count by (namespace,service) (\n          changes(process_start_time_seconds{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}[10m]) > 4\n        )\n      /\n        count by (namespace,service) (\n          up{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}\n        )\n      )\n      >= 0.5\n    for: 5m\n    labels:\n      severity: critical\n","default-prometheus-kube-prometheus-etcd.yaml":"groups:\n- name: etcd\n  rules:\n  - alert: etcdInsufficientMembers\n    annotations:\n      message: 'etcd cluster \"{{ $labels.job }}\": insufficient members ({{ $value\n        }}).'\n    expr: sum(up{job=~\".*etcd.*\"} == bool 1) by (job) < ((count(up{job=~\".*etcd.*\"})\n      by (job) + 1) / 2)\n    for: 3m\n    labels:\n      severity: critical\n  - alert: etcdNoLeader\n    annotations:\n      message: 'etcd cluster \"{{ $labels.job }}\": member {{ $labels.instance }} has\n        no leader.'\n    expr: etcd_server_has_leader{job=~\".*etcd.*\"} == 0\n    for: 1m\n    labels:\n      severity: critical\n  - alert: etcdHighNumberOfLeaderChanges\n    annotations:\n      message: 'etcd cluster \"{{ $labels.job }}\": instance {{ $labels.instance }}\n        has seen {{ $value }} leader changes within the last hour.'\n    expr: rate(etcd_server_leader_changes_seen_total{job=~\".*etcd.*\"}[15m]) > 3\n    for: 15m\n    labels:\n      severity: warning\n  - alert: etcdHighNumberOfFailedGRPCRequests\n    annotations:\n      message: 'etcd cluster \"{{ $labels.job }}\": {{ $value }}% of requests for {{\n        $labels.grpc_method }} failed on etcd instance {{ $labels.instance }}.'\n    expr: |-\n      100 * sum(rate(grpc_server_handled_total{job=~\".*etcd.*\", grpc_code!=\"OK\"}[5m])) BY (job, instance, grpc_service, grpc_method)\n        /\n      sum(rate(grpc_server_handled_total{job=~\".*etcd.*\"}[5m])) BY (job, instance, grpc_service, grpc_method)\n        > 1\n    for: 10m\n    labels:\n      severity: warning\n  - alert: etcdHighNumberOfFailedGRPCRequests\n    annotations:\n      message: 'etcd cluster \"{{ $labels.job }}\": {{ $value }}% of requests for {{\n        $labels.grpc_method }} failed on etcd instance {{ $labels.instance }}.'\n    expr: |-\n      100 * sum(rate(grpc_server_handled_total{job=~\".*etcd.*\", grpc_code!=\"OK\"}[5m])) BY (job, instance, grpc_service, grpc_method)\n        /\n      sum(rate(grpc_server_handled_total{job=~\".*etcd.*\"}[5m])) BY (job, instance, grpc_service, grpc_method)\n        > 5\n    for: 5m\n    labels:\n      severity: critical\n  - alert: etcdGRPCRequestsSlow\n    annotations:\n      message: 'etcd cluster \"{{ $labels.job }}\": gRPC requests to {{ $labels.grpc_method\n        }} are taking {{ $value }}s on etcd instance {{ $labels.instance }}.'\n    expr: |-\n      histogram_quantile(0.99, sum(rate(grpc_server_handling_seconds_bucket{job=~\".*etcd.*\", grpc_type=\"unary\"}[5m])) by (job, instance, grpc_service, grpc_method, le))\n      > 0.15\n    for: 10m\n    labels:\n      severity: critical\n  - alert: etcdMemberCommunicationSlow\n    annotations:\n      message: 'etcd cluster \"{{ $labels.job }}\": member communication with {{ $labels.To\n        }} is taking {{ $value }}s on etcd instance {{ $labels.instance }}.'\n    expr: |-\n      histogram_quantile(0.99, rate(etcd_network_peer_round_trip_time_seconds_bucket{job=~\".*etcd.*\"}[5m]))\n      > 0.15\n    for: 10m\n    labels:\n      severity: warning\n  - alert: etcdHighNumberOfFailedProposals\n    annotations:\n      message: 'etcd cluster \"{{ $labels.job }}\": {{ $value }} proposal failures within\n        the last hour on etcd instance {{ $labels.instance }}.'\n    expr: rate(etcd_server_proposals_failed_total{job=~\".*etcd.*\"}[15m]) > 5\n    for: 15m\n    labels:\n      severity: warning\n  - alert: etcdHighFsyncDurations\n    annotations:\n      message: 'etcd cluster \"{{ $labels.job }}\": 99th percentile fync durations are\n        {{ $value }}s on etcd instance {{ $labels.instance }}.'\n    expr: |-\n      histogram_quantile(0.99, rate(etcd_disk_wal_fsync_duration_seconds_bucket{job=~\".*etcd.*\"}[5m]))\n      > 0.5\n    for: 10m\n    labels:\n      severity: warning\n  - alert: etcdHighCommitDurations\n    annotations:\n      message: 'etcd cluster \"{{ $labels.job }}\": 99th percentile commit durations\n        {{ $value }}s on etcd instance {{ $labels.instance }}.'\n    expr: |-\n      histogram_quantile(0.99, rate(etcd_disk_backend_commit_duration_seconds_bucket{job=~\".*etcd.*\"}[5m]))\n      > 0.25\n    for: 10m\n    labels:\n      severity: warning\n  - alert: etcdHighNumberOfFailedHTTPRequests\n    annotations:\n      message: '{{ $value }}% of requests for {{ $labels.method }} failed on etcd\n        instance {{ $labels.instance }}'\n    expr: |-\n      sum(rate(etcd_http_failed_total{job=~\".*etcd.*\", code!=\"404\"}[5m])) BY (method) / sum(rate(etcd_http_received_total{job=~\".*etcd.*\"}[5m]))\n      BY (method) > 0.01\n    for: 10m\n    labels:\n      severity: warning\n  - alert: etcdHighNumberOfFailedHTTPRequests\n    annotations:\n      message: '{{ $value }}% of requests for {{ $labels.method }} failed on etcd\n        instance {{ $labels.instance }}.'\n    expr: |-\n      sum(rate(etcd_http_failed_total{job=~\".*etcd.*\", code!=\"404\"}[5m])) BY (method) / sum(rate(etcd_http_received_total{job=~\".*etcd.*\"}[5m]))\n      BY (method) > 0.05\n    for: 10m\n    labels:\n      severity: critical\n  - alert: etcdHTTPRequestsSlow\n    annotations:\n      message: etcd instance {{ $labels.instance }} HTTP requests to {{ $labels.method\n        }} are slow.\n    expr: |-\n      histogram_quantile(0.99, rate(etcd_http_successful_duration_seconds_bucket[5m]))\n      > 0.15\n    for: 10m\n    labels:\n      severity: warning\n","default-prometheus-kube-prometheus-general.rules.yaml":"groups:\n- name: general.rules\n  rules:\n  - alert: TargetDown\n    annotations:\n      description: '{{ printf \"%.4g\" $value }}% of the {{ $labels.job }}/{{ $labels.service\n        }} targets in {{ $labels.namespace }} namespace are down.'\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-targetdown\n      summary: One or more targets are unreachable.\n    expr: 100 * (count(up == 0) BY (job, namespace, service) / count(up) BY (job,\n      namespace, service)) > 10\n    for: 10m\n    labels:\n      severity: warning\n  - alert: Watchdog\n    annotations:\n      description: |\n        This is an alert meant to ensure that the entire alerting pipeline is functional.\n        This alert is always firing, therefore it should always be firing in Alertmanager\n        and always fire against a receiver. There are integrations with various notification\n        mechanisms that send a notification when this alert is not firing. For example the\n        \"DeadMansSnitch\" integration in PagerDuty.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-watchdog\n      summary: An alert that should always be firing to certify that Alertmanager\n        is working properly.\n    expr: vector(1)\n    labels:\n      severity: none\n","default-prometheus-kube-prometheus-k8s.rules.yaml":"groups:\n- name: k8s.rules\n  rules:\n  - expr: |-\n      sum by (cluster, namespace, pod, container) (\n        irate(container_cpu_usage_seconds_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}[5m])\n      ) * on (cluster, namespace, pod) group_left(node) topk by (cluster, namespace, pod) (\n        1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=\"\"})\n      )\n    record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate\n  - expr: |-\n      container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n      * on (namespace, pod) group_left(node) topk by(namespace, pod) (1,\n        max by(namespace, pod, node) (kube_pod_info{node!=\"\"})\n      )\n    record: node_namespace_pod_container:container_memory_working_set_bytes\n  - expr: |-\n      container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n      * on (namespace, pod) group_left(node) topk by(namespace, pod) (1,\n        max by(namespace, pod, node) (kube_pod_info{node!=\"\"})\n      )\n    record: node_namespace_pod_container:container_memory_rss\n  - expr: |-\n      container_memory_cache{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n      * on (namespace, pod) group_left(node) topk by(namespace, pod) (1,\n        max by(namespace, pod, node) (kube_pod_info{node!=\"\"})\n      )\n    record: node_namespace_pod_container:container_memory_cache\n  - expr: |-\n      container_memory_swap{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n      * on (namespace, pod) group_left(node) topk by(namespace, pod) (1,\n        max by(namespace, pod, node) (kube_pod_info{node!=\"\"})\n      )\n    record: node_namespace_pod_container:container_memory_swap\n  - expr: |-\n      kube_pod_container_resource_requests{resource=\"memory\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\n      group_left() max by (namespace, pod) (\n        (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n      )\n    record: cluster:namespace:pod_memory:active:kube_pod_container_resource_requests\n  - expr: |-\n      sum by (namespace, cluster) (\n          sum by (namespace, pod, cluster) (\n              max by (namespace, pod, container, cluster) (\n                kube_pod_container_resource_requests{resource=\"memory\",job=\"kube-state-metrics\"}\n              ) * on(namespace, pod, cluster) group_left() max by (namespace, pod) (\n                kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n              )\n          )\n      )\n    record: namespace_memory:kube_pod_container_resource_requests:sum\n  - expr: |-\n      kube_pod_container_resource_requests{resource=\"cpu\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\n      group_left() max by (namespace, pod) (\n        (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n      )\n    record: cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests\n  - expr: |-\n      sum by (namespace, cluster) (\n          sum by (namespace, pod, cluster) (\n              max by (namespace, pod, container, cluster) (\n                kube_pod_container_resource_requests{resource=\"cpu\",job=\"kube-state-metrics\"}\n              ) * on(namespace, pod, cluster) group_left() max by (namespace, pod) (\n                kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n              )\n          )\n      )\n    record: namespace_cpu:kube_pod_container_resource_requests:sum\n  - expr: |-\n      kube_pod_container_resource_limits{resource=\"memory\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\n      group_left() max by (namespace, pod) (\n        (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n      )\n    record: cluster:namespace:pod_memory:active:kube_pod_container_resource_limits\n  - expr: |-\n      sum by (namespace, cluster) (\n          sum by (namespace, pod, cluster) (\n              max by (namespace, pod, container, cluster) (\n                kube_pod_container_resource_limits{resource=\"memory\",job=\"kube-state-metrics\"}\n              ) * on(namespace, pod, cluster) group_left() max by (namespace, pod) (\n                kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n              )\n          )\n      )\n    record: namespace_memory:kube_pod_container_resource_limits:sum\n  - expr: |-\n      kube_pod_container_resource_limits{resource=\"cpu\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\n      group_left() max by (namespace, pod) (\n       (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n       )\n    record: cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits\n  - expr: |-\n      sum by (namespace, cluster) (\n          sum by (namespace, pod, cluster) (\n              max by (namespace, pod, container, cluster) (\n                kube_pod_container_resource_limits{resource=\"cpu\",job=\"kube-state-metrics\"}\n              ) * on(namespace, pod, cluster) group_left() max by (namespace, pod) (\n                kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n              )\n          )\n      )\n    record: namespace_cpu:kube_pod_container_resource_limits:sum\n  - expr: |-\n      max by (cluster, namespace, workload, pod) (\n        label_replace(\n          label_replace(\n            kube_pod_owner{job=\"kube-state-metrics\", owner_kind=\"ReplicaSet\"},\n            \"replicaset\", \"$1\", \"owner_name\", \"(.*)\"\n          ) * on(replicaset, namespace) group_left(owner_name) topk by(replicaset, namespace) (\n            1, max by (replicaset, namespace, owner_name) (\n              kube_replicaset_owner{job=\"kube-state-metrics\"}\n            )\n          ),\n          \"workload\", \"$1\", \"owner_name\", \"(.*)\"\n        )\n      )\n    labels:\n      workload_type: deployment\n    record: namespace_workload_pod:kube_pod_owner:relabel\n  - expr: |-\n      max by (cluster, namespace, workload, pod) (\n        label_replace(\n          kube_pod_owner{job=\"kube-state-metrics\", owner_kind=\"DaemonSet\"},\n          \"workload\", \"$1\", \"owner_name\", \"(.*)\"\n        )\n      )\n    labels:\n      workload_type: daemonset\n    record: namespace_workload_pod:kube_pod_owner:relabel\n  - expr: |-\n      max by (cluster, namespace, workload, pod) (\n        label_replace(\n          kube_pod_owner{job=\"kube-state-metrics\", owner_kind=\"StatefulSet\"},\n          \"workload\", \"$1\", \"owner_name\", \"(.*)\"\n        )\n      )\n    labels:\n      workload_type: statefulset\n    record: namespace_workload_pod:kube_pod_owner:relabel\n","default-prometheus-kube-prometheus-kube-apiserver-availability.rules.yaml":"groups:\n- interval: 3m\n  name: kube-apiserver-availability.rules\n  rules:\n  - expr: avg_over_time(code_verb:apiserver_request_total:increase1h[30d]) * 24 *\n      30\n    record: code_verb:apiserver_request_total:increase30d\n  - expr: sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~\"LIST|GET\"})\n    labels:\n      verb: read\n    record: code:apiserver_request_total:increase30d\n  - expr: sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~\"POST|PUT|PATCH|DELETE\"})\n    labels:\n      verb: write\n    record: code:apiserver_request_total:increase30d\n  - expr: |-\n      1 - (\n        (\n          # write too slow\n          sum by (cluster) (increase(apiserver_request_duration_seconds_count{verb=~\"POST|PUT|PATCH|DELETE\"}[30d]))\n          -\n          sum by (cluster) (increase(apiserver_request_duration_seconds_bucket{verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[30d]))\n        ) +\n        (\n          # read too slow\n          sum by (cluster) (increase(apiserver_request_duration_seconds_count{verb=~\"LIST|GET\"}[30d]))\n          -\n          (\n            (\n              sum by (cluster) (increase(apiserver_request_duration_seconds_bucket{verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[30d]))\n              or\n              vector(0)\n            )\n            +\n            sum by (cluster) (increase(apiserver_request_duration_seconds_bucket{verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[30d]))\n            +\n            sum by (cluster) (increase(apiserver_request_duration_seconds_bucket{verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[30d]))\n          )\n        ) +\n        # errors\n        sum by (cluster) (code:apiserver_request_total:increase30d{code=~\"5..\"} or vector(0))\n      )\n      /\n      sum by (cluster) (code:apiserver_request_total:increase30d)\n    labels:\n      verb: all\n    record: apiserver_request:availability30d\n  - expr: |-\n      1 - (\n        sum by (cluster) (increase(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[30d]))\n        -\n        (\n          # too slow\n          (\n            sum by (cluster) (increase(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[30d]))\n            or\n            vector(0)\n          )\n          +\n          sum by (cluster) (increase(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[30d]))\n          +\n          sum by (cluster) (increase(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[30d]))\n        )\n        +\n        # errors\n        sum by (cluster) (code:apiserver_request_total:increase30d{verb=\"read\",code=~\"5..\"} or vector(0))\n      )\n      /\n      sum by (cluster) (code:apiserver_request_total:increase30d{verb=\"read\"})\n    labels:\n      verb: read\n    record: apiserver_request:availability30d\n  - expr: |-\n      1 - (\n        (\n          # too slow\n          sum by (cluster) (increase(apiserver_request_duration_seconds_count{verb=~\"POST|PUT|PATCH|DELETE\"}[30d]))\n          -\n          sum by (cluster) (increase(apiserver_request_duration_seconds_bucket{verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[30d]))\n        )\n        +\n        # errors\n        sum by (cluster) (code:apiserver_request_total:increase30d{verb=\"write\",code=~\"5..\"} or vector(0))\n      )\n      /\n      sum by (cluster) (code:apiserver_request_total:increase30d{verb=\"write\"})\n    labels:\n      verb: write\n    record: apiserver_request:availability30d\n  - expr: sum by (cluster,code,resource) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))\n    labels:\n      verb: read\n    record: code_resource:apiserver_request_total:rate5m\n  - expr: sum by (cluster,code,resource) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))\n    labels:\n      verb: write\n    record: code_resource:apiserver_request_total:rate5m\n  - expr: sum by (cluster, code, verb) (increase(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET|POST|PUT|PATCH|DELETE\",code=~\"2..\"}[1h]))\n    record: code_verb:apiserver_request_total:increase1h\n  - expr: sum by (cluster, code, verb) (increase(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET|POST|PUT|PATCH|DELETE\",code=~\"3..\"}[1h]))\n    record: code_verb:apiserver_request_total:increase1h\n  - expr: sum by (cluster, code, verb) (increase(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET|POST|PUT|PATCH|DELETE\",code=~\"4..\"}[1h]))\n    record: code_verb:apiserver_request_total:increase1h\n  - expr: sum by (cluster, code, verb) (increase(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET|POST|PUT|PATCH|DELETE\",code=~\"5..\"}[1h]))\n    record: code_verb:apiserver_request_total:increase1h\n","default-prometheus-kube-prometheus-kube-apiserver-burnrate.rules.yaml":"groups:\n- name: kube-apiserver-burnrate.rules\n  rules:\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[1d]))\n          -\n          (\n            (\n              sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[1d]))\n              or\n              vector(0)\n            )\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[1d]))\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[1d]))\n          )\n        )\n        +\n        # errors\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[1d]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[1d]))\n    labels:\n      verb: read\n    record: apiserver_request:burnrate1d\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[1h]))\n          -\n          (\n            (\n              sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[1h]))\n              or\n              vector(0)\n            )\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[1h]))\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[1h]))\n          )\n        )\n        +\n        # errors\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[1h]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[1h]))\n    labels:\n      verb: read\n    record: apiserver_request:burnrate1h\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[2h]))\n          -\n          (\n            (\n              sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[2h]))\n              or\n              vector(0)\n            )\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[2h]))\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[2h]))\n          )\n        )\n        +\n        # errors\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[2h]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[2h]))\n    labels:\n      verb: read\n    record: apiserver_request:burnrate2h\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[30m]))\n          -\n          (\n            (\n              sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[30m]))\n              or\n              vector(0)\n            )\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[30m]))\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[30m]))\n          )\n        )\n        +\n        # errors\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[30m]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[30m]))\n    labels:\n      verb: read\n    record: apiserver_request:burnrate30m\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[3d]))\n          -\n          (\n            (\n              sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[3d]))\n              or\n              vector(0)\n            )\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[3d]))\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[3d]))\n          )\n        )\n        +\n        # errors\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[3d]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[3d]))\n    labels:\n      verb: read\n    record: apiserver_request:burnrate3d\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))\n          -\n          (\n            (\n              sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[5m]))\n              or\n              vector(0)\n            )\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[5m]))\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[5m]))\n          )\n        )\n        +\n        # errors\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[5m]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))\n    labels:\n      verb: read\n    record: apiserver_request:burnrate5m\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[6h]))\n          -\n          (\n            (\n              sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[6h]))\n              or\n              vector(0)\n            )\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[6h]))\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[6h]))\n          )\n        )\n        +\n        # errors\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[6h]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[6h]))\n    labels:\n      verb: read\n    record: apiserver_request:burnrate6h\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1d]))\n          -\n          sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[1d]))\n        )\n        +\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[1d]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1d]))\n    labels:\n      verb: write\n    record: apiserver_request:burnrate1d\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1h]))\n          -\n          sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[1h]))\n        )\n        +\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[1h]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1h]))\n    labels:\n      verb: write\n    record: apiserver_request:burnrate1h\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[2h]))\n          -\n          sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[2h]))\n        )\n        +\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[2h]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[2h]))\n    labels:\n      verb: write\n    record: apiserver_request:burnrate2h\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[30m]))\n          -\n          sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[30m]))\n        )\n        +\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[30m]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[30m]))\n    labels:\n      verb: write\n    record: apiserver_request:burnrate30m\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[3d]))\n          -\n          sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[3d]))\n        )\n        +\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[3d]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[3d]))\n    labels:\n      verb: write\n    record: apiserver_request:burnrate3d\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))\n          -\n          sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[5m]))\n        )\n        +\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[5m]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))\n    labels:\n      verb: write\n    record: apiserver_request:burnrate5m\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[6h]))\n          -\n          sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[6h]))\n        )\n        +\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[6h]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[6h]))\n    labels:\n      verb: write\n    record: apiserver_request:burnrate6h\n","default-prometheus-kube-prometheus-kube-apiserver-histogram.rules.yaml":"groups:\n- name: kube-apiserver-histogram.rules\n  rules:\n  - expr: histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\"}[5m])))\n      > 0\n    labels:\n      quantile: \"0.99\"\n      verb: read\n    record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m])))\n      > 0\n    labels:\n      quantile: \"0.99\"\n      verb: write\n    record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m]))\n      without(instance, pod))\n    labels:\n      quantile: \"0.99\"\n    record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.9, sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m]))\n      without(instance, pod))\n    labels:\n      quantile: \"0.9\"\n    record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.5, sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m]))\n      without(instance, pod))\n    labels:\n      quantile: \"0.5\"\n    record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile\n","default-prometheus-kube-prometheus-kube-apiserver-slos.yaml":"groups:\n- name: kube-apiserver-slos\n  rules:\n  - alert: KubeAPIErrorBudgetBurn\n    annotations:\n      description: The API server is burning too much error budget.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn\n      summary: The API server is burning too much error budget.\n    expr: |-\n      sum(apiserver_request:burnrate1h) > (14.40 * 0.01000)\n      and\n      sum(apiserver_request:burnrate5m) > (14.40 * 0.01000)\n    for: 2m\n    labels:\n      long: 1h\n      severity: critical\n      short: 5m\n  - alert: KubeAPIErrorBudgetBurn\n    annotations:\n      description: The API server is burning too much error budget.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn\n      summary: The API server is burning too much error budget.\n    expr: |-\n      sum(apiserver_request:burnrate6h) > (6.00 * 0.01000)\n      and\n      sum(apiserver_request:burnrate30m) > (6.00 * 0.01000)\n    for: 15m\n    labels:\n      long: 6h\n      severity: critical\n      short: 30m\n  - alert: KubeAPIErrorBudgetBurn\n    annotations:\n      description: The API server is burning too much error budget.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn\n      summary: The API server is burning too much error budget.\n    expr: |-\n      sum(apiserver_request:burnrate1d) > (3.00 * 0.01000)\n      and\n      sum(apiserver_request:burnrate2h) > (3.00 * 0.01000)\n    for: 1h\n    labels:\n      long: 1d\n      severity: warning\n      short: 2h\n  - alert: KubeAPIErrorBudgetBurn\n    annotations:\n      description: The API server is burning too much error budget.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn\n      summary: The API server is burning too much error budget.\n    expr: |-\n      sum(apiserver_request:burnrate3d) > (1.00 * 0.01000)\n      and\n      sum(apiserver_request:burnrate6h) > (1.00 * 0.01000)\n    for: 3h\n    labels:\n      long: 3d\n      severity: warning\n      short: 6h\n","default-prometheus-kube-prometheus-kube-apiserver.rules.yaml":"groups:\n- name: kube-apiserver.rules\n  rules:\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[1d]))\n          -\n          (\n            (\n              sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"0.1\"}[1d]))\n              or\n              vector(0)\n            )\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"0.5\"}[1d]))\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"5\"}[1d]))\n          )\n        )\n        +\n        # errors\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[1d]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[1d]))\n    labels:\n      verb: read\n    record: apiserver_request:burnrate1d\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[1h]))\n          -\n          (\n            (\n              sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"0.1\"}[1h]))\n              or\n              vector(0)\n            )\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"0.5\"}[1h]))\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"5\"}[1h]))\n          )\n        )\n        +\n        # errors\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[1h]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[1h]))\n    labels:\n      verb: read\n    record: apiserver_request:burnrate1h\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[2h]))\n          -\n          (\n            (\n              sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"0.1\"}[2h]))\n              or\n              vector(0)\n            )\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"0.5\"}[2h]))\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"5\"}[2h]))\n          )\n        )\n        +\n        # errors\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[2h]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[2h]))\n    labels:\n      verb: read\n    record: apiserver_request:burnrate2h\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[30m]))\n          -\n          (\n            (\n              sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"0.1\"}[30m]))\n              or\n              vector(0)\n            )\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"0.5\"}[30m]))\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"5\"}[30m]))\n          )\n        )\n        +\n        # errors\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[30m]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[30m]))\n    labels:\n      verb: read\n    record: apiserver_request:burnrate30m\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[3d]))\n          -\n          (\n            (\n              sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"0.1\"}[3d]))\n              or\n              vector(0)\n            )\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"0.5\"}[3d]))\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"5\"}[3d]))\n          )\n        )\n        +\n        # errors\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[3d]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[3d]))\n    labels:\n      verb: read\n    record: apiserver_request:burnrate3d\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))\n          -\n          (\n            (\n              sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"0.1\"}[5m]))\n              or\n              vector(0)\n            )\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"0.5\"}[5m]))\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"5\"}[5m]))\n          )\n        )\n        +\n        # errors\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[5m]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))\n    labels:\n      verb: read\n    record: apiserver_request:burnrate5m\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[6h]))\n          -\n          (\n            (\n              sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"0.1\"}[6h]))\n              or\n              vector(0)\n            )\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"0.5\"}[6h]))\n            +\n            sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"5\"}[6h]))\n          )\n        )\n        +\n        # errors\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[6h]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[6h]))\n    labels:\n      verb: read\n    record: apiserver_request:burnrate6h\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1d]))\n          -\n          sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[1d]))\n        )\n        +\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[1d]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1d]))\n    labels:\n      verb: write\n    record: apiserver_request:burnrate1d\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1h]))\n          -\n          sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[1h]))\n        )\n        +\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[1h]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1h]))\n    labels:\n      verb: write\n    record: apiserver_request:burnrate1h\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[2h]))\n          -\n          sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[2h]))\n        )\n        +\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[2h]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[2h]))\n    labels:\n      verb: write\n    record: apiserver_request:burnrate2h\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[30m]))\n          -\n          sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[30m]))\n        )\n        +\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[30m]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[30m]))\n    labels:\n      verb: write\n    record: apiserver_request:burnrate30m\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[3d]))\n          -\n          sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[3d]))\n        )\n        +\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[3d]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[3d]))\n    labels:\n      verb: write\n    record: apiserver_request:burnrate3d\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))\n          -\n          sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[5m]))\n        )\n        +\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[5m]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))\n    labels:\n      verb: write\n    record: apiserver_request:burnrate5m\n  - expr: |-\n      (\n        (\n          # too slow\n          sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[6h]))\n          -\n          sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[6h]))\n        )\n        +\n        sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[6h]))\n      )\n      /\n      sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[6h]))\n    labels:\n      verb: write\n    record: apiserver_request:burnrate6h\n  - expr: sum by (cluster,code,resource) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))\n    labels:\n      verb: read\n    record: code_resource:apiserver_request_total:rate5m\n  - expr: sum by (cluster,code,resource) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))\n    labels:\n      verb: write\n    record: code_resource:apiserver_request_total:rate5m\n  - expr: histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\"}[5m])))\n      > 0\n    labels:\n      quantile: \"0.99\"\n      verb: read\n    record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m])))\n      > 0\n    labels:\n      quantile: \"0.99\"\n      verb: write\n    record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m]))\n      without(instance, pod))\n    labels:\n      quantile: \"0.99\"\n    record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.9, sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m]))\n      without(instance, pod))\n    labels:\n      quantile: \"0.9\"\n    record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.5, sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m]))\n      without(instance, pod))\n    labels:\n      quantile: \"0.5\"\n    record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile\n","default-prometheus-kube-prometheus-kube-prometheus-general.rules.yaml":"groups:\n- name: kube-prometheus-general.rules\n  rules:\n  - expr: count without(instance, pod, node) (up == 1)\n    record: count:up1\n  - expr: count without(instance, pod, node) (up == 0)\n    record: count:up0\n","default-prometheus-kube-prometheus-kube-prometheus-node-recording.rules.yaml":"groups:\n- name: kube-prometheus-node-recording.rules\n  rules:\n  - expr: sum(rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\",mode!=\"steal\"}[3m]))\n      BY (instance)\n    record: instance:node_cpu:rate:sum\n  - expr: sum(rate(node_network_receive_bytes_total[3m])) BY (instance)\n    record: instance:node_network_receive_bytes:rate:sum\n  - expr: sum(rate(node_network_transmit_bytes_total[3m])) BY (instance)\n    record: instance:node_network_transmit_bytes:rate:sum\n  - expr: sum(rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\",mode!=\"steal\"}[5m]))\n      WITHOUT (cpu, mode) / ON(instance) GROUP_LEFT() count(sum(node_cpu_seconds_total)\n      BY (instance, cpu)) BY (instance)\n    record: instance:node_cpu:ratio\n  - expr: sum(rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\",mode!=\"steal\"}[5m]))\n    record: cluster:node_cpu:sum_rate5m\n  - expr: cluster:node_cpu_seconds_total:rate5m / count(sum(node_cpu_seconds_total)\n      BY (instance, cpu))\n    record: cluster:node_cpu:ratio\n","default-prometheus-kube-prometheus-kube-scheduler.rules.yaml":"groups:\n- name: kube-scheduler.rules\n  rules:\n  - expr: histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job=\"kube-scheduler\"}[5m]))\n      without(instance, pod))\n    labels:\n      quantile: \"0.99\"\n    record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job=\"kube-scheduler\"}[5m]))\n      without(instance, pod))\n    labels:\n      quantile: \"0.99\"\n    record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{job=\"kube-scheduler\"}[5m]))\n      without(instance, pod))\n    labels:\n      quantile: \"0.99\"\n    record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.9, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job=\"kube-scheduler\"}[5m]))\n      without(instance, pod))\n    labels:\n      quantile: \"0.9\"\n    record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.9, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job=\"kube-scheduler\"}[5m]))\n      without(instance, pod))\n    labels:\n      quantile: \"0.9\"\n    record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.9, sum(rate(scheduler_binding_duration_seconds_bucket{job=\"kube-scheduler\"}[5m]))\n      without(instance, pod))\n    labels:\n      quantile: \"0.9\"\n    record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.5, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job=\"kube-scheduler\"}[5m]))\n      without(instance, pod))\n    labels:\n      quantile: \"0.5\"\n    record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.5, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job=\"kube-scheduler\"}[5m]))\n      without(instance, pod))\n    labels:\n      quantile: \"0.5\"\n    record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.5, sum(rate(scheduler_binding_duration_seconds_bucket{job=\"kube-scheduler\"}[5m]))\n      without(instance, pod))\n    labels:\n      quantile: \"0.5\"\n    record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile\n","default-prometheus-kube-prometheus-kube-state-metrics.yaml":"groups:\n- name: kube-state-metrics\n  rules:\n  - alert: KubeStateMetricsListErrors\n    annotations:\n      description: kube-state-metrics is experiencing errors at an elevated rate in\n        list operations. This is likely causing it to not be able to expose metrics\n        about Kubernetes objects correctly or at all.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatemetricslisterrors\n      summary: kube-state-metrics is experiencing errors in list operations.\n    expr: |-\n      (sum(rate(kube_state_metrics_list_total{job=\"kube-state-metrics\",result=\"error\"}[5m]))\n        /\n      sum(rate(kube_state_metrics_list_total{job=\"kube-state-metrics\"}[5m])))\n      > 0.01\n    for: 15m\n    labels:\n      severity: critical\n  - alert: KubeStateMetricsWatchErrors\n    annotations:\n      description: kube-state-metrics is experiencing errors at an elevated rate in\n        watch operations. This is likely causing it to not be able to expose metrics\n        about Kubernetes objects correctly or at all.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatemetricswatcherrors\n      summary: kube-state-metrics is experiencing errors in watch operations.\n    expr: |-\n      (sum(rate(kube_state_metrics_watch_total{job=\"kube-state-metrics\",result=\"error\"}[5m]))\n        /\n      sum(rate(kube_state_metrics_watch_total{job=\"kube-state-metrics\"}[5m])))\n      > 0.01\n    for: 15m\n    labels:\n      severity: critical\n  - alert: KubeStateMetricsShardingMismatch\n    annotations:\n      description: kube-state-metrics pods are running with different --total-shards\n        configuration, some Kubernetes objects may be exposed multiple times or not\n        exposed at all.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatemetricsshardingmismatch\n      summary: kube-state-metrics sharding is misconfigured.\n    expr: stdvar (kube_state_metrics_total_shards{job=\"kube-state-metrics\"}) != 0\n    for: 15m\n    labels:\n      severity: critical\n  - alert: KubeStateMetricsShardsMissing\n    annotations:\n      description: kube-state-metrics shards are missing, some Kubernetes objects\n        are not being exposed.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatemetricsshardsmissing\n      summary: kube-state-metrics shards are missing.\n    expr: |-\n      2^max(kube_state_metrics_total_shards{job=\"kube-state-metrics\"}) - 1\n        -\n      sum( 2 ^ max by (shard_ordinal) (kube_state_metrics_shard_ordinal{job=\"kube-state-metrics\"}) )\n      != 0\n    for: 15m\n    labels:\n      severity: critical\n","default-prometheus-kube-prometheus-kubelet.rules.yaml":"groups:\n- name: kubelet.rules\n  rules:\n  - expr: histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket[5m]))\n      by (instance, le) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\",\n      metrics_path=\"/metrics\"})\n    labels:\n      quantile: \"0.99\"\n    record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.9, sum(rate(kubelet_pleg_relist_duration_seconds_bucket[5m]))\n      by (instance, le) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\",\n      metrics_path=\"/metrics\"})\n    labels:\n      quantile: \"0.9\"\n    record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile\n  - expr: histogram_quantile(0.5, sum(rate(kubelet_pleg_relist_duration_seconds_bucket[5m]))\n      by (instance, le) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\",\n      metrics_path=\"/metrics\"})\n    labels:\n      quantile: \"0.5\"\n    record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile\n","default-prometheus-kube-prometheus-kubernetes-apps.yaml":"groups:\n- name: kubernetes-apps\n  rules:\n  - alert: KubePodCrashLooping\n    annotations:\n      description: Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container\n        }}) is restarting {{ printf \"%.2f\" $value }} times / 10 minutes.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodcrashlooping\n      summary: Pod is crash looping.\n    expr: |-\n      increase(kube_pod_container_status_restarts_total{job=\"kube-state-metrics\", namespace=~\".*\"}[10m]) > 0\n      and\n      kube_pod_container_status_waiting{job=\"kube-state-metrics\", namespace=~\".*\"} == 1\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubePodNotReady\n    annotations:\n      description: Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready\n        state for longer than 15 minutes.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodnotready\n      summary: Pod has been in a non-ready state for more than 15 minutes.\n    expr: |-\n      sum by (namespace, pod) (\n        max by(namespace, pod) (\n          kube_pod_status_phase{job=\"kube-state-metrics\", namespace=~\".*\", phase=~\"Pending|Unknown\"}\n        ) * on(namespace, pod) group_left(owner_kind) topk by(namespace, pod) (\n          1, max by(namespace, pod, owner_kind) (kube_pod_owner{owner_kind!=\"Job\"})\n        )\n      ) > 0\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeDeploymentGenerationMismatch\n    annotations:\n      description: Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment\n        }} does not match, this indicates that the Deployment has failed but has not\n        been rolled back.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentgenerationmismatch\n      summary: Deployment generation mismatch due to possible roll-back\n    expr: |-\n      kube_deployment_status_observed_generation{job=\"kube-state-metrics\", namespace=~\".*\"}\n        !=\n      kube_deployment_metadata_generation{job=\"kube-state-metrics\", namespace=~\".*\"}\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeDeploymentReplicasMismatch\n    annotations:\n      description: Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has\n        not matched the expected number of replicas for longer than 15 minutes.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentreplicasmismatch\n      summary: Deployment has not matched the expected number of replicas.\n    expr: |-\n      (\n        kube_deployment_spec_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}\n          >\n        kube_deployment_status_replicas_available{job=\"kube-state-metrics\", namespace=~\".*\"}\n      ) and (\n        changes(kube_deployment_status_replicas_updated{job=\"kube-state-metrics\", namespace=~\".*\"}[10m])\n          ==\n        0\n      )\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeStatefulSetReplicasMismatch\n    annotations:\n      description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has\n        not matched the expected number of replicas for longer than 15 minutes.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetreplicasmismatch\n      summary: Deployment has not matched the expected number of replicas.\n    expr: |-\n      (\n        kube_statefulset_status_replicas_ready{job=\"kube-state-metrics\", namespace=~\".*\"}\n          !=\n        kube_statefulset_status_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}\n      ) and (\n        changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\", namespace=~\".*\"}[10m])\n          ==\n        0\n      )\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeStatefulSetGenerationMismatch\n    annotations:\n      description: StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset\n        }} does not match, this indicates that the StatefulSet has failed but has\n        not been rolled back.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetgenerationmismatch\n      summary: StatefulSet generation mismatch due to possible roll-back\n    expr: |-\n      kube_statefulset_status_observed_generation{job=\"kube-state-metrics\", namespace=~\".*\"}\n        !=\n      kube_statefulset_metadata_generation{job=\"kube-state-metrics\", namespace=~\".*\"}\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeStatefulSetUpdateNotRolledOut\n    annotations:\n      description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} update\n        has not been rolled out.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetupdatenotrolledout\n      summary: StatefulSet update has not been rolled out.\n    expr: |-\n      (\n        max without (revision) (\n          kube_statefulset_status_current_revision{job=\"kube-state-metrics\", namespace=~\".*\"}\n            unless\n          kube_statefulset_status_update_revision{job=\"kube-state-metrics\", namespace=~\".*\"}\n        )\n          *\n        (\n          kube_statefulset_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}\n            !=\n          kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\", namespace=~\".*\"}\n        )\n      )  and (\n        changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\", namespace=~\".*\"}[5m])\n          ==\n        0\n      )\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeDaemonSetRolloutStuck\n    annotations:\n      description: DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} has not\n        finished or progressed for at least 15 minutes.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetrolloutstuck\n      summary: DaemonSet rollout is stuck.\n    expr: |-\n      (\n        (\n          kube_daemonset_status_current_number_scheduled{job=\"kube-state-metrics\", namespace=~\".*\"}\n           !=\n          kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\", namespace=~\".*\"}\n        ) or (\n          kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\", namespace=~\".*\"}\n           !=\n          0\n        ) or (\n          kube_daemonset_updated_number_scheduled{job=\"kube-state-metrics\", namespace=~\".*\"}\n           !=\n          kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\", namespace=~\".*\"}\n        ) or (\n          kube_daemonset_status_number_available{job=\"kube-state-metrics\", namespace=~\".*\"}\n           !=\n          kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\", namespace=~\".*\"}\n        )\n      ) and (\n        changes(kube_daemonset_updated_number_scheduled{job=\"kube-state-metrics\", namespace=~\".*\"}[5m])\n          ==\n        0\n      )\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeContainerWaiting\n    annotations:\n      description: Pod {{ $labels.namespace }}/{{ $labels.pod }} container {{ $labels.container}}\n        has been in waiting state for longer than 1 hour.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontainerwaiting\n      summary: Pod container waiting longer than 1 hour\n    expr: sum by (namespace, pod, container) (kube_pod_container_status_waiting_reason{job=\"kube-state-metrics\",\n      namespace=~\".*\"}) > 0\n    for: 1h\n    labels:\n      severity: warning\n  - alert: KubeDaemonSetNotScheduled\n    annotations:\n      description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset\n        }} are not scheduled.'\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetnotscheduled\n      summary: DaemonSet pods are not scheduled.\n    expr: |-\n      kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\", namespace=~\".*\"}\n        -\n      kube_daemonset_status_current_number_scheduled{job=\"kube-state-metrics\", namespace=~\".*\"} > 0\n    for: 10m\n    labels:\n      severity: warning\n  - alert: KubeDaemonSetMisScheduled\n    annotations:\n      description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset\n        }} are running where they are not supposed to run.'\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetmisscheduled\n      summary: DaemonSet pods are misscheduled.\n    expr: kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\", namespace=~\".*\"}\n      > 0\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeJobCompletion\n    annotations:\n      description: Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking more\n        than 12 hours to complete.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobcompletion\n      summary: Job did not complete in time\n    expr: kube_job_spec_completions{job=\"kube-state-metrics\", namespace=~\".*\"} - kube_job_status_succeeded{job=\"kube-state-metrics\",\n      namespace=~\".*\"}  > 0\n    for: 12h\n    labels:\n      severity: warning\n  - alert: KubeJobFailed\n    annotations:\n      description: Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to complete.\n        Removing failed job after investigation should clear this alert.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobfailed\n      summary: Job failed to complete.\n    expr: kube_job_failed{job=\"kube-state-metrics\", namespace=~\".*\"}  > 0\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeHpaReplicasMismatch\n    annotations:\n      description: HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }}\n        has not matched the desired number of replicas for longer than 15 minutes.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpareplicasmismatch\n      summary: HPA has not matched descired number of replicas.\n    expr: |-\n      (kube_horizontalpodautoscaler_status_desired_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}\n        !=\n      kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\", namespace=~\".*\"})\n        and\n      (kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}\n        >\n      kube_horizontalpodautoscaler_spec_min_replicas{job=\"kube-state-metrics\", namespace=~\".*\"})\n        and\n      (kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}\n        <\n      kube_horizontalpodautoscaler_spec_max_replicas{job=\"kube-state-metrics\", namespace=~\".*\"})\n        and\n      changes(kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}[15m]) == 0\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeHpaMaxedOut\n    annotations:\n      description: HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }}\n        has been running at max replicas for longer than 15 minutes.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpamaxedout\n      summary: HPA is running at max replicas\n    expr: |-\n      kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}\n        ==\n      kube_horizontalpodautoscaler_spec_max_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}\n    for: 15m\n    labels:\n      severity: warning\n","default-prometheus-kube-prometheus-kubernetes-resources.yaml":"groups:\n- name: kubernetes-resources\n  rules:\n  - alert: KubeCPUOvercommit\n    annotations:\n      description: Cluster has overcommitted CPU resource requests for Pods and cannot\n        tolerate node failure.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuovercommit\n      summary: Cluster has overcommitted CPU resource requests.\n    expr: |-\n      sum(namespace_cpu:kube_pod_container_resource_requests:sum{})\n        /\n      sum(kube_node_status_allocatable{resource=\"cpu\"})\n        >\n      ((count(kube_node_status_allocatable{resource=\"cpu\"}) > 1) - 1) / count(kube_node_status_allocatable{resource=\"cpu\"})\n    for: 5m\n    labels:\n      severity: warning\n  - alert: KubeMemoryOvercommit\n    annotations:\n      description: Cluster has overcommitted memory resource requests for Pods and\n        cannot tolerate node failure.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryovercommit\n      summary: Cluster has overcommitted memory resource requests.\n    expr: |-\n      sum(namespace_memory:kube_pod_container_resource_requests:sum{})\n        /\n      sum(kube_node_status_allocatable{resource=\"memory\"})\n        >\n      ((count(kube_node_status_allocatable{resource=\"memory\"}) > 1) - 1)\n        /\n      count(kube_node_status_allocatable{resource=\"memory\"})\n    for: 5m\n    labels:\n      severity: warning\n  - alert: KubeCPUQuotaOvercommit\n    annotations:\n      description: Cluster has overcommitted CPU resource requests for Namespaces.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuquotaovercommit\n      summary: Cluster has overcommitted CPU resource requests.\n    expr: |-\n      sum(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\", resource=\"cpu\"})\n        /\n      sum(kube_node_status_allocatable{resource=\"cpu\"})\n        > 1.5\n    for: 5m\n    labels:\n      severity: warning\n  - alert: KubeMemoryQuotaOvercommit\n    annotations:\n      description: Cluster has overcommitted memory resource requests for Namespaces.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryquotaovercommit\n      summary: Cluster has overcommitted memory resource requests.\n    expr: |-\n      sum(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\", resource=\"memory\"})\n        /\n      sum(kube_node_status_allocatable{resource=\"memory\",job=\"kube-state-metrics\"})\n        > 1.5\n    for: 5m\n    labels:\n      severity: warning\n  - alert: KubeQuotaAlmostFull\n    annotations:\n      description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage\n        }} of its {{ $labels.resource }} quota.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaalmostfull\n      summary: Namespace quota is going to be full.\n    expr: |-\n      kube_resourcequota{job=\"kube-state-metrics\", type=\"used\"}\n        / ignoring(instance, job, type)\n      (kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\"} > 0)\n        > 0.9 < 1\n    for: 15m\n    labels:\n      severity: info\n  - alert: KubeQuotaFullyUsed\n    annotations:\n      description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage\n        }} of its {{ $labels.resource }} quota.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotafullyused\n      summary: Namespace quota is fully used.\n    expr: |-\n      kube_resourcequota{job=\"kube-state-metrics\", type=\"used\"}\n        / ignoring(instance, job, type)\n      (kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\"} > 0)\n        == 1\n    for: 15m\n    labels:\n      severity: info\n  - alert: KubeQuotaExceeded\n    annotations:\n      description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage\n        }} of its {{ $labels.resource }} quota.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaexceeded\n      summary: Namespace quota has exceeded the limits.\n    expr: |-\n      kube_resourcequota{job=\"kube-state-metrics\", type=\"used\"}\n        / ignoring(instance, job, type)\n      (kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\"} > 0)\n        > 1\n    for: 15m\n    labels:\n      severity: warning\n  - alert: CPUThrottlingHigh\n    annotations:\n      description: '{{ $value | humanizePercentage }} throttling of CPU in namespace\n        {{ $labels.namespace }} for container {{ $labels.container }} in pod {{ $labels.pod\n        }}.'\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-cputhrottlinghigh\n      summary: Processes experience elevated CPU throttling.\n    expr: |-\n      sum(increase(container_cpu_cfs_throttled_periods_total{container!=\"\", }[5m])) by (container, pod, namespace)\n        /\n      sum(increase(container_cpu_cfs_periods_total{}[5m])) by (container, pod, namespace)\n        > ( 25 / 100 )\n    for: 15m\n    labels:\n      severity: info\n","default-prometheus-kube-prometheus-kubernetes-storage.yaml":"groups:\n- name: kubernetes-storage\n  rules:\n  - alert: KubePersistentVolumeFillingUp\n    annotations:\n      description: The PersistentVolume claimed by {{ $labels.persistentvolumeclaim\n        }} in Namespace {{ $labels.namespace }} is only {{ $value | humanizePercentage\n        }} free.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefillingup\n      summary: PersistentVolume is filling up.\n    expr: |-\n      (\n        kubelet_volume_stats_available_bytes{job=\"kubelet\", namespace=~\".*\", metrics_path=\"/metrics\"}\n          /\n        kubelet_volume_stats_capacity_bytes{job=\"kubelet\", namespace=~\".*\", metrics_path=\"/metrics\"}\n      ) < 0.03\n      and\n      kubelet_volume_stats_used_bytes{job=\"kubelet\", namespace=~\".*\", metrics_path=\"/metrics\"} > 0\n    for: 1m\n    labels:\n      severity: critical\n  - alert: KubePersistentVolumeFillingUp\n    annotations:\n      description: Based on recent sampling, the PersistentVolume claimed by {{ $labels.persistentvolumeclaim\n        }} in Namespace {{ $labels.namespace }} is expected to fill up within four\n        days. Currently {{ $value | humanizePercentage }} is available.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefillingup\n      summary: PersistentVolume is filling up.\n    expr: |-\n      (\n        kubelet_volume_stats_available_bytes{job=\"kubelet\", namespace=~\".*\", metrics_path=\"/metrics\"}\n          /\n        kubelet_volume_stats_capacity_bytes{job=\"kubelet\", namespace=~\".*\", metrics_path=\"/metrics\"}\n      ) < 0.15\n      and\n      kubelet_volume_stats_used_bytes{job=\"kubelet\", namespace=~\".*\", metrics_path=\"/metrics\"} > 0\n      and\n      predict_linear(kubelet_volume_stats_available_bytes{job=\"kubelet\", namespace=~\".*\", metrics_path=\"/metrics\"}[6h], 4 * 24 * 3600) < 0\n    for: 1h\n    labels:\n      severity: warning\n  - alert: KubePersistentVolumeErrors\n    annotations:\n      description: The persistent volume {{ $labels.persistentvolume }} has status\n        {{ $labels.phase }}.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumeerrors\n      summary: PersistentVolume is having issues with provisioning.\n    expr: kube_persistentvolume_status_phase{phase=~\"Failed|Pending\",job=\"kube-state-metrics\"}\n      > 0\n    for: 5m\n    labels:\n      severity: critical\n","default-prometheus-kube-prometheus-kubernetes-system-apiserver.yaml":"groups:\n- name: kubernetes-system-apiserver\n  rules:\n  - alert: KubeClientCertificateExpiration\n    annotations:\n      description: A client certificate used to authenticate to the apiserver is expiring\n        in less than 7.0 days.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration\n      summary: Client certificate is about to expire.\n    expr: apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} >\n      0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m])))\n      < 604800\n    labels:\n      severity: warning\n  - alert: KubeClientCertificateExpiration\n    annotations:\n      description: A client certificate used to authenticate to the apiserver is expiring\n        in less than 24.0 hours.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration\n      summary: Client certificate is about to expire.\n    expr: apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} >\n      0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m])))\n      < 86400\n    labels:\n      severity: critical\n  - alert: AggregatedAPIErrors\n    annotations:\n      description: An aggregated API {{ $labels.name }}/{{ $labels.namespace }} has\n        reported errors. It has appeared unavailable {{ $value | humanize }} times\n        averaged over the past 10m.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-aggregatedapierrors\n      summary: An aggregated API has reported errors.\n    expr: sum by(name, namespace)(increase(aggregator_unavailable_apiservice_total[10m]))\n      > 4\n    labels:\n      severity: warning\n  - alert: AggregatedAPIDown\n    annotations:\n      description: An aggregated API {{ $labels.name }}/{{ $labels.namespace }} has\n        been only {{ $value | humanize }}% available over the last 10m.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-aggregatedapidown\n      summary: An aggregated API is down.\n    expr: (1 - max by(name, namespace)(avg_over_time(aggregator_unavailable_apiservice[10m])))\n      * 100 < 85\n    for: 5m\n    labels:\n      severity: warning\n  - alert: KubeAPIDown\n    annotations:\n      description: KubeAPI has disappeared from Prometheus target discovery.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapidown\n      summary: Target disappeared from Prometheus target discovery.\n    expr: absent(up{job=\"apiserver\"} == 1)\n    for: 15m\n    labels:\n      severity: critical\n  - alert: KubeAPITerminatedRequests\n    annotations:\n      description: The apiserver has terminated {{ $value | humanizePercentage }}\n        of its incoming requests.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapiterminatedrequests\n      summary: The apiserver has terminated {{ $value | humanizePercentage }} of its\n        incoming requests.\n    expr: sum(rate(apiserver_request_terminations_total{job=\"apiserver\"}[10m]))  /\n      (  sum(rate(apiserver_request_total{job=\"apiserver\"}[10m])) + sum(rate(apiserver_request_terminations_total{job=\"apiserver\"}[10m]))\n      ) > 0.20\n    for: 5m\n    labels:\n      severity: warning\n","default-prometheus-kube-prometheus-kubernetes-system-controller-manager.yaml":"groups:\n- name: kubernetes-system-controller-manager\n  rules:\n  - alert: KubeControllerManagerDown\n    annotations:\n      description: KubeControllerManager has disappeared from Prometheus target discovery.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontrollermanagerdown\n      summary: Target disappeared from Prometheus target discovery.\n    expr: absent(up{job=\"kube-controller-manager\"} == 1)\n    for: 15m\n    labels:\n      severity: critical\n","default-prometheus-kube-prometheus-kubernetes-system-kubelet.yaml":"groups:\n- name: kubernetes-system-kubelet\n  rules:\n  - alert: KubeNodeNotReady\n    annotations:\n      description: '{{ $labels.node }} has been unready for more than 15 minutes.'\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodenotready\n      summary: Node is not ready.\n    expr: kube_node_status_condition{job=\"kube-state-metrics\",condition=\"Ready\",status=\"true\"}\n      == 0\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeNodeUnreachable\n    annotations:\n      description: '{{ $labels.node }} is unreachable and some workloads may be rescheduled.'\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodeunreachable\n      summary: Node is unreachable.\n    expr: (kube_node_spec_taint{job=\"kube-state-metrics\",key=\"node.kubernetes.io/unreachable\",effect=\"NoSchedule\"}\n      unless ignoring(key,value) kube_node_spec_taint{job=\"kube-state-metrics\",key=~\"ToBeDeletedByClusterAutoscaler|cloud.google.com/impending-node-termination|aws-node-termination-handler/spot-itn\"})\n      == 1\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeletTooManyPods\n    annotations:\n      description: Kubelet '{{ $labels.node }}' is running at {{ $value | humanizePercentage\n        }} of its Pod capacity.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubelettoomanypods\n      summary: Kubelet is running at capacity.\n    expr: |-\n      count by(node) (\n        (kube_pod_status_phase{job=\"kube-state-metrics\",phase=\"Running\"} == 1) * on(instance,pod,namespace,cluster) group_left(node) topk by(instance,pod,namespace,cluster) (1, kube_pod_info{job=\"kube-state-metrics\"})\n      )\n      /\n      max by(node) (\n        kube_node_status_capacity{job=\"kube-state-metrics\",resource=\"pods\"} != 1\n      ) > 0.95\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeNodeReadinessFlapping\n    annotations:\n      description: The readiness status of node {{ $labels.node }} has changed {{\n        $value }} times in the last 15 minutes.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodereadinessflapping\n      summary: Node readiness status is flapping.\n    expr: sum(changes(kube_node_status_condition{status=\"true\",condition=\"Ready\"}[15m]))\n      by (node) > 2\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeletPlegDurationHigh\n    annotations:\n      description: The Kubelet Pod Lifecycle Event Generator has a 99th percentile\n        duration of {{ $value }} seconds on node {{ $labels.node }}.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletplegdurationhigh\n      summary: Kubelet Pod Lifecycle Event Generator is taking too long to relist.\n    expr: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile=\"0.99\"}\n      >= 10\n    for: 5m\n    labels:\n      severity: warning\n  - alert: KubeletPodStartUpLatencyHigh\n    annotations:\n      description: Kubelet Pod startup 99th percentile latency is {{ $value }} seconds\n        on node {{ $labels.node }}.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletpodstartuplatencyhigh\n      summary: Kubelet Pod startup latency is too high.\n    expr: histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{job=\"kubelet\",\n      metrics_path=\"/metrics\"}[5m])) by (instance, le)) * on(instance) group_left(node)\n      kubelet_node_name{job=\"kubelet\", metrics_path=\"/metrics\"} > 60\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeletClientCertificateExpiration\n    annotations:\n      description: Client certificate for Kubelet on node {{ $labels.node }} expires\n        in {{ $value | humanizeDuration }}.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificateexpiration\n      summary: Kubelet client certificate is about to expire.\n    expr: kubelet_certificate_manager_client_ttl_seconds < 604800\n    labels:\n      severity: warning\n  - alert: KubeletClientCertificateExpiration\n    annotations:\n      description: Client certificate for Kubelet on node {{ $labels.node }} expires\n        in {{ $value | humanizeDuration }}.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificateexpiration\n      summary: Kubelet client certificate is about to expire.\n    expr: kubelet_certificate_manager_client_ttl_seconds < 86400\n    labels:\n      severity: critical\n  - alert: KubeletServerCertificateExpiration\n    annotations:\n      description: Server certificate for Kubelet on node {{ $labels.node }} expires\n        in {{ $value | humanizeDuration }}.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificateexpiration\n      summary: Kubelet server certificate is about to expire.\n    expr: kubelet_certificate_manager_server_ttl_seconds < 604800\n    labels:\n      severity: warning\n  - alert: KubeletServerCertificateExpiration\n    annotations:\n      description: Server certificate for Kubelet on node {{ $labels.node }} expires\n        in {{ $value | humanizeDuration }}.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificateexpiration\n      summary: Kubelet server certificate is about to expire.\n    expr: kubelet_certificate_manager_server_ttl_seconds < 86400\n    labels:\n      severity: critical\n  - alert: KubeletClientCertificateRenewalErrors\n    annotations:\n      description: Kubelet on node {{ $labels.node }} has failed to renew its client\n        certificate ({{ $value | humanize }} errors in the last 5 minutes).\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificaterenewalerrors\n      summary: Kubelet has failed to renew its client certificate.\n    expr: increase(kubelet_certificate_manager_client_expiration_renew_errors[5m])\n      > 0\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeletServerCertificateRenewalErrors\n    annotations:\n      description: Kubelet on node {{ $labels.node }} has failed to renew its server\n        certificate ({{ $value | humanize }} errors in the last 5 minutes).\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificaterenewalerrors\n      summary: Kubelet has failed to renew its server certificate.\n    expr: increase(kubelet_server_expiration_renew_errors[5m]) > 0\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeletDown\n    annotations:\n      description: Kubelet has disappeared from Prometheus target discovery.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletdown\n      summary: Target disappeared from Prometheus target discovery.\n    expr: absent(up{job=\"kubelet\", metrics_path=\"/metrics\"} == 1)\n    for: 15m\n    labels:\n      severity: critical\n","default-prometheus-kube-prometheus-kubernetes-system-scheduler.yaml":"groups:\n- name: kubernetes-system-scheduler\n  rules:\n  - alert: KubeSchedulerDown\n    annotations:\n      description: KubeScheduler has disappeared from Prometheus target discovery.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeschedulerdown\n      summary: Target disappeared from Prometheus target discovery.\n    expr: absent(up{job=\"kube-scheduler\"} == 1)\n    for: 15m\n    labels:\n      severity: critical\n","default-prometheus-kube-prometheus-kubernetes-system.yaml":"groups:\n- name: kubernetes-system\n  rules:\n  - alert: KubeVersionMismatch\n    annotations:\n      description: There are {{ $value }} different semantic versions of Kubernetes\n        components running.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeversionmismatch\n      summary: Different semantic versions of Kubernetes components running.\n    expr: count(count by (git_version) (label_replace(kubernetes_build_info{job!~\"kube-dns|coredns\"},\"git_version\",\"$1\",\"git_version\",\"(v[0-9]*.[0-9]*).*\")))\n      > 1\n    for: 15m\n    labels:\n      severity: warning\n  - alert: KubeClientErrors\n    annotations:\n      description: Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance\n        }}' is experiencing {{ $value | humanizePercentage }} errors.'\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclienterrors\n      summary: Kubernetes API server client is experiencing errors.\n    expr: |-\n      (sum(rate(rest_client_requests_total{code=~\"5..\"}[5m])) by (instance, job)\n        /\n      sum(rate(rest_client_requests_total[5m])) by (instance, job))\n      > 0.01\n    for: 15m\n    labels:\n      severity: warning\n","default-prometheus-kube-prometheus-node-exporter.rules.yaml":"groups:\n- name: node-exporter.rules\n  rules:\n  - expr: |-\n      count without (cpu) (\n        count without (mode) (\n          node_cpu_seconds_total{job=\"node-exporter\"}\n        )\n      )\n    record: instance:node_num_cpu:sum\n  - expr: |-\n      1 - avg without (cpu, mode) (\n        rate(node_cpu_seconds_total{job=\"node-exporter\", mode=\"idle\"}[5m])\n      )\n    record: instance:node_cpu_utilisation:rate5m\n  - expr: |-\n      (\n        node_load1{job=\"node-exporter\"}\n      /\n        instance:node_num_cpu:sum{job=\"node-exporter\"}\n      )\n    record: instance:node_load1_per_cpu:ratio\n  - expr: |-\n      1 - (\n        node_memory_MemAvailable_bytes{job=\"node-exporter\"}\n      /\n        node_memory_MemTotal_bytes{job=\"node-exporter\"}\n      )\n    record: instance:node_memory_utilisation:ratio\n  - expr: rate(node_vmstat_pgmajfault{job=\"node-exporter\"}[5m])\n    record: instance:node_vmstat_pgmajfault:rate5m\n  - expr: rate(node_disk_io_time_seconds_total{job=\"node-exporter\", device=~\"mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\"}[5m])\n    record: instance_device:node_disk_io_time_seconds:rate5m\n  - expr: rate(node_disk_io_time_weighted_seconds_total{job=\"node-exporter\", device=~\"mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\"}[5m])\n    record: instance_device:node_disk_io_time_weighted_seconds:rate5m\n  - expr: |-\n      sum without (device) (\n        rate(node_network_receive_bytes_total{job=\"node-exporter\", device!=\"lo\"}[5m])\n      )\n    record: instance:node_network_receive_bytes_excluding_lo:rate5m\n  - expr: |-\n      sum without (device) (\n        rate(node_network_transmit_bytes_total{job=\"node-exporter\", device!=\"lo\"}[5m])\n      )\n    record: instance:node_network_transmit_bytes_excluding_lo:rate5m\n  - expr: |-\n      sum without (device) (\n        rate(node_network_receive_drop_total{job=\"node-exporter\", device!=\"lo\"}[5m])\n      )\n    record: instance:node_network_receive_drop_excluding_lo:rate5m\n  - expr: |-\n      sum without (device) (\n        rate(node_network_transmit_drop_total{job=\"node-exporter\", device!=\"lo\"}[5m])\n      )\n    record: instance:node_network_transmit_drop_excluding_lo:rate5m\n","default-prometheus-kube-prometheus-node-exporter.yaml":"groups:\n- name: node-exporter\n  rules:\n  - alert: NodeFilesystemSpaceFillingUp\n    annotations:\n      description: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has\n        only {{ printf \"%.2f\" $value }}% available space left and is filling up.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemspacefillingup\n      summary: Filesystem is predicted to run out of space within the next 24 hours.\n    expr: |-\n      (\n        node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 40\n      and\n        predict_linear(node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"}[6h], 24*60*60) < 0\n      and\n        node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n      )\n    for: 1h\n    labels:\n      severity: warning\n  - alert: NodeFilesystemSpaceFillingUp\n    annotations:\n      description: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has\n        only {{ printf \"%.2f\" $value }}% available space left and is filling up fast.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemspacefillingup\n      summary: Filesystem is predicted to run out of space within the next 4 hours.\n    expr: |-\n      (\n        node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 15\n      and\n        predict_linear(node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"}[6h], 4*60*60) < 0\n      and\n        node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n      )\n    for: 1h\n    labels:\n      severity: critical\n  - alert: NodeFilesystemAlmostOutOfSpace\n    annotations:\n      description: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has\n        only {{ printf \"%.2f\" $value }}% available space left.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemalmostoutofspace\n      summary: Filesystem has less than 5% space left.\n    expr: |-\n      (\n        node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 5\n      and\n        node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n      )\n    for: 1h\n    labels:\n      severity: warning\n  - alert: NodeFilesystemAlmostOutOfSpace\n    annotations:\n      description: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has\n        only {{ printf \"%.2f\" $value }}% available space left.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemalmostoutofspace\n      summary: Filesystem has less than 3% space left.\n    expr: |-\n      (\n        node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 3\n      and\n        node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n      )\n    for: 1h\n    labels:\n      severity: critical\n  - alert: NodeFilesystemFilesFillingUp\n    annotations:\n      description: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has\n        only {{ printf \"%.2f\" $value }}% available inodes left and is filling up.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemfilesfillingup\n      summary: Filesystem is predicted to run out of inodes within the next 24 hours.\n    expr: |-\n      (\n        node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_files{job=\"node-exporter\",fstype!=\"\"} * 100 < 40\n      and\n        predict_linear(node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"}[6h], 24*60*60) < 0\n      and\n        node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n      )\n    for: 1h\n    labels:\n      severity: warning\n  - alert: NodeFilesystemFilesFillingUp\n    annotations:\n      description: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has\n        only {{ printf \"%.2f\" $value }}% available inodes left and is filling up fast.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemfilesfillingup\n      summary: Filesystem is predicted to run out of inodes within the next 4 hours.\n    expr: |-\n      (\n        node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_files{job=\"node-exporter\",fstype!=\"\"} * 100 < 20\n      and\n        predict_linear(node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"}[6h], 4*60*60) < 0\n      and\n        node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n      )\n    for: 1h\n    labels:\n      severity: critical\n  - alert: NodeFilesystemAlmostOutOfFiles\n    annotations:\n      description: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has\n        only {{ printf \"%.2f\" $value }}% available inodes left.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemalmostoutoffiles\n      summary: Filesystem has less than 5% inodes left.\n    expr: |-\n      (\n        node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_files{job=\"node-exporter\",fstype!=\"\"} * 100 < 5\n      and\n        node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n      )\n    for: 1h\n    labels:\n      severity: warning\n  - alert: NodeFilesystemAlmostOutOfFiles\n    annotations:\n      description: Filesystem on {{ $labels.device }} at {{ $labels.instance }} has\n        only {{ printf \"%.2f\" $value }}% available inodes left.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemalmostoutoffiles\n      summary: Filesystem has less than 3% inodes left.\n    expr: |-\n      (\n        node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_files{job=\"node-exporter\",fstype!=\"\"} * 100 < 3\n      and\n        node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n      )\n    for: 1h\n    labels:\n      severity: critical\n  - alert: NodeNetworkReceiveErrs\n    annotations:\n      description: '{{ $labels.instance }} interface {{ $labels.device }} has encountered\n        {{ printf \"%.0f\" $value }} receive errors in the last two minutes.'\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodenetworkreceiveerrs\n      summary: Network interface is reporting many receive errors.\n    expr: rate(node_network_receive_errs_total[2m]) / rate(node_network_receive_packets_total[2m])\n      > 0.01\n    for: 1h\n    labels:\n      severity: warning\n  - alert: NodeNetworkTransmitErrs\n    annotations:\n      description: '{{ $labels.instance }} interface {{ $labels.device }} has encountered\n        {{ printf \"%.0f\" $value }} transmit errors in the last two minutes.'\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodenetworktransmiterrs\n      summary: Network interface is reporting many transmit errors.\n    expr: rate(node_network_transmit_errs_total[2m]) / rate(node_network_transmit_packets_total[2m])\n      > 0.01\n    for: 1h\n    labels:\n      severity: warning\n  - alert: NodeHighNumberConntrackEntriesUsed\n    annotations:\n      description: '{{ $value | humanizePercentage }} of conntrack entries are used.'\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodehighnumberconntrackentriesused\n      summary: Number of conntrack are getting close to the limit.\n    expr: (node_nf_conntrack_entries / node_nf_conntrack_entries_limit) > 0.75\n    labels:\n      severity: warning\n  - alert: NodeTextFileCollectorScrapeError\n    annotations:\n      description: Node Exporter text file collector failed to scrape.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodetextfilecollectorscrapeerror\n      summary: Node Exporter text file collector failed to scrape.\n    expr: node_textfile_scrape_error{job=\"node-exporter\"} == 1\n    labels:\n      severity: warning\n  - alert: NodeClockSkewDetected\n    annotations:\n      description: Clock on {{ $labels.instance }} is out of sync by more than 300s.\n        Ensure NTP is configured correctly on this host.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodeclockskewdetected\n      summary: Clock skew detected.\n    expr: |-\n      (\n        node_timex_offset_seconds > 0.05\n      and\n        deriv(node_timex_offset_seconds[5m]) >= 0\n      )\n      or\n      (\n        node_timex_offset_seconds < -0.05\n      and\n        deriv(node_timex_offset_seconds[5m]) <= 0\n      )\n    for: 10m\n    labels:\n      severity: warning\n  - alert: NodeClockNotSynchronising\n    annotations:\n      description: Clock on {{ $labels.instance }} is not synchronising. Ensure NTP\n        is configured on this host.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodeclocknotsynchronising\n      summary: Clock not synchronising.\n    expr: |-\n      min_over_time(node_timex_sync_status[5m]) == 0\n      and\n      node_timex_maxerror_seconds >= 16\n    for: 10m\n    labels:\n      severity: warning\n  - alert: NodeRAIDDegraded\n    annotations:\n      description: RAID array '{{ $labels.device }}' on {{ $labels.instance }} is\n        in degraded state due to one or more disks failures. Number of spare drives\n        is insufficient to fix issue automatically.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-noderaiddegraded\n      summary: RAID Array is degraded\n    expr: node_md_disks_required - ignoring (state) (node_md_disks{state=\"active\"})\n      > 0\n    for: 15m\n    labels:\n      severity: critical\n  - alert: NodeRAIDDiskFailure\n    annotations:\n      description: At least one device in RAID array on {{ $labels.instance }} failed.\n        Array '{{ $labels.device }}' needs attention and possibly a disk swap.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-noderaiddiskfailure\n      summary: Failed device in RAID array\n    expr: node_md_disks{state=\"failed\"} > 0\n    labels:\n      severity: warning\n  - alert: NodeFileDescriptorLimit\n    annotations:\n      description: File descriptors limit at {{ $labels.instance }} is currently at\n        {{ printf \"%.2f\" $value }}%.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefiledescriptorlimit\n      summary: Kernel is predicted to exhaust file descriptors limit soon.\n    expr: |-\n      (\n        node_filefd_allocated{job=\"node-exporter\"} * 100 / node_filefd_maximum{job=\"node-exporter\"} > 70\n      )\n    for: 15m\n    labels:\n      severity: warning\n  - alert: NodeFileDescriptorLimit\n    annotations:\n      description: File descriptors limit at {{ $labels.instance }} is currently at\n        {{ printf \"%.2f\" $value }}%.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefiledescriptorlimit\n      summary: Kernel is predicted to exhaust file descriptors limit soon.\n    expr: |-\n      (\n        node_filefd_allocated{job=\"node-exporter\"} * 100 / node_filefd_maximum{job=\"node-exporter\"} > 90\n      )\n    for: 15m\n    labels:\n      severity: critical\n","default-prometheus-kube-prometheus-node-network.yaml":"groups:\n- name: node-network\n  rules:\n  - alert: NodeNetworkInterfaceFlapping\n    annotations:\n      description: Network interface \"{{ $labels.device }}\" changing it's up status\n        often on node-exporter {{ $labels.namespace }}/{{ $labels.pod }}\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodenetworkinterfaceflapping\n      summary: Network interface is often changin it's status\n    expr: changes(node_network_up{job=\"node-exporter\",device!~\"veth.+\"}[2m]) > 2\n    for: 2m\n    labels:\n      severity: warning\n","default-prometheus-kube-prometheus-node.rules.yaml":"groups:\n- name: node.rules\n  rules:\n  - expr: |-\n      topk by(namespace, pod) (1,\n        max by (node, namespace, pod) (\n          label_replace(kube_pod_info{job=\"kube-state-metrics\",node!=\"\"}, \"pod\", \"$1\", \"pod\", \"(.*)\")\n      ))\n    record: 'node_namespace_pod:kube_pod_info:'\n  - expr: |-\n      count by (cluster, node) (sum by (node, cpu) (\n        node_cpu_seconds_total{job=\"node-exporter\"}\n      * on (namespace, pod) group_left(node)\n        topk by(namespace, pod) (1, node_namespace_pod:kube_pod_info:)\n      ))\n    record: node:node_num_cpu:sum\n  - expr: |-\n      sum(\n        node_memory_MemAvailable_bytes{job=\"node-exporter\"} or\n        (\n          node_memory_Buffers_bytes{job=\"node-exporter\"} +\n          node_memory_Cached_bytes{job=\"node-exporter\"} +\n          node_memory_MemFree_bytes{job=\"node-exporter\"} +\n          node_memory_Slab_bytes{job=\"node-exporter\"}\n        )\n      ) by (cluster)\n    record: :node_memory_MemAvailable_bytes:sum\n","default-prometheus-kube-prometheus-prometheus-operator.yaml":"groups:\n- name: prometheus-operator\n  rules:\n  - alert: PrometheusOperatorListErrors\n    annotations:\n      description: Errors while performing List operations in controller {{$labels.controller}}\n        in {{$labels.namespace}} namespace.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatorlisterrors\n      summary: Errors while performing list operations in controller.\n    expr: (sum by (controller,namespace) (rate(prometheus_operator_list_operations_failed_total{job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[10m]))\n      / sum by (controller,namespace) (rate(prometheus_operator_list_operations_total{job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[10m])))\n      > 0.4\n    for: 15m\n    labels:\n      severity: warning\n  - alert: PrometheusOperatorWatchErrors\n    annotations:\n      description: Errors while performing watch operations in controller {{$labels.controller}}\n        in {{$labels.namespace}} namespace.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatorwatcherrors\n      summary: Errors while performing watch operations in controller.\n    expr: (sum by (controller,namespace) (rate(prometheus_operator_watch_operations_failed_total{job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[10m]))\n      / sum by (controller,namespace) (rate(prometheus_operator_watch_operations_total{job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[10m])))\n      > 0.4\n    for: 15m\n    labels:\n      severity: warning\n  - alert: PrometheusOperatorSyncFailed\n    annotations:\n      description: Controller {{ $labels.controller }} in {{ $labels.namespace }}\n        namespace fails to reconcile {{ $value }} objects.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatorsyncfailed\n      summary: Last controller reconciliation failed\n    expr: min_over_time(prometheus_operator_syncs{status=\"failed\",job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[5m])\n      > 0\n    for: 10m\n    labels:\n      severity: warning\n  - alert: PrometheusOperatorReconcileErrors\n    annotations:\n      description: '{{ $value | humanizePercentage }} of reconciling operations failed\n        for {{ $labels.controller }} controller in {{ $labels.namespace }} namespace.'\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatorreconcileerrors\n      summary: Errors while reconciling controller.\n    expr: (sum by (controller,namespace) (rate(prometheus_operator_reconcile_errors_total{job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[5m])))\n      / (sum by (controller,namespace) (rate(prometheus_operator_reconcile_operations_total{job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[5m])))\n      > 0.1\n    for: 10m\n    labels:\n      severity: warning\n  - alert: PrometheusOperatorNodeLookupErrors\n    annotations:\n      description: Errors while reconciling Prometheus in {{ $labels.namespace }}\n        Namespace.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatornodelookuperrors\n      summary: Errors while reconciling Prometheus.\n    expr: rate(prometheus_operator_node_address_lookup_errors_total{job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[5m])\n      > 0.1\n    for: 10m\n    labels:\n      severity: warning\n  - alert: PrometheusOperatorNotReady\n    annotations:\n      description: Prometheus operator in {{ $labels.namespace }} namespace isn't\n        ready to reconcile {{ $labels.controller }} resources.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatornotready\n      summary: Prometheus operator not ready\n    expr: min by(namespace, controller) (max_over_time(prometheus_operator_ready{job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[5m])\n      == 0)\n    for: 5m\n    labels:\n      severity: warning\n  - alert: PrometheusOperatorRejectedResources\n    annotations:\n      description: Prometheus operator in {{ $labels.namespace }} namespace rejected\n        {{ printf \"%0.0f\" $value }} {{ $labels.controller }}/{{ $labels.resource }}\n        resources.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatorrejectedresources\n      summary: Resources rejected by Prometheus operator\n    expr: min_over_time(prometheus_operator_managed_resources{state=\"rejected\",job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[5m])\n      > 0\n    for: 5m\n    labels:\n      severity: warning\n","default-prometheus-kube-prometheus-prometheus.yaml":"groups:\n- name: prometheus\n  rules:\n  - alert: PrometheusBadConfig\n    annotations:\n      description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to\n        reload its configuration.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusbadconfig\n      summary: Failed Prometheus configuration reload.\n    expr: |-\n      # Without max_over_time, failed scrapes could create false negatives, see\n      # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n      max_over_time(prometheus_config_last_reload_successful{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) == 0\n    for: 10m\n    labels:\n      severity: critical\n  - alert: PrometheusNotificationQueueRunningFull\n    annotations:\n      description: Alert notification queue of Prometheus {{$labels.namespace}}/{{$labels.pod}}\n        is running full.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusnotificationqueuerunningfull\n      summary: Prometheus alert notification queue predicted to run full in less than\n        30m.\n    expr: |-\n      # Without min_over_time, failed scrapes could create false negatives, see\n      # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n      (\n        predict_linear(prometheus_notifications_queue_length{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m], 60 * 30)\n      >\n        min_over_time(prometheus_notifications_queue_capacity{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n      )\n    for: 15m\n    labels:\n      severity: warning\n  - alert: PrometheusErrorSendingAlertsToSomeAlertmanagers\n    annotations:\n      description: '{{ printf \"%.1f\" $value }}% errors while sending alerts from Prometheus\n        {{$labels.namespace}}/{{$labels.pod}} to Alertmanager {{$labels.alertmanager}}.'\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheuserrorsendingalertstosomealertmanagers\n      summary: Prometheus has encountered more than 1% errors sending alerts to a\n        specific Alertmanager.\n    expr: |-\n      (\n        rate(prometheus_notifications_errors_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n      /\n        rate(prometheus_notifications_sent_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n      )\n      * 100\n      > 1\n    for: 15m\n    labels:\n      severity: warning\n  - alert: PrometheusNotConnectedToAlertmanagers\n    annotations:\n      description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is not connected\n        to any Alertmanagers.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusnotconnectedtoalertmanagers\n      summary: Prometheus is not connected to any Alertmanagers.\n    expr: |-\n      # Without max_over_time, failed scrapes could create false negatives, see\n      # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n      max_over_time(prometheus_notifications_alertmanagers_discovered{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) < 1\n    for: 10m\n    labels:\n      severity: warning\n  - alert: PrometheusTSDBReloadsFailing\n    annotations:\n      description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value\n        | humanize}} reload failures over the last 3h.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheustsdbreloadsfailing\n      summary: Prometheus has issues reloading blocks from disk.\n    expr: increase(prometheus_tsdb_reloads_failures_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[3h])\n      > 0\n    for: 4h\n    labels:\n      severity: warning\n  - alert: PrometheusTSDBCompactionsFailing\n    annotations:\n      description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value\n        | humanize}} compaction failures over the last 3h.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheustsdbcompactionsfailing\n      summary: Prometheus has issues compacting blocks.\n    expr: increase(prometheus_tsdb_compactions_failed_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[3h])\n      > 0\n    for: 4h\n    labels:\n      severity: warning\n  - alert: PrometheusNotIngestingSamples\n    annotations:\n      description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is not ingesting\n        samples.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusnotingestingsamples\n      summary: Prometheus is not ingesting samples.\n    expr: |-\n      (\n        rate(prometheus_tsdb_head_samples_appended_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) <= 0\n      and\n        (\n          sum without(scrape_job) (prometheus_target_metadata_cache_entries{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}) > 0\n        or\n          sum without(rule_group) (prometheus_rule_group_rules{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}) > 0\n        )\n      )\n    for: 10m\n    labels:\n      severity: warning\n  - alert: PrometheusDuplicateTimestamps\n    annotations:\n      description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{\n        printf \"%.4g\" $value  }} samples/s with different values but duplicated timestamp.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusduplicatetimestamps\n      summary: Prometheus is dropping samples with duplicate timestamps.\n    expr: rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n      > 0\n    for: 10m\n    labels:\n      severity: warning\n  - alert: PrometheusOutOfOrderTimestamps\n    annotations:\n      description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{\n        printf \"%.4g\" $value  }} samples/s with timestamps arriving out of order.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoutofordertimestamps\n      summary: Prometheus drops samples with out-of-order timestamps.\n    expr: rate(prometheus_target_scrapes_sample_out_of_order_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n      > 0\n    for: 10m\n    labels:\n      severity: warning\n  - alert: PrometheusRemoteStorageFailures\n    annotations:\n      description: Prometheus {{$labels.namespace}}/{{$labels.pod}} failed to send\n        {{ printf \"%.1f\" $value }}% of the samples to {{ $labels.remote_name}}:{{\n        $labels.url }}\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusremotestoragefailures\n      summary: Prometheus fails to send samples to remote storage.\n    expr: |-\n      (\n        (rate(prometheus_remote_storage_failed_samples_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]))\n      /\n        (\n          (rate(prometheus_remote_storage_failed_samples_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]))\n        +\n          (rate(prometheus_remote_storage_succeeded_samples_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) or rate(prometheus_remote_storage_samples_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]))\n        )\n      )\n      * 100\n      > 1\n    for: 15m\n    labels:\n      severity: critical\n  - alert: PrometheusRemoteWriteBehind\n    annotations:\n      description: Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write is\n        {{ printf \"%.1f\" $value }}s behind for {{ $labels.remote_name}}:{{ $labels.url\n        }}.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusremotewritebehind\n      summary: Prometheus remote write is behind.\n    expr: |-\n      # Without max_over_time, failed scrapes could create false negatives, see\n      # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n      (\n        max_over_time(prometheus_remote_storage_highest_timestamp_in_seconds{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n      - ignoring(remote_name, url) group_right\n        max_over_time(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n      )\n      > 120\n    for: 15m\n    labels:\n      severity: critical\n  - alert: PrometheusRemoteWriteDesiredShards\n    annotations:\n      description: Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write desired\n        shards calculation wants to run {{ $value }} shards for queue {{ $labels.remote_name}}:{{\n        $labels.url }}, which is more than the max of {{ printf `prometheus_remote_storage_shards_max{instance=\"%s\",job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}`\n        $labels.instance | query | first | value }}.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusremotewritedesiredshards\n      summary: Prometheus remote write desired shards calculation wants to run more\n        than configured max shards.\n    expr: |-\n      # Without max_over_time, failed scrapes could create false negatives, see\n      # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n      (\n        max_over_time(prometheus_remote_storage_shards_desired{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n      >\n        max_over_time(prometheus_remote_storage_shards_max{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n      )\n    for: 15m\n    labels:\n      severity: warning\n  - alert: PrometheusRuleFailures\n    annotations:\n      description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to\n        evaluate {{ printf \"%.0f\" $value }} rules in the last 5m.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusrulefailures\n      summary: Prometheus is failing rule evaluations.\n    expr: increase(prometheus_rule_evaluation_failures_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n      > 0\n    for: 15m\n    labels:\n      severity: critical\n  - alert: PrometheusMissingRuleEvaluations\n    annotations:\n      description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has missed {{\n        printf \"%.0f\" $value }} rule group evaluations in the last 5m.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusmissingruleevaluations\n      summary: Prometheus is missing rule evaluations due to slow rule group evaluation.\n    expr: increase(prometheus_rule_group_iterations_missed_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n      > 0\n    for: 15m\n    labels:\n      severity: warning\n  - alert: PrometheusTargetLimitHit\n    annotations:\n      description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has dropped {{\n        printf \"%.0f\" $value }} targets because the number of targets exceeded the\n        configured target_limit.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheustargetlimithit\n      summary: Prometheus has dropped targets because some scrape configs have exceeded\n        the targets limit.\n    expr: increase(prometheus_target_scrape_pool_exceeded_target_limit_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n      > 0\n    for: 15m\n    labels:\n      severity: warning\n  - alert: PrometheusLabelLimitHit\n    annotations:\n      description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has dropped {{\n        printf \"%.0f\" $value }} targets because some samples exceeded the configured\n        label_limit, label_name_length_limit or label_value_length_limit.\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheuslabellimithit\n      summary: Prometheus has dropped targets because some scrape configs have exceeded\n        the labels limit.\n    expr: increase(prometheus_target_scrape_pool_exceeded_label_limits_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n      > 0\n    for: 15m\n    labels:\n      severity: warning\n  - alert: PrometheusTargetSyncFailure\n    annotations:\n      description: '{{ printf \"%.0f\" $value }} targets in Prometheus {{$labels.namespace}}/{{$labels.pod}}\n        have failed to sync because invalid configuration was supplied.'\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheustargetsyncfailure\n      summary: Prometheus has failed to sync targets.\n    expr: increase(prometheus_target_sync_failed_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[30m])\n      > 0\n    for: 5m\n    labels:\n      severity: critical\n  - alert: PrometheusErrorSendingAlertsToAnyAlertmanager\n    annotations:\n      description: '{{ printf \"%.1f\" $value }}% minimum errors while sending alerts\n        from Prometheus {{$labels.namespace}}/{{$labels.pod}} to any Alertmanager.'\n      runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheuserrorsendingalertstoanyalertmanager\n      summary: Prometheus encounters more than 3% errors sending alerts to any Alertmanager.\n    expr: |-\n      min without (alertmanager) (\n        rate(prometheus_notifications_errors_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\",alertmanager!~``}[5m])\n      /\n        rate(prometheus_notifications_sent_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\",alertmanager!~``}[5m])\n      )\n      * 100\n      > 3\n    for: 15m\n    labels:\n      severity: critical\n"},"metadata":{"creationTimestamp":"2021-10-25T16:45:17.000Z","labels":{"managed-by":"prometheus-operator","prometheus-name":"prometheus-kube-prometheus-prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:default-prometheus-kube-prometheus-alertmanager.rules.yaml":{},"f:default-prometheus-kube-prometheus-etcd.yaml":{},"f:default-prometheus-kube-prometheus-general.rules.yaml":{},"f:default-prometheus-kube-prometheus-k8s.rules.yaml":{},"f:default-prometheus-kube-prometheus-kube-apiserver-availability.rules.yaml":{},"f:default-prometheus-kube-prometheus-kube-apiserver-burnrate.rules.yaml":{},"f:default-prometheus-kube-prometheus-kube-apiserver-histogram.rules.yaml":{},"f:default-prometheus-kube-prometheus-kube-apiserver-slos.yaml":{},"f:default-prometheus-kube-prometheus-kube-apiserver.rules.yaml":{},"f:default-prometheus-kube-prometheus-kube-prometheus-general.rules.yaml":{},"f:default-prometheus-kube-prometheus-kube-prometheus-node-recording.rules.yaml":{},"f:default-prometheus-kube-prometheus-kube-scheduler.rules.yaml":{},"f:default-prometheus-kube-prometheus-kube-state-metrics.yaml":{},"f:default-prometheus-kube-prometheus-kubelet.rules.yaml":{},"f:default-prometheus-kube-prometheus-kubernetes-apps.yaml":{},"f:default-prometheus-kube-prometheus-kubernetes-resources.yaml":{},"f:default-prometheus-kube-prometheus-kubernetes-storage.yaml":{},"f:default-prometheus-kube-prometheus-kubernetes-system-apiserver.yaml":{},"f:default-prometheus-kube-prometheus-kubernetes-system-controller-manager.yaml":{},"f:default-prometheus-kube-prometheus-kubernetes-system-kubelet.yaml":{},"f:default-prometheus-kube-prometheus-kubernetes-system-scheduler.yaml":{},"f:default-prometheus-kube-prometheus-kubernetes-system.yaml":{},"f:default-prometheus-kube-prometheus-node-exporter.rules.yaml":{},"f:default-prometheus-kube-prometheus-node-exporter.yaml":{},"f:default-prometheus-kube-prometheus-node-network.yaml":{},"f:default-prometheus-kube-prometheus-node.rules.yaml":{},"f:default-prometheus-kube-prometheus-prometheus-operator.yaml":{},"f:default-prometheus-kube-prometheus-prometheus.yaml":{}},"f:metadata":{"f:labels":{".":{},"f:managed-by":{},"f:prometheus-name":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c424c4cd-4cc8-4031-863b-1d1ca12111f7\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}}},"manager":"operator","operation":"Update","time":"2021-10-25T16:45:17.000Z"}],"name":"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0","namespace":"default","ownerReferences":[{"apiVersion":"monitoring.coreos.com/v1","blockOwnerDeletion":true,"controller":true,"kind":"Prometheus","name":"prometheus-kube-prometheus-prometheus","uid":"c424c4cd-4cc8-4031-863b-1d1ca12111f7"}],"resourceVersion":"640536","uid":"ecf2972e-e65d-4748-b837-b8f57e9008ef"}}],"services":[{"metadata":{"creationTimestamp":"2021-10-25T16:45:16.000Z","labels":{"operated-alertmanager":"true"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:labels":{".":{},"f:operated-alertmanager":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b1da6691-468b-44db-88c2-3fc3f3d582e1\"}":{".":{},"f:apiVersion":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:spec":{"f:clusterIP":{},"f:ports":{".":{},"k:{\"port\":9093,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}},"k:{\"port\":9094,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}},"k:{\"port\":9094,\"protocol\":\"UDP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:selector":{".":{},"f:app.kubernetes.io/name":{}},"f:sessionAffinity":{},"f:type":{}}},"manager":"operator","operation":"Update","time":"2021-10-25T16:45:16.000Z"}],"name":"alertmanager-operated","namespace":"default","ownerReferences":[{"apiVersion":"monitoring.coreos.com/v1","kind":"Alertmanager","name":"prometheus-kube-prometheus-alertmanager","uid":"b1da6691-468b-44db-88c2-3fc3f3d582e1"}],"resourceVersion":"640454","uid":"d0be1b22-34f0-4d19-959a-e51fc81d296f"},"spec":{"clusterIP":"None","clusterIPs":["None"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"web","port":9093,"protocol":"TCP","targetPort":"web"},{"name":"tcp-mesh","port":9094,"protocol":"TCP","targetPort":9094},{"name":"udp-mesh","port":9094,"protocol":"UDP","targetPort":9094}],"selector":{"app.kubernetes.io/name":"alertmanager"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}},{"metadata":{"creationTimestamp":"2021-10-23T22:13:20.000Z","labels":{"component":"apiserver","provider":"kubernetes"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:labels":{".":{},"f:component":{},"f:provider":{}}},"f:spec":{"f:clusterIP":{},"f:ipFamilyPolicy":{},"f:ports":{".":{},"k:{\"port\":443,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}},"manager":"kube-apiserver","operation":"Update","time":"2021-10-23T22:13:20.000Z"}],"name":"kubernetes","namespace":"default","resourceVersion":"555408","uid":"243d3454-f9d4-4641-9689-5f4fe161ffa2"},"spec":{"clusterIP":"10.96.0.1","clusterIPs":["10.96.0.1"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"https","port":443,"protocol":"TCP","targetPort":6443}],"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}},{"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"8.2.1","helm.sh/chart":"grafana-6.17.2"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:helm.sh/chart":{}}},"f:spec":{"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:selector":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/name":{}},"f:sessionAffinity":{},"f:type":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-grafana","namespace":"default","resourceVersion":"640348","uid":"6d9b4b88-a4fe-4d12-935d-0fec05fab288"},"spec":{"clusterIP":"10.106.252.25","clusterIPs":["10.106.252.25"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"service","port":80,"protocol":"TCP","targetPort":3000}],"selector":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"grafana"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}},{"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-alertmanager","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus","self-monitor":"true"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{},"f:self-monitor":{}}},"f:spec":{"f:ports":{".":{},"k:{\"port\":9093,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:selector":{".":{},"f:alertmanager":{},"f:app":{}},"f:sessionAffinity":{},"f:type":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-alertmanager","namespace":"default","resourceVersion":"640370","uid":"baabae4b-64ac-4876-aa6a-a235a40acd17"},"spec":{"clusterIP":"10.98.142.167","clusterIPs":["10.98.142.167"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"web","port":9093,"protocol":"TCP","targetPort":9093}],"selector":{"alertmanager":"prometheus-kube-prometheus-alertmanager","app":"alertmanager"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}},{"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-operator","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{"f:ports":{".":{},"k:{\"port\":443,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:selector":{".":{},"f:app":{},"f:release":{}},"f:sessionAffinity":{},"f:type":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-operator","namespace":"default","resourceVersion":"640374","uid":"04d73520-7cc7-406b-ad62-5775adf1470b"},"spec":{"clusterIP":"10.102.141.156","clusterIPs":["10.102.141.156"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"https","port":443,"protocol":"TCP","targetPort":"https"}],"selector":{"app":"kube-prometheus-stack-operator","release":"prometheus"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}},{"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"kube-prometheus-stack-prometheus","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus","self-monitor":"true"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{},"f:self-monitor":{}}},"f:spec":{"f:ports":{".":{},"k:{\"port\":9090,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:selector":{".":{},"f:app.kubernetes.io/name":{},"f:prometheus":{}},"f:sessionAffinity":{},"f:type":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-prometheus-prometheus","namespace":"default","resourceVersion":"640366","uid":"3c445109-6f75-4927-b836-ba76549caa09"},"spec":{"clusterIP":"10.109.61.73","clusterIPs":["10.109.61.73"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"web","port":9090,"protocol":"TCP","targetPort":9090}],"selector":{"app.kubernetes.io/name":"prometheus","prometheus":"prometheus-kube-prometheus-prometheus"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}},{"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default","prometheus.io/scrape":"true"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"kube-state-metrics","helm.sh/chart":"kube-state-metrics-3.5.2"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{},"f:prometheus.io/scrape":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:helm.sh/chart":{}}},"f:spec":{"f:ports":{".":{},"k:{\"port\":8080,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:selector":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/name":{}},"f:sessionAffinity":{},"f:type":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-kube-state-metrics","namespace":"default","resourceVersion":"640356","uid":"a71f5aac-95d4-4664-a7aa-55a78d130fee"},"spec":{"clusterIP":"10.96.122.179","clusterIPs":["10.96.122.179"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"http","port":8080,"protocol":"TCP","targetPort":8080}],"selector":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"kube-state-metrics"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}},{"metadata":{"creationTimestamp":"2021-10-25T16:45:16.000Z","labels":{"operated-prometheus":"true"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:labels":{".":{},"f:operated-prometheus":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c424c4cd-4cc8-4031-863b-1d1ca12111f7\"}":{".":{},"f:apiVersion":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:spec":{"f:clusterIP":{},"f:ports":{".":{},"k:{\"port\":9090,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:selector":{".":{},"f:app.kubernetes.io/name":{}},"f:sessionAffinity":{},"f:type":{}}},"manager":"operator","operation":"Update","time":"2021-10-25T16:45:16.000Z"}],"name":"prometheus-operated","namespace":"default","ownerReferences":[{"apiVersion":"monitoring.coreos.com/v1","kind":"Prometheus","name":"prometheus-kube-prometheus-prometheus","uid":"c424c4cd-4cc8-4031-863b-1d1ca12111f7"}],"resourceVersion":"640468","uid":"7fcee32b-50f4-47a4-99b0-17ac5d4e2f33"},"spec":{"clusterIP":"None","clusterIPs":["None"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"web","port":9090,"protocol":"TCP","targetPort":"web"}],"selector":{"app.kubernetes.io/name":"prometheus"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}},{"metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default","prometheus.io/scrape":"true"},"creationTimestamp":"2021-10-25T16:45:14.000Z","labels":{"app":"prometheus-node-exporter","app.kubernetes.io/managed-by":"Helm","chart":"prometheus-node-exporter-2.0.4","heritage":"Helm","jobLabel":"node-exporter","release":"prometheus"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{},"f:prometheus.io/scrape":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/managed-by":{},"f:chart":{},"f:heritage":{},"f:jobLabel":{},"f:release":{}}},"f:spec":{"f:ports":{".":{},"k:{\"port\":9100,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:selector":{".":{},"f:app":{},"f:release":{}},"f:sessionAffinity":{},"f:type":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14.000Z"}],"name":"prometheus-prometheus-node-exporter","namespace":"default","resourceVersion":"640378","uid":"1cf0b0df-1389-4588-b441-212059dc0ae7"},"spec":{"clusterIP":"10.103.135.179","clusterIPs":["10.103.135.179"],"ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"metrics","port":9100,"protocol":"TCP","targetPort":9100}],"selector":{"app":"prometheus-node-exporter","release":"prometheus"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}],"controllerrevisions":[{"metadata":{"name":"alertmanager-prometheus-kube-prometheus-alertmanager-7d9f5d6b98","namespace":"default","uid":"d9c805de-7aa8-4ffc-9cca-5fec80926a03","resourceVersion":"640458","creationTimestamp":"2021-10-25T16:45:16Z","labels":{"alertmanager":"prometheus-kube-prometheus-alertmanager","app":"alertmanager","app.kubernetes.io/instance":"prometheus-kube-prometheus-alertmanager","app.kubernetes.io/managed-by":"prometheus-operator","app.kubernetes.io/name":"alertmanager","app.kubernetes.io/version":"0.22.2","controller.kubernetes.io/hash":"7d9f5d6b98"},"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default","prometheus-operator-input-hash":"3421389386791464123"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"StatefulSet","name":"alertmanager-prometheus-kube-prometheus-alertmanager","uid":"922e5475-b429-4efe-87cc-f7054f338d1a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:data":{},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{},"f:prometheus-operator-input-hash":{}},"f:labels":{".":{},"f:alertmanager":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:controller.kubernetes.io/hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"922e5475-b429-4efe-87cc-f7054f338d1a\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:revision":{}}}]},"data":{"spec":{"template":{"$patch":"replace","metadata":{"annotations":{"kubectl.kubernetes.io/default-container":"alertmanager"},"creationTimestamp":null,"labels":{"alertmanager":"prometheus-kube-prometheus-alertmanager","app":"alertmanager","app.kubernetes.io/instance":"prometheus-kube-prometheus-alertmanager","app.kubernetes.io/managed-by":"prometheus-operator","app.kubernetes.io/name":"alertmanager","app.kubernetes.io/version":"0.22.2"}},"spec":{"containers":[{"args":["--config.file=/etc/alertmanager/config/alertmanager.yaml","--storage.path=/alertmanager","--data.retention=120h","--cluster.listen-address=","--web.listen-address=:9093","--web.external-url=http://prometheus-kube-prometheus-alertmanager.default:9093","--web.route-prefix=/","--cluster.peer=alertmanager-prometheus-kube-prometheus-alertmanager-0.alertmanager-operated:9094","--cluster.reconnect-timeout=5m"],"env":[{"name":"POD_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.podIP"}}}],"image":"quay.io/prometheus/alertmanager:v0.22.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":10,"httpGet":{"path":"/-/healthy","port":"web","scheme":"HTTP"},"periodSeconds":10,"successThreshold":1,"timeoutSeconds":3},"name":"alertmanager","ports":[{"containerPort":9093,"name":"web","protocol":"TCP"},{"containerPort":9094,"name":"mesh-tcp","protocol":"TCP"},{"containerPort":9094,"name":"mesh-udp","protocol":"UDP"}],"readinessProbe":{"failureThreshold":10,"httpGet":{"path":"/-/ready","port":"web","scheme":"HTTP"},"initialDelaySeconds":3,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":3},"resources":{"requests":{"memory":"200Mi"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/etc/alertmanager/config","name":"config-volume"},{"mountPath":"/etc/alertmanager/certs","name":"tls-assets","readOnly":true},{"mountPath":"/alertmanager","name":"alertmanager-prometheus-kube-prometheus-alertmanager-db"}]},{"args":["--listen-address=:8080","--reload-url=http://127.0.0.1:9093/-/reload","--watched-dir=/etc/alertmanager/config"],"command":["/bin/prometheus-config-reloader"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"SHARD","value":"-1"}],"image":"quay.io/prometheus-operator/prometheus-config-reloader:v0.50.0","imagePullPolicy":"IfNotPresent","name":"config-reloader","ports":[{"containerPort":8080,"name":"reloader-web","protocol":"TCP"}],"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"100m","memory":"50Mi"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/etc/alertmanager/config","name":"config-volume","readOnly":true}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":2000,"runAsGroup":2000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccount":"prometheus-kube-prometheus-alertmanager","serviceAccountName":"prometheus-kube-prometheus-alertmanager","terminationGracePeriodSeconds":120,"volumes":[{"name":"config-volume","secret":{"defaultMode":420,"secretName":"alertmanager-prometheus-kube-prometheus-alertmanager-generated"}},{"name":"tls-assets","secret":{"defaultMode":420,"secretName":"alertmanager-prometheus-kube-prometheus-alertmanager-tls-assets"}},{"emptyDir":{},"name":"alertmanager-prometheus-kube-prometheus-alertmanager-db"}]}}}},"revision":1},{"metadata":{"name":"prometheus-prometheus-kube-prometheus-prometheus-5895cc5f66","namespace":"default","uid":"488e6a2b-8089-43a2-83ec-1951ef0bb4c1","resourceVersion":"640472","creationTimestamp":"2021-10-25T16:45:16Z","labels":{"app":"prometheus","app.kubernetes.io/instance":"prometheus-kube-prometheus-prometheus","app.kubernetes.io/managed-by":"prometheus-operator","app.kubernetes.io/name":"prometheus","app.kubernetes.io/version":"2.28.1","controller.kubernetes.io/hash":"5895cc5f66","operator.prometheus.io/name":"prometheus-kube-prometheus-prometheus","operator.prometheus.io/shard":"0","prometheus":"prometheus-kube-prometheus-prometheus"},"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default","prometheus-operator-input-hash":"10399865897677920703"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"StatefulSet","name":"prometheus-prometheus-kube-prometheus-prometheus","uid":"09f3dc28-cec9-4e29-ac7d-9898b847f7f0","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:data":{},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{},"f:prometheus-operator-input-hash":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:controller.kubernetes.io/hash":{},"f:operator.prometheus.io/name":{},"f:operator.prometheus.io/shard":{},"f:prometheus":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"09f3dc28-cec9-4e29-ac7d-9898b847f7f0\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:revision":{}}}]},"data":{"spec":{"template":{"$patch":"replace","metadata":{"annotations":{"kubectl.kubernetes.io/default-container":"prometheus"},"creationTimestamp":null,"labels":{"app":"prometheus","app.kubernetes.io/instance":"prometheus-kube-prometheus-prometheus","app.kubernetes.io/managed-by":"prometheus-operator","app.kubernetes.io/name":"prometheus","app.kubernetes.io/version":"2.28.1","operator.prometheus.io/name":"prometheus-kube-prometheus-prometheus","operator.prometheus.io/shard":"0","prometheus":"prometheus-kube-prometheus-prometheus"}},"spec":{"containers":[{"args":["--web.console.templates=/etc/prometheus/consoles","--web.console.libraries=/etc/prometheus/console_libraries","--config.file=/etc/prometheus/config_out/prometheus.env.yaml","--storage.tsdb.path=/prometheus","--storage.tsdb.retention.time=10d","--web.enable-lifecycle","--web.external-url=http://prometheus-kube-prometheus-prometheus.default:9090","--web.route-prefix=/","--web.config.file=/etc/prometheus/web_config/web-config.yaml"],"image":"quay.io/prometheus/prometheus:v2.28.1","imagePullPolicy":"IfNotPresent","name":"prometheus","ports":[{"containerPort":9090,"name":"web","protocol":"TCP"}],"readinessProbe":{"failureThreshold":120,"httpGet":{"path":"/-/ready","port":"web","scheme":"HTTP"},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":3},"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/etc/prometheus/config_out","name":"config-out","readOnly":true},{"mountPath":"/etc/prometheus/certs","name":"tls-assets","readOnly":true},{"mountPath":"/prometheus","name":"prometheus-prometheus-kube-prometheus-prometheus-db"},{"mountPath":"/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0","name":"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"},{"mountPath":"/etc/prometheus/web_config/web-config.yaml","name":"web-config","readOnly":true,"subPath":"web-config.yaml"}]},{"args":["--listen-address=:8080","--reload-url=http://127.0.0.1:9090/-/reload","--config-file=/etc/prometheus/config/prometheus.yaml.gz","--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml","--watched-dir=/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"],"command":["/bin/prometheus-config-reloader"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"SHARD","value":"0"}],"image":"quay.io/prometheus-operator/prometheus-config-reloader:v0.50.0","imagePullPolicy":"IfNotPresent","name":"config-reloader","ports":[{"containerPort":8080,"name":"reloader-web","protocol":"TCP"}],"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"100m","memory":"50Mi"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/etc/prometheus/config","name":"config"},{"mountPath":"/etc/prometheus/config_out","name":"config-out"},{"mountPath":"/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0","name":"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"}]}],"dnsPolicy":"ClusterFirst","initContainers":[{"args":["--watch-interval=0","--listen-address=:8080","--config-file=/etc/prometheus/config/prometheus.yaml.gz","--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml","--watched-dir=/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"],"command":["/bin/prometheus-config-reloader"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"SHARD","value":"0"}],"image":"quay.io/prometheus-operator/prometheus-config-reloader:v0.50.0","imagePullPolicy":"IfNotPresent","name":"init-config-reloader","ports":[{"containerPort":8080,"name":"reloader-web","protocol":"TCP"}],"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"100m","memory":"50Mi"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/etc/prometheus/config","name":"config"},{"mountPath":"/etc/prometheus/config_out","name":"config-out"},{"mountPath":"/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0","name":"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"}]}],"restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":2000,"runAsGroup":2000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccount":"prometheus-kube-prometheus-prometheus","serviceAccountName":"prometheus-kube-prometheus-prometheus","terminationGracePeriodSeconds":600,"volumes":[{"name":"config","secret":{"defaultMode":420,"secretName":"prometheus-prometheus-kube-prometheus-prometheus"}},{"name":"tls-assets","secret":{"defaultMode":420,"secretName":"prometheus-prometheus-kube-prometheus-prometheus-tls-assets"}},{"emptyDir":{},"name":"config-out"},{"configMap":{"defaultMode":420,"name":"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"},"name":"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"},{"name":"web-config","secret":{"defaultMode":420,"secretName":"prometheus-prometheus-kube-prometheus-prometheus-web-config"}},{"emptyDir":{},"name":"prometheus-prometheus-kube-prometheus-prometheus-db"}]}}}},"revision":1},{"metadata":{"name":"prometheus-prometheus-node-exporter-5d5b9cc867","namespace":"default","uid":"2478c280-b7fc-40a4-9773-0479015cf378","resourceVersion":"640385","creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app":"prometheus-node-exporter","chart":"prometheus-node-exporter-2.0.4","controller-revision-hash":"5d5b9cc867","heritage":"Helm","jobLabel":"node-exporter","release":"prometheus"},"annotations":{"deprecated.daemonset.template.generation":"1","meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"prometheus-prometheus-node-exporter","uid":"c9db7057-2149-439a-b029-94ad90ad5a57","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:data":{},"f:metadata":{"f:annotations":{".":{},"f:deprecated.daemonset.template.generation":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:chart":{},"f:controller-revision-hash":{},"f:heritage":{},"f:jobLabel":{},"f:release":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c9db7057-2149-439a-b029-94ad90ad5a57\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:revision":{}}}]},"data":{"spec":{"template":{"$patch":"replace","metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/safe-to-evict":"true"},"creationTimestamp":null,"labels":{"app":"prometheus-node-exporter","chart":"prometheus-node-exporter-2.0.4","heritage":"Helm","jobLabel":"node-exporter","release":"prometheus"}},"spec":{"automountServiceAccountToken":false,"containers":[{"args":["--path.procfs=/host/proc","--path.sysfs=/host/sys","--path.rootfs=/host/root","--web.listen-address=$(HOST_IP):9100","--collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)","--collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$"],"env":[{"name":"HOST_IP","value":"0.0.0.0"}],"image":"quay.io/prometheus/node-exporter:v1.2.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/","port":9100,"scheme":"HTTP"},"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"node-exporter","ports":[{"containerPort":9100,"hostPort":9100,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/","port":9100,"scheme":"HTTP"},"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/host/proc","name":"proc","readOnly":true},{"mountPath":"/host/sys","name":"sys","readOnly":true},{"mountPath":"/host/root","mountPropagation":"HostToContainer","name":"root","readOnly":true}]}],"dnsPolicy":"ClusterFirst","hostNetwork":true,"hostPID":true,"restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":65534,"runAsGroup":65534,"runAsNonRoot":true,"runAsUser":65534},"serviceAccount":"prometheus-prometheus-node-exporter","serviceAccountName":"prometheus-prometheus-node-exporter","terminationGracePeriodSeconds":30,"tolerations":[{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/proc","type":""},"name":"proc"},{"hostPath":{"path":"/sys","type":""},"name":"sys"},{"hostPath":{"path":"/","type":""},"name":"root"}]}}}},"revision":1}],"deployments":[{"metadata":{"name":"prometheus-grafana","namespace":"default","uid":"284113a6-cd78-493b-8a1d-bac0461b9c82","resourceVersion":"640655","generation":1,"creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"8.2.1","helm.sh/chart":"grafana-6.17.2"},"annotations":{"deployment.kubernetes.io/revision":"1","meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"managedFields":[{"manager":"helm","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:helm.sh/chart":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:annotations":{".":{},"f:checksum/config":{},"f:checksum/dashboards-json-config":{},"f:checksum/sc-dashboard-provider-config":{},"f:checksum/secret":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/name":{}}},"f:spec":{"f:automountServiceAccountToken":{},"f:containers":{"k:{\"name\":\"grafana\"}":{".":{},"f:env":{".":{},"k:{\"name\":\"GF_PATHS_DATA\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"GF_PATHS_LOGS\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"GF_PATHS_PLUGINS\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"GF_PATHS_PROVISIONING\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"GF_SECURITY_ADMIN_PASSWORD\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"GF_SECURITY_ADMIN_USER\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}}},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}},"k:{\"containerPort\":3000,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}}},"f:readinessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/grafana/grafana.ini\"}":{".":{},"f:mountPath":{},"f:name":{},"f:subPath":{}},"k:{\"mountPath\":\"/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml\"}":{".":{},"f:mountPath":{},"f:name":{},"f:subPath":{}},"k:{\"mountPath\":\"/etc/grafana/provisioning/datasources\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/tmp/dashboards\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/var/lib/grafana\"}":{".":{},"f:mountPath":{},"f:name":{}}}},"k:{\"name\":\"grafana-sc-dashboard\"}":{".":{},"f:env":{".":{},"k:{\"name\":\"FOLDER\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"LABEL\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"METHOD\"}":{".":{},"f:name":{}},"k:{\"name\":\"RESOURCE\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/tmp/dashboards\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:initContainers":{".":{},"k:{\"name\":\"grafana-sc-datasources\"}":{".":{},"f:env":{".":{},"k:{\"name\":\"FOLDER\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"LABEL\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"METHOD\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"RESOURCE\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/grafana/provisioning/datasources\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsUser":{}},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{".":{},"k:{\"name\":\"config\"}":{".":{},"f:configMap":{".":{},"f:defaultMode":{},"f:name":{}},"f:name":{}},"k:{\"name\":\"sc-dashboard-provider\"}":{".":{},"f:configMap":{".":{},"f:defaultMode":{},"f:name":{}},"f:name":{}},"k:{\"name\":\"sc-dashboard-volume\"}":{".":{},"f:emptyDir":{},"f:name":{}},"k:{\"name\":\"sc-datasources-volume\"}":{".":{},"f:emptyDir":{},"f:name":{}},"k:{\"name\":\"storage\"}":{".":{},"f:emptyDir":{},"f:name":{}}}}}}}},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:24Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}}}]},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"grafana"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"grafana"},"annotations":{"checksum/config":"2d804b3331b364dea4f819584648fb6316da81f7238d51f843896a943449380a","checksum/dashboards-json-config":"01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b","checksum/sc-dashboard-provider-config":"70927a62f8753b5f6e5e79def2ec97b005da541acd319124209a88d8e24e40cb","checksum/secret":"1bd09f0f39a7b6da53f204c68b52ca77fcc2ad15e970a18c5c62fac0a48505fa"}},"spec":{"volumes":[{"name":"config","configMap":{"name":"prometheus-grafana","defaultMode":420}},{"name":"storage","emptyDir":{}},{"name":"sc-dashboard-volume","emptyDir":{}},{"name":"sc-dashboard-provider","configMap":{"name":"prometheus-grafana-config-dashboards","defaultMode":420}},{"name":"sc-datasources-volume","emptyDir":{}}],"initContainers":[{"name":"grafana-sc-datasources","image":"quay.io/kiwigrid/k8s-sidecar:1.14.2","env":[{"name":"METHOD","value":"LIST"},{"name":"LABEL","value":"grafana_datasource"},{"name":"FOLDER","value":"/etc/grafana/provisioning/datasources"},{"name":"RESOURCE","value":"both"}],"resources":{},"volumeMounts":[{"name":"sc-datasources-volume","mountPath":"/etc/grafana/provisioning/datasources"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"containers":[{"name":"grafana-sc-dashboard","image":"quay.io/kiwigrid/k8s-sidecar:1.14.2","env":[{"name":"METHOD"},{"name":"LABEL","value":"grafana_dashboard"},{"name":"FOLDER","value":"/tmp/dashboards"},{"name":"RESOURCE","value":"both"}],"resources":{},"volumeMounts":[{"name":"sc-dashboard-volume","mountPath":"/tmp/dashboards"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"},{"name":"grafana","image":"grafana/grafana:8.2.1","ports":[{"name":"service","containerPort":80,"protocol":"TCP"},{"name":"grafana","containerPort":3000,"protocol":"TCP"}],"env":[{"name":"GF_SECURITY_ADMIN_USER","valueFrom":{"secretKeyRef":{"name":"prometheus-grafana","key":"admin-user"}}},{"name":"GF_SECURITY_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"name":"prometheus-grafana","key":"admin-password"}}},{"name":"GF_PATHS_DATA","value":"/var/lib/grafana/"},{"name":"GF_PATHS_LOGS","value":"/var/log/grafana"},{"name":"GF_PATHS_PLUGINS","value":"/var/lib/grafana/plugins"},{"name":"GF_PATHS_PROVISIONING","value":"/etc/grafana/provisioning"}],"resources":{},"volumeMounts":[{"name":"config","mountPath":"/etc/grafana/grafana.ini","subPath":"grafana.ini"},{"name":"storage","mountPath":"/var/lib/grafana"},{"name":"sc-dashboard-volume","mountPath":"/tmp/dashboards"},{"name":"sc-dashboard-provider","mountPath":"/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml","subPath":"provider.yaml"},{"name":"sc-datasources-volume","mountPath":"/etc/grafana/provisioning/datasources"}],"livenessProbe":{"httpGet":{"path":"/api/health","port":3000,"scheme":"HTTP"},"initialDelaySeconds":60,"timeoutSeconds":30,"periodSeconds":10,"successThreshold":1,"failureThreshold":10},"readinessProbe":{"httpGet":{"path":"/api/health","port":3000,"scheme":"HTTP"},"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"prometheus-grafana","serviceAccount":"prometheus-grafana","automountServiceAccountToken":true,"securityContext":{"runAsUser":472,"runAsGroup":472,"fsGroup":472},"schedulerName":"default-scheduler","enableServiceLinks":true}},"strategy":{"type":"RollingUpdate","rollingUpdate":{"maxUnavailable":"25%","maxSurge":"25%"}},"revisionHistoryLimit":10,"progressDeadlineSeconds":600},"status":{"observedGeneration":1,"replicas":1,"updatedReplicas":1,"readyReplicas":1,"availableReplicas":1,"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2021-10-25T16:45:24Z","lastTransitionTime":"2021-10-25T16:45:24Z","reason":"MinimumReplicasAvailable","message":"Deployment has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2021-10-25T16:45:24Z","lastTransitionTime":"2021-10-25T16:45:14Z","reason":"NewReplicaSetAvailable","message":"ReplicaSet \"prometheus-grafana-5b96fb5467\" has successfully progressed."}]}},{"metadata":{"name":"prometheus-kube-prometheus-operator","namespace":"default","uid":"2f6e336a-d861-46cb-932a-5a031a8ad7b9","resourceVersion":"640546","generation":1,"creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app":"kube-prometheus-stack-operator","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"annotations":{"deployment.kubernetes.io/revision":"1","meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"managedFields":[{"manager":"helm","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"kube-prometheus-stack\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":10250,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{".":{},"f:allowPrivilegeEscalation":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/cert\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}}}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsNonRoot":{},"f:runAsUser":{}},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{".":{},"k:{\"name\":\"tls-secret\"}":{".":{},"f:name":{},"f:secret":{".":{},"f:defaultMode":{},"f:secretName":{}}}}}}}}},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:17Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}}}]},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"kube-prometheus-stack-operator","release":"prometheus"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"kube-prometheus-stack-operator","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"}},"spec":{"volumes":[{"name":"tls-secret","secret":{"secretName":"prometheus-kube-prometheus-admission","defaultMode":420}}],"containers":[{"name":"kube-prometheus-stack","image":"quay.io/prometheus-operator/prometheus-operator:v0.50.0","args":["--kubelet-service=kube-system/prometheus-kube-prometheus-kubelet","--localhost=127.0.0.1","--prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.50.0","--config-reloader-cpu-request=100m","--config-reloader-cpu-limit=100m","--config-reloader-memory-request=50Mi","--config-reloader-memory-limit=50Mi","--thanos-default-base-image=quay.io/thanos/thanos:v0.17.2","--web.enable-tls=true","--web.cert-file=/cert/cert","--web.key-file=/cert/key","--web.listen-address=:10250","--web.tls-min-version=VersionTLS13"],"ports":[{"name":"https","containerPort":10250,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"tls-secret","readOnly":true,"mountPath":"/cert"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"readOnlyRootFilesystem":true,"allowPrivilegeEscalation":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"prometheus-kube-prometheus-operator","serviceAccount":"prometheus-kube-prometheus-operator","securityContext":{"runAsUser":65534,"runAsGroup":65534,"runAsNonRoot":true,"fsGroup":65534},"schedulerName":"default-scheduler"}},"strategy":{"type":"RollingUpdate","rollingUpdate":{"maxUnavailable":"25%","maxSurge":"25%"}},"revisionHistoryLimit":10,"progressDeadlineSeconds":600},"status":{"observedGeneration":1,"replicas":1,"updatedReplicas":1,"readyReplicas":1,"availableReplicas":1,"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2021-10-25T16:45:17Z","lastTransitionTime":"2021-10-25T16:45:17Z","reason":"MinimumReplicasAvailable","message":"Deployment has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2021-10-25T16:45:17Z","lastTransitionTime":"2021-10-25T16:45:14Z","reason":"NewReplicaSetAvailable","message":"ReplicaSet \"prometheus-kube-prometheus-operator-bcdfdbc79\" has successfully progressed."}]}},{"metadata":{"name":"prometheus-kube-state-metrics","namespace":"default","uid":"3b45ecee-526b-4d31-ab44-0ac8d038315b","resourceVersion":"640650","generation":1,"creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"kube-state-metrics","app.kubernetes.io/version":"2.2.0","helm.sh/chart":"kube-state-metrics-3.5.2"},"annotations":{"deployment.kubernetes.io/revision":"1","meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"managedFields":[{"manager":"helm","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:helm.sh/chart":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"kube-state-metrics\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":8080,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:readinessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsUser":{}},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{}}}}}},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:24Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}}}]},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/name":"kube-state-metrics"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"kube-state-metrics"}},"spec":{"containers":[{"name":"kube-state-metrics","image":"k8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.2.0","args":["--port=8080","--resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments","--telemetry-port=8081"],"ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"livenessProbe":{"httpGet":{"path":"/healthz","port":8080,"scheme":"HTTP"},"initialDelaySeconds":5,"timeoutSeconds":5,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":5,"timeoutSeconds":5,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"prometheus-kube-state-metrics","serviceAccount":"prometheus-kube-state-metrics","securityContext":{"runAsUser":65534,"runAsGroup":65534,"fsGroup":65534},"schedulerName":"default-scheduler"}},"strategy":{"type":"RollingUpdate","rollingUpdate":{"maxUnavailable":"25%","maxSurge":"25%"}},"revisionHistoryLimit":10,"progressDeadlineSeconds":600},"status":{"observedGeneration":1,"replicas":1,"updatedReplicas":1,"readyReplicas":1,"availableReplicas":1,"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2021-10-25T16:45:24Z","lastTransitionTime":"2021-10-25T16:45:24Z","reason":"MinimumReplicasAvailable","message":"Deployment has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2021-10-25T16:45:24Z","lastTransitionTime":"2021-10-25T16:45:14Z","reason":"NewReplicaSetAvailable","message":"ReplicaSet \"prometheus-kube-state-metrics-58c5cd6ddb\" has successfully progressed."}]}}],"daemonsets":[{"metadata":{"name":"prometheus-prometheus-node-exporter","namespace":"default","uid":"c9db7057-2149-439a-b029-94ad90ad5a57","resourceVersion":"640391","generation":1,"creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app":"prometheus-node-exporter","app.kubernetes.io/managed-by":"Helm","chart":"prometheus-node-exporter-2.0.4","heritage":"Helm","jobLabel":"node-exporter","release":"prometheus"},"annotations":{"deprecated.daemonset.template.generation":"1","meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"managedFields":[{"manager":"helm","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:deprecated.daemonset.template.generation":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/managed-by":{},"f:chart":{},"f:heritage":{},"f:jobLabel":{},"f:release":{}}},"f:spec":{"f:revisionHistoryLimit":{},"f:selector":{},"f:template":{"f:metadata":{"f:annotations":{".":{},"f:cluster-autoscaler.kubernetes.io/safe-to-evict":{}},"f:labels":{".":{},"f:app":{},"f:chart":{},"f:heritage":{},"f:jobLabel":{},"f:release":{}}},"f:spec":{"f:automountServiceAccountToken":{},"f:containers":{"k:{\"name\":\"node-exporter\"}":{".":{},"f:args":{},"f:env":{".":{},"k:{\"name\":\"HOST_IP\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9100,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:hostPort":{},"f:name":{},"f:protocol":{}}},"f:readinessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/host/proc\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/host/root\"}":{".":{},"f:mountPath":{},"f:mountPropagation":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/host/sys\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}}}}},"f:dnsPolicy":{},"f:hostNetwork":{},"f:hostPID":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsNonRoot":{},"f:runAsUser":{}},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{},"f:volumes":{".":{},"k:{\"name\":\"proc\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"root\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"sys\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}}}}},"f:updateStrategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}}}}},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:currentNumberScheduled":{},"f:desiredNumberScheduled":{},"f:numberUnavailable":{},"f:observedGeneration":{},"f:updatedNumberScheduled":{}}}}]},"spec":{"selector":{"matchLabels":{"app":"prometheus-node-exporter","release":"prometheus"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"prometheus-node-exporter","chart":"prometheus-node-exporter-2.0.4","heritage":"Helm","jobLabel":"node-exporter","release":"prometheus"},"annotations":{"cluster-autoscaler.kubernetes.io/safe-to-evict":"true"}},"spec":{"volumes":[{"name":"proc","hostPath":{"path":"/proc","type":""}},{"name":"sys","hostPath":{"path":"/sys","type":""}},{"name":"root","hostPath":{"path":"/","type":""}}],"containers":[{"name":"node-exporter","image":"quay.io/prometheus/node-exporter:v1.2.2","args":["--path.procfs=/host/proc","--path.sysfs=/host/sys","--path.rootfs=/host/root","--web.listen-address=$(HOST_IP):9100","--collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)","--collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$"],"ports":[{"name":"metrics","hostPort":9100,"containerPort":9100,"protocol":"TCP"}],"env":[{"name":"HOST_IP","value":"0.0.0.0"}],"resources":{},"volumeMounts":[{"name":"proc","readOnly":true,"mountPath":"/host/proc"},{"name":"sys","readOnly":true,"mountPath":"/host/sys"},{"name":"root","readOnly":true,"mountPath":"/host/root","mountPropagation":"HostToContainer"}],"livenessProbe":{"httpGet":{"path":"/","port":9100,"scheme":"HTTP"},"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":9100,"scheme":"HTTP"},"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"prometheus-prometheus-node-exporter","serviceAccount":"prometheus-prometheus-node-exporter","automountServiceAccountToken":false,"hostNetwork":true,"hostPID":true,"securityContext":{"runAsUser":65534,"runAsGroup":65534,"runAsNonRoot":true,"fsGroup":65534},"schedulerName":"default-scheduler","tolerations":[{"operator":"Exists","effect":"NoSchedule"}]}},"updateStrategy":{"type":"RollingUpdate","rollingUpdate":{"maxUnavailable":1,"maxSurge":0}},"revisionHistoryLimit":10},"status":{"currentNumberScheduled":1,"numberMisscheduled":0,"desiredNumberScheduled":1,"numberReady":0,"observedGeneration":1,"updatedNumberScheduled":1,"numberUnavailable":1}}],"replicasets":[{"metadata":{"name":"prometheus-grafana-5b96fb5467","namespace":"default","uid":"056b0067-386d-44d7-8e40-dd8fb463dac3","resourceVersion":"640654","generation":1,"creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"grafana","pod-template-hash":"5b96fb5467"},"annotations":{"deployment.kubernetes.io/desired-replicas":"1","deployment.kubernetes.io/max-replicas":"2","deployment.kubernetes.io/revision":"1","meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"Deployment","name":"prometheus-grafana","uid":"284113a6-cd78-493b-8a1d-bac0461b9c82","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:24Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"284113a6-cd78-493b-8a1d-bac0461b9c82\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:annotations":{".":{},"f:checksum/config":{},"f:checksum/dashboards-json-config":{},"f:checksum/sc-dashboard-provider-config":{},"f:checksum/secret":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/name":{},"f:pod-template-hash":{}}},"f:spec":{"f:automountServiceAccountToken":{},"f:containers":{"k:{\"name\":\"grafana\"}":{".":{},"f:env":{".":{},"k:{\"name\":\"GF_PATHS_DATA\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"GF_PATHS_LOGS\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"GF_PATHS_PLUGINS\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"GF_PATHS_PROVISIONING\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"GF_SECURITY_ADMIN_PASSWORD\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"GF_SECURITY_ADMIN_USER\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}}},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}},"k:{\"containerPort\":3000,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}}},"f:readinessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/grafana/grafana.ini\"}":{".":{},"f:mountPath":{},"f:name":{},"f:subPath":{}},"k:{\"mountPath\":\"/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml\"}":{".":{},"f:mountPath":{},"f:name":{},"f:subPath":{}},"k:{\"mountPath\":\"/etc/grafana/provisioning/datasources\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/tmp/dashboards\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/var/lib/grafana\"}":{".":{},"f:mountPath":{},"f:name":{}}}},"k:{\"name\":\"grafana-sc-dashboard\"}":{".":{},"f:env":{".":{},"k:{\"name\":\"FOLDER\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"LABEL\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"METHOD\"}":{".":{},"f:name":{}},"k:{\"name\":\"RESOURCE\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/tmp/dashboards\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:initContainers":{".":{},"k:{\"name\":\"grafana-sc-datasources\"}":{".":{},"f:env":{".":{},"k:{\"name\":\"FOLDER\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"LABEL\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"METHOD\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"RESOURCE\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/grafana/provisioning/datasources\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsUser":{}},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{".":{},"k:{\"name\":\"config\"}":{".":{},"f:configMap":{".":{},"f:defaultMode":{},"f:name":{}},"f:name":{}},"k:{\"name\":\"sc-dashboard-provider\"}":{".":{},"f:configMap":{".":{},"f:defaultMode":{},"f:name":{}},"f:name":{}},"k:{\"name\":\"sc-dashboard-volume\"}":{".":{},"f:emptyDir":{},"f:name":{}},"k:{\"name\":\"sc-datasources-volume\"}":{".":{},"f:emptyDir":{},"f:name":{}},"k:{\"name\":\"storage\"}":{".":{},"f:emptyDir":{},"f:name":{}}}}}},"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}}}]},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"grafana","pod-template-hash":"5b96fb5467"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"grafana","pod-template-hash":"5b96fb5467"},"annotations":{"checksum/config":"2d804b3331b364dea4f819584648fb6316da81f7238d51f843896a943449380a","checksum/dashboards-json-config":"01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b","checksum/sc-dashboard-provider-config":"70927a62f8753b5f6e5e79def2ec97b005da541acd319124209a88d8e24e40cb","checksum/secret":"1bd09f0f39a7b6da53f204c68b52ca77fcc2ad15e970a18c5c62fac0a48505fa"}},"spec":{"volumes":[{"name":"config","configMap":{"name":"prometheus-grafana","defaultMode":420}},{"name":"storage","emptyDir":{}},{"name":"sc-dashboard-volume","emptyDir":{}},{"name":"sc-dashboard-provider","configMap":{"name":"prometheus-grafana-config-dashboards","defaultMode":420}},{"name":"sc-datasources-volume","emptyDir":{}}],"initContainers":[{"name":"grafana-sc-datasources","image":"quay.io/kiwigrid/k8s-sidecar:1.14.2","env":[{"name":"METHOD","value":"LIST"},{"name":"LABEL","value":"grafana_datasource"},{"name":"FOLDER","value":"/etc/grafana/provisioning/datasources"},{"name":"RESOURCE","value":"both"}],"resources":{},"volumeMounts":[{"name":"sc-datasources-volume","mountPath":"/etc/grafana/provisioning/datasources"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"containers":[{"name":"grafana-sc-dashboard","image":"quay.io/kiwigrid/k8s-sidecar:1.14.2","env":[{"name":"METHOD"},{"name":"LABEL","value":"grafana_dashboard"},{"name":"FOLDER","value":"/tmp/dashboards"},{"name":"RESOURCE","value":"both"}],"resources":{},"volumeMounts":[{"name":"sc-dashboard-volume","mountPath":"/tmp/dashboards"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"},{"name":"grafana","image":"grafana/grafana:8.2.1","ports":[{"name":"service","containerPort":80,"protocol":"TCP"},{"name":"grafana","containerPort":3000,"protocol":"TCP"}],"env":[{"name":"GF_SECURITY_ADMIN_USER","valueFrom":{"secretKeyRef":{"name":"prometheus-grafana","key":"admin-user"}}},{"name":"GF_SECURITY_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"name":"prometheus-grafana","key":"admin-password"}}},{"name":"GF_PATHS_DATA","value":"/var/lib/grafana/"},{"name":"GF_PATHS_LOGS","value":"/var/log/grafana"},{"name":"GF_PATHS_PLUGINS","value":"/var/lib/grafana/plugins"},{"name":"GF_PATHS_PROVISIONING","value":"/etc/grafana/provisioning"}],"resources":{},"volumeMounts":[{"name":"config","mountPath":"/etc/grafana/grafana.ini","subPath":"grafana.ini"},{"name":"storage","mountPath":"/var/lib/grafana"},{"name":"sc-dashboard-volume","mountPath":"/tmp/dashboards"},{"name":"sc-dashboard-provider","mountPath":"/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml","subPath":"provider.yaml"},{"name":"sc-datasources-volume","mountPath":"/etc/grafana/provisioning/datasources"}],"livenessProbe":{"httpGet":{"path":"/api/health","port":3000,"scheme":"HTTP"},"initialDelaySeconds":60,"timeoutSeconds":30,"periodSeconds":10,"successThreshold":1,"failureThreshold":10},"readinessProbe":{"httpGet":{"path":"/api/health","port":3000,"scheme":"HTTP"},"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"prometheus-grafana","serviceAccount":"prometheus-grafana","automountServiceAccountToken":true,"securityContext":{"runAsUser":472,"runAsGroup":472,"fsGroup":472},"schedulerName":"default-scheduler","enableServiceLinks":true}}},"status":{"replicas":1,"fullyLabeledReplicas":1,"readyReplicas":1,"availableReplicas":1,"observedGeneration":1}},{"metadata":{"name":"prometheus-kube-prometheus-operator-bcdfdbc79","namespace":"default","uid":"7f62e24c-64f0-48f5-91fb-b504502d2201","resourceVersion":"640545","generation":1,"creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app":"kube-prometheus-stack-operator","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","pod-template-hash":"bcdfdbc79","release":"prometheus"},"annotations":{"deployment.kubernetes.io/desired-replicas":"1","deployment.kubernetes.io/max-replicas":"2","deployment.kubernetes.io/revision":"1","meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"Deployment","name":"prometheus-kube-prometheus-operator","uid":"2f6e336a-d861-46cb-932a-5a031a8ad7b9","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:17Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:pod-template-hash":{},"f:release":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2f6e336a-d861-46cb-932a-5a031a8ad7b9\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:pod-template-hash":{},"f:release":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"kube-prometheus-stack\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":10250,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{".":{},"f:allowPrivilegeEscalation":{},"f:readOnlyRootFilesystem":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/cert\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}}}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsNonRoot":{},"f:runAsUser":{}},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{".":{},"k:{\"name\":\"tls-secret\"}":{".":{},"f:name":{},"f:secret":{".":{},"f:defaultMode":{},"f:secretName":{}}}}}}},"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}}}]},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"kube-prometheus-stack-operator","pod-template-hash":"bcdfdbc79","release":"prometheus"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"kube-prometheus-stack-operator","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","pod-template-hash":"bcdfdbc79","release":"prometheus"}},"spec":{"volumes":[{"name":"tls-secret","secret":{"secretName":"prometheus-kube-prometheus-admission","defaultMode":420}}],"containers":[{"name":"kube-prometheus-stack","image":"quay.io/prometheus-operator/prometheus-operator:v0.50.0","args":["--kubelet-service=kube-system/prometheus-kube-prometheus-kubelet","--localhost=127.0.0.1","--prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.50.0","--config-reloader-cpu-request=100m","--config-reloader-cpu-limit=100m","--config-reloader-memory-request=50Mi","--config-reloader-memory-limit=50Mi","--thanos-default-base-image=quay.io/thanos/thanos:v0.17.2","--web.enable-tls=true","--web.cert-file=/cert/cert","--web.key-file=/cert/key","--web.listen-address=:10250","--web.tls-min-version=VersionTLS13"],"ports":[{"name":"https","containerPort":10250,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"tls-secret","readOnly":true,"mountPath":"/cert"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"readOnlyRootFilesystem":true,"allowPrivilegeEscalation":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"prometheus-kube-prometheus-operator","serviceAccount":"prometheus-kube-prometheus-operator","securityContext":{"runAsUser":65534,"runAsGroup":65534,"runAsNonRoot":true,"fsGroup":65534},"schedulerName":"default-scheduler"}}},"status":{"replicas":1,"fullyLabeledReplicas":1,"readyReplicas":1,"availableReplicas":1,"observedGeneration":1}},{"metadata":{"name":"prometheus-kube-state-metrics-58c5cd6ddb","namespace":"default","uid":"28a70b3b-f156-4d5c-bdc7-5f8188c4766c","resourceVersion":"640647","generation":1,"creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"kube-state-metrics","pod-template-hash":"58c5cd6ddb"},"annotations":{"deployment.kubernetes.io/desired-replicas":"1","deployment.kubernetes.io/max-replicas":"2","deployment.kubernetes.io/revision":"1","meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"Deployment","name":"prometheus-kube-state-metrics","uid":"3b45ecee-526b-4d31-ab44-0ac8d038315b","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:24Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3b45ecee-526b-4d31-ab44-0ac8d038315b\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"kube-state-metrics\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":8080,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:readinessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsUser":{}},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{}}}},"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}}}]},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/name":"kube-state-metrics","pod-template-hash":"58c5cd6ddb"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"kube-state-metrics","pod-template-hash":"58c5cd6ddb"}},"spec":{"containers":[{"name":"kube-state-metrics","image":"k8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.2.0","args":["--port=8080","--resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments","--telemetry-port=8081"],"ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"livenessProbe":{"httpGet":{"path":"/healthz","port":8080,"scheme":"HTTP"},"initialDelaySeconds":5,"timeoutSeconds":5,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":5,"timeoutSeconds":5,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"prometheus-kube-state-metrics","serviceAccount":"prometheus-kube-state-metrics","securityContext":{"runAsUser":65534,"runAsGroup":65534,"fsGroup":65534},"schedulerName":"default-scheduler"}}},"status":{"replicas":1,"fullyLabeledReplicas":1,"readyReplicas":1,"availableReplicas":1,"observedGeneration":1}}],"statefulsets":[{"metadata":{"name":"alertmanager-prometheus-kube-prometheus-alertmanager","namespace":"default","uid":"922e5475-b429-4efe-87cc-f7054f338d1a","resourceVersion":"640666","generation":1,"creationTimestamp":"2021-10-25T16:45:16Z","labels":{"app":"kube-prometheus-stack-alertmanager","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default","prometheus-operator-input-hash":"3421389386791464123"},"ownerReferences":[{"apiVersion":"monitoring.coreos.com/v1","kind":"Alertmanager","name":"prometheus-kube-prometheus-alertmanager","uid":"b1da6691-468b-44db-88c2-3fc3f3d582e1","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"operator","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{},"f:prometheus-operator-input-hash":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b1da6691-468b-44db-88c2-3fc3f3d582e1\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:spec":{"f:podManagementPolicy":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:serviceName":{},"f:template":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/default-container":{}},"f:labels":{".":{},"f:alertmanager":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"alertmanager\"}":{".":{},"f:args":{},"f:env":{".":{},"k:{\"name\":\"POD_IP\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:fieldRef":{".":{},"f:apiVersion":{},"f:fieldPath":{}}}}},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9093,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}},"k:{\"containerPort\":9094,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}},"k:{\"containerPort\":9094,\"protocol\":\"UDP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}}},"f:readinessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{".":{},"f:requests":{".":{},"f:memory":{}}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/alertmanager\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/etc/alertmanager/certs\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/etc/alertmanager/config\"}":{".":{},"f:mountPath":{},"f:name":{}}}},"k:{\"name\":\"config-reloader\"}":{".":{},"f:args":{},"f:command":{},"f:env":{".":{},"k:{\"name\":\"POD_NAME\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:fieldRef":{".":{},"f:apiVersion":{},"f:fieldPath":{}}}},"k:{\"name\":\"SHARD\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":8080,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}}},"f:resources":{".":{},"f:limits":{".":{},"f:cpu":{},"f:memory":{}},"f:requests":{".":{},"f:cpu":{},"f:memory":{}}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/alertmanager/config\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}}}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsNonRoot":{},"f:runAsUser":{}},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{".":{},"k:{\"name\":\"alertmanager-prometheus-kube-prometheus-alertmanager-db\"}":{".":{},"f:emptyDir":{},"f:name":{}},"k:{\"name\":\"config-volume\"}":{".":{},"f:name":{},"f:secret":{".":{},"f:defaultMode":{},"f:secretName":{}}},"k:{\"name\":\"tls-assets\"}":{".":{},"f:name":{},"f:secret":{".":{},"f:defaultMode":{},"f:secretName":{}}}}}},"f:updateStrategy":{"f:type":{}}}}},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:collisionCount":{},"f:currentReplicas":{},"f:currentRevision":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updateRevision":{},"f:updatedReplicas":{}}}}]},"spec":{"replicas":1,"selector":{"matchLabels":{"alertmanager":"prometheus-kube-prometheus-alertmanager","app":"alertmanager","app.kubernetes.io/instance":"prometheus-kube-prometheus-alertmanager","app.kubernetes.io/managed-by":"prometheus-operator","app.kubernetes.io/name":"alertmanager"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"alertmanager":"prometheus-kube-prometheus-alertmanager","app":"alertmanager","app.kubernetes.io/instance":"prometheus-kube-prometheus-alertmanager","app.kubernetes.io/managed-by":"prometheus-operator","app.kubernetes.io/name":"alertmanager","app.kubernetes.io/version":"0.22.2"},"annotations":{"kubectl.kubernetes.io/default-container":"alertmanager"}},"spec":{"volumes":[{"name":"config-volume","secret":{"secretName":"alertmanager-prometheus-kube-prometheus-alertmanager-generated","defaultMode":420}},{"name":"tls-assets","secret":{"secretName":"alertmanager-prometheus-kube-prometheus-alertmanager-tls-assets","defaultMode":420}},{"name":"alertmanager-prometheus-kube-prometheus-alertmanager-db","emptyDir":{}}],"containers":[{"name":"alertmanager","image":"quay.io/prometheus/alertmanager:v0.22.2","args":["--config.file=/etc/alertmanager/config/alertmanager.yaml","--storage.path=/alertmanager","--data.retention=120h","--cluster.listen-address=","--web.listen-address=:9093","--web.external-url=http://prometheus-kube-prometheus-alertmanager.default:9093","--web.route-prefix=/","--cluster.peer=alertmanager-prometheus-kube-prometheus-alertmanager-0.alertmanager-operated:9094","--cluster.reconnect-timeout=5m"],"ports":[{"name":"web","containerPort":9093,"protocol":"TCP"},{"name":"mesh-tcp","containerPort":9094,"protocol":"TCP"},{"name":"mesh-udp","containerPort":9094,"protocol":"UDP"}],"env":[{"name":"POD_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.podIP"}}}],"resources":{"requests":{"memory":"200Mi"}},"volumeMounts":[{"name":"config-volume","mountPath":"/etc/alertmanager/config"},{"name":"tls-assets","readOnly":true,"mountPath":"/etc/alertmanager/certs"},{"name":"alertmanager-prometheus-kube-prometheus-alertmanager-db","mountPath":"/alertmanager"}],"livenessProbe":{"httpGet":{"path":"/-/healthy","port":"web","scheme":"HTTP"},"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":10},"readinessProbe":{"httpGet":{"path":"/-/ready","port":"web","scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3,"periodSeconds":5,"successThreshold":1,"failureThreshold":10},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent"},{"name":"config-reloader","image":"quay.io/prometheus-operator/prometheus-config-reloader:v0.50.0","command":["/bin/prometheus-config-reloader"],"args":["--listen-address=:8080","--reload-url=http://127.0.0.1:9093/-/reload","--watched-dir=/etc/alertmanager/config"],"ports":[{"name":"reloader-web","containerPort":8080,"protocol":"TCP"}],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"SHARD","value":"-1"}],"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"100m","memory":"50Mi"}},"volumeMounts":[{"name":"config-volume","readOnly":true,"mountPath":"/etc/alertmanager/config"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":120,"dnsPolicy":"ClusterFirst","serviceAccountName":"prometheus-kube-prometheus-alertmanager","serviceAccount":"prometheus-kube-prometheus-alertmanager","securityContext":{"runAsUser":1000,"runAsGroup":2000,"runAsNonRoot":true,"fsGroup":2000},"schedulerName":"default-scheduler"}},"serviceName":"alertmanager-operated","podManagementPolicy":"Parallel","updateStrategy":{"type":"RollingUpdate"},"revisionHistoryLimit":10},"status":{"observedGeneration":1,"replicas":1,"readyReplicas":1,"currentReplicas":1,"updatedReplicas":1,"currentRevision":"alertmanager-prometheus-kube-prometheus-alertmanager-7d9f5d6b98","updateRevision":"alertmanager-prometheus-kube-prometheus-alertmanager-7d9f5d6b98","collisionCount":0}},{"metadata":{"name":"prometheus-prometheus-kube-prometheus-prometheus","namespace":"default","uid":"09f3dc28-cec9-4e29-ac7d-9898b847f7f0","resourceVersion":"640624","generation":1,"creationTimestamp":"2021-10-25T16:45:16Z","labels":{"app":"kube-prometheus-stack-prometheus","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","operator.prometheus.io/name":"prometheus-kube-prometheus-prometheus","operator.prometheus.io/shard":"0","release":"prometheus"},"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default","prometheus-operator-input-hash":"3371943182244153455"},"ownerReferences":[{"apiVersion":"monitoring.coreos.com/v1","kind":"Prometheus","name":"prometheus-kube-prometheus-prometheus","uid":"c424c4cd-4cc8-4031-863b-1d1ca12111f7","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"operator","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{},"f:prometheus-operator-input-hash":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:operator.prometheus.io/name":{},"f:operator.prometheus.io/shard":{},"f:release":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c424c4cd-4cc8-4031-863b-1d1ca12111f7\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:spec":{"f:podManagementPolicy":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:serviceName":{},"f:template":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/default-container":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:operator.prometheus.io/name":{},"f:operator.prometheus.io/shard":{},"f:prometheus":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"config-reloader\"}":{".":{},"f:args":{},"f:command":{},"f:env":{".":{},"k:{\"name\":\"POD_NAME\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:fieldRef":{".":{},"f:apiVersion":{},"f:fieldPath":{}}}},"k:{\"name\":\"SHARD\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":8080,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}}},"f:resources":{".":{},"f:limits":{".":{},"f:cpu":{},"f:memory":{}},"f:requests":{".":{},"f:cpu":{},"f:memory":{}}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/prometheus/config\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/etc/prometheus/config_out\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0\"}":{".":{},"f:mountPath":{},"f:name":{}}}},"k:{\"name\":\"prometheus\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9090,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}}},"f:readinessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/prometheus/certs\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/etc/prometheus/config_out\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/etc/prometheus/web_config/web-config.yaml\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{},"f:subPath":{}},"k:{\"mountPath\":\"/prometheus\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:dnsPolicy":{},"f:initContainers":{".":{},"k:{\"name\":\"init-config-reloader\"}":{".":{},"f:args":{},"f:command":{},"f:env":{".":{},"k:{\"name\":\"POD_NAME\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:fieldRef":{".":{},"f:apiVersion":{},"f:fieldPath":{}}}},"k:{\"name\":\"SHARD\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":8080,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:name":{},"f:protocol":{}}},"f:resources":{".":{},"f:limits":{".":{},"f:cpu":{},"f:memory":{}},"f:requests":{".":{},"f:cpu":{},"f:memory":{}}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/prometheus/config\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/etc/prometheus/config_out\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsNonRoot":{},"f:runAsUser":{}},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{".":{},"k:{\"name\":\"config\"}":{".":{},"f:name":{},"f:secret":{".":{},"f:defaultMode":{},"f:secretName":{}}},"k:{\"name\":\"config-out\"}":{".":{},"f:emptyDir":{},"f:name":{}},"k:{\"name\":\"prometheus-prometheus-kube-prometheus-prometheus-db\"}":{".":{},"f:emptyDir":{},"f:name":{}},"k:{\"name\":\"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0\"}":{".":{},"f:configMap":{".":{},"f:defaultMode":{},"f:name":{}},"f:name":{}},"k:{\"name\":\"tls-assets\"}":{".":{},"f:name":{},"f:secret":{".":{},"f:defaultMode":{},"f:secretName":{}}},"k:{\"name\":\"web-config\"}":{".":{},"f:name":{},"f:secret":{".":{},"f:defaultMode":{},"f:secretName":{}}}}}},"f:updateStrategy":{"f:type":{}}}}},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"apps/v1","time":"2021-10-25T16:45:22Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:collisionCount":{},"f:currentReplicas":{},"f:currentRevision":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updateRevision":{},"f:updatedReplicas":{}}}}]},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"prometheus","app.kubernetes.io/instance":"prometheus-kube-prometheus-prometheus","app.kubernetes.io/managed-by":"prometheus-operator","app.kubernetes.io/name":"prometheus","operator.prometheus.io/name":"prometheus-kube-prometheus-prometheus","operator.prometheus.io/shard":"0","prometheus":"prometheus-kube-prometheus-prometheus"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"prometheus","app.kubernetes.io/instance":"prometheus-kube-prometheus-prometheus","app.kubernetes.io/managed-by":"prometheus-operator","app.kubernetes.io/name":"prometheus","app.kubernetes.io/version":"2.28.1","operator.prometheus.io/name":"prometheus-kube-prometheus-prometheus","operator.prometheus.io/shard":"0","prometheus":"prometheus-kube-prometheus-prometheus"},"annotations":{"kubectl.kubernetes.io/default-container":"prometheus"}},"spec":{"volumes":[{"name":"config","secret":{"secretName":"prometheus-prometheus-kube-prometheus-prometheus","defaultMode":420}},{"name":"tls-assets","secret":{"secretName":"prometheus-prometheus-kube-prometheus-prometheus-tls-assets","defaultMode":420}},{"name":"config-out","emptyDir":{}},{"name":"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0","configMap":{"name":"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0","defaultMode":420}},{"name":"web-config","secret":{"secretName":"prometheus-prometheus-kube-prometheus-prometheus-web-config","defaultMode":420}},{"name":"prometheus-prometheus-kube-prometheus-prometheus-db","emptyDir":{}}],"initContainers":[{"name":"init-config-reloader","image":"quay.io/prometheus-operator/prometheus-config-reloader:v0.50.0","command":["/bin/prometheus-config-reloader"],"args":["--watch-interval=0","--listen-address=:8080","--config-file=/etc/prometheus/config/prometheus.yaml.gz","--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml","--watched-dir=/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"],"ports":[{"name":"reloader-web","containerPort":8080,"protocol":"TCP"}],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"SHARD","value":"0"}],"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"100m","memory":"50Mi"}},"volumeMounts":[{"name":"config","mountPath":"/etc/prometheus/config"},{"name":"config-out","mountPath":"/etc/prometheus/config_out"},{"name":"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0","mountPath":"/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent"}],"containers":[{"name":"prometheus","image":"quay.io/prometheus/prometheus:v2.28.1","args":["--web.console.templates=/etc/prometheus/consoles","--web.console.libraries=/etc/prometheus/console_libraries","--config.file=/etc/prometheus/config_out/prometheus.env.yaml","--storage.tsdb.path=/prometheus","--storage.tsdb.retention.time=10d","--web.enable-lifecycle","--web.external-url=http://prometheus-kube-prometheus-prometheus.default:9090","--web.route-prefix=/","--web.config.file=/etc/prometheus/web_config/web-config.yaml"],"ports":[{"name":"web","containerPort":9090,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"config-out","readOnly":true,"mountPath":"/etc/prometheus/config_out"},{"name":"tls-assets","readOnly":true,"mountPath":"/etc/prometheus/certs"},{"name":"prometheus-prometheus-kube-prometheus-prometheus-db","mountPath":"/prometheus"},{"name":"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0","mountPath":"/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"},{"name":"web-config","readOnly":true,"mountPath":"/etc/prometheus/web_config/web-config.yaml","subPath":"web-config.yaml"}],"readinessProbe":{"httpGet":{"path":"/-/ready","port":"web","scheme":"HTTP"},"timeoutSeconds":3,"periodSeconds":5,"successThreshold":1,"failureThreshold":120},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent"},{"name":"config-reloader","image":"quay.io/prometheus-operator/prometheus-config-reloader:v0.50.0","command":["/bin/prometheus-config-reloader"],"args":["--listen-address=:8080","--reload-url=http://127.0.0.1:9090/-/reload","--config-file=/etc/prometheus/config/prometheus.yaml.gz","--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml","--watched-dir=/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"],"ports":[{"name":"reloader-web","containerPort":8080,"protocol":"TCP"}],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"SHARD","value":"0"}],"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"100m","memory":"50Mi"}},"volumeMounts":[{"name":"config","mountPath":"/etc/prometheus/config"},{"name":"config-out","mountPath":"/etc/prometheus/config_out"},{"name":"prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0","mountPath":"/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":600,"dnsPolicy":"ClusterFirst","serviceAccountName":"prometheus-kube-prometheus-prometheus","serviceAccount":"prometheus-kube-prometheus-prometheus","securityContext":{"runAsUser":1000,"runAsGroup":2000,"runAsNonRoot":true,"fsGroup":2000},"schedulerName":"default-scheduler"}},"serviceName":"prometheus-operated","podManagementPolicy":"Parallel","updateStrategy":{"type":"RollingUpdate"},"revisionHistoryLimit":10},"status":{"observedGeneration":1,"replicas":1,"readyReplicas":1,"currentReplicas":1,"updatedReplicas":1,"currentRevision":"prometheus-prometheus-kube-prometheus-prometheus-5895cc5f66","updateRevision":"prometheus-prometheus-kube-prometheus-prometheus-5895cc5f66","collisionCount":0}}],"cronjobs":[],"horizontalpodautoscalers":[],"jobs":[],"poddisruptionbudgets":[],"ingresses":[{"metadata":{"name":"ingress-srv","namespace":"default","uid":"e68614c6-6608-4de8-825d-55f2e0343f98","resourceVersion":"214678","generation":2,"creationTimestamp":"2021-10-19T00:19:42Z","annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"Ingress\",\"metadata\":{\"annotations\":{\"kubernetes.io/ingress.class\":\"nginx\"},\"name\":\"ingress-srv\",\"namespace\":\"default\"},\"spec\":{\"rules\":[{\"host\":\"posts.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"posts-clusterip-srv\",\"port\":{\"number\":4000}}},\"path\":\"/posts\",\"pathType\":\"Prefix\"}]}}]}}\n","kubernetes.io/ingress.class":"nginx"},"managedFields":[{"manager":"kubectl-client-side-apply","operation":"Update","apiVersion":"networking.k8s.io/v1beta1","time":"2021-10-19T00:19:42Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubernetes.io/ingress.class":{}}}}},{"manager":"nginx-ingress-controller","operation":"Update","apiVersion":"networking.k8s.io/v1","time":"2021-10-19T00:20:42Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:loadBalancer":{"f:ingress":{}}}}},{"manager":"kubectl-client-side-apply","operation":"Update","apiVersion":"networking.k8s.io/v1","time":"2021-10-19T00:21:29Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{"f:rules":{}}}}]},"spec":{"rules":[{"host":"posts.com","http":{"paths":[{"path":"/posts","pathType":"Prefix","backend":{"service":{"name":"posts-clusterip-srv","port":{"number":4000}}}}]}}]},"status":{"loadBalancer":{"ingress":[{"hostname":"localhost"}]}}}],"networkpolicies":[],"rolebindings":[{"metadata":{"name":"prometheus-grafana","namespace":"default","uid":"f0596c35-7b45-4f57-bd3b-b4e43f0fcdd2","resourceVersion":"640341","creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"8.2.1","helm.sh/chart":"grafana-6.17.2"},"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"managedFields":[{"manager":"helm","operation":"Update","apiVersion":"rbac.authorization.k8s.io/v1","time":"2021-10-25T16:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:helm.sh/chart":{}}},"f:roleRef":{"f:apiGroup":{},"f:kind":{},"f:name":{}},"f:subjects":{}}}]},"subjects":[{"kind":"ServiceAccount","name":"prometheus-grafana","namespace":"default"}],"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"prometheus-grafana"}},{"metadata":{"name":"prometheus-grafana-test","namespace":"default","uid":"b19aff76-9e24-42db-9634-2a7d4a8bf618","resourceVersion":"640339","creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"8.2.1","helm.sh/chart":"grafana-6.17.2"},"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"managedFields":[{"manager":"helm","operation":"Update","apiVersion":"rbac.authorization.k8s.io/v1","time":"2021-10-25T16:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:helm.sh/chart":{}}},"f:roleRef":{"f:apiGroup":{},"f:kind":{},"f:name":{}},"f:subjects":{}}}]},"subjects":[{"kind":"ServiceAccount","name":"prometheus-grafana-test","namespace":"default"}],"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"prometheus-grafana-test"}},{"metadata":{"name":"prometheus-kube-prometheus-alertmanager","namespace":"default","uid":"3118c1bf-55c3-41e5-b378-4e0be10fa2ec","resourceVersion":"640340","creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app":"kube-prometheus-stack-alertmanager","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"managedFields":[{"manager":"helm","operation":"Update","apiVersion":"rbac.authorization.k8s.io/v1","time":"2021-10-25T16:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:roleRef":{"f:apiGroup":{},"f:kind":{},"f:name":{}},"f:subjects":{}}}]},"subjects":[{"kind":"ServiceAccount","name":"prometheus-kube-prometheus-alertmanager","namespace":"default"}],"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"prometheus-kube-prometheus-alertmanager"}}],"roles":[{"metadata":{"name":"prometheus-grafana","namespace":"default","uid":"904f4ee0-ef27-4daf-b22a-175ffc01981c","resourceVersion":"640336","creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"8.2.1","helm.sh/chart":"grafana-6.17.2"},"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"managedFields":[{"manager":"helm","operation":"Update","apiVersion":"rbac.authorization.k8s.io/v1","time":"2021-10-25T16:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:helm.sh/chart":{}}},"f:rules":{}}}]},"rules":[{"verbs":["use"],"apiGroups":["extensions"],"resources":["podsecuritypolicies"],"resourceNames":["prometheus-grafana"]}]},{"metadata":{"name":"prometheus-grafana-test","namespace":"default","uid":"2e3d8cd3-f615-4606-b6eb-a65a295f44b3","resourceVersion":"640337","creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"8.2.1","helm.sh/chart":"grafana-6.17.2"},"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"managedFields":[{"manager":"helm","operation":"Update","apiVersion":"rbac.authorization.k8s.io/v1","time":"2021-10-25T16:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:helm.sh/chart":{}}},"f:rules":{}}}]},"rules":[{"verbs":["use"],"apiGroups":["policy"],"resources":["podsecuritypolicies"],"resourceNames":["prometheus-grafana-test"]}]},{"metadata":{"name":"prometheus-kube-prometheus-alertmanager","namespace":"default","uid":"7c29bb4e-e90b-42e1-930c-1921f4727e3d","resourceVersion":"640338","creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app":"kube-prometheus-stack-alertmanager","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"managedFields":[{"manager":"helm","operation":"Update","apiVersion":"rbac.authorization.k8s.io/v1","time":"2021-10-25T16:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:rules":{}}}]},"rules":[{"verbs":["use"],"apiGroups":["policy"],"resources":["podsecuritypolicies"],"resourceNames":["prometheus-kube-prometheus-alertmanager"]}]}],"leases":[],"endpointslices":[{"metadata":{"name":"alertmanager-operated-k2kw9","generateName":"alertmanager-operated-","namespace":"default","uid":"98aada0c-061e-4d4a-8dd9-ae5975a45f33","resourceVersion":"640663","generation":3,"creationTimestamp":"2021-10-25T16:45:16Z","labels":{"endpointslice.kubernetes.io/managed-by":"endpointslice-controller.k8s.io","kubernetes.io/service-name":"alertmanager-operated","operated-alertmanager":"true","service.kubernetes.io/headless":""},"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2021-10-25T16:45:26Z"},"ownerReferences":[{"apiVersion":"v1","kind":"Service","name":"alertmanager-operated","uid":"d0be1b22-34f0-4d19-959a-e51fc81d296f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"discovery.k8s.io/v1","time":"2021-10-25T16:45:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:addressType":{},"f:endpoints":{},"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:generateName":{},"f:labels":{".":{},"f:endpointslice.kubernetes.io/managed-by":{},"f:kubernetes.io/service-name":{},"f:operated-alertmanager":{},"f:service.kubernetes.io/headless":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d0be1b22-34f0-4d19-959a-e51fc81d296f\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:ports":{}}}]},"addressType":"IPv4","endpoints":[{"addresses":["10.1.0.241"],"conditions":{"ready":true},"hostname":"alertmanager-prometheus-kube-prometheus-alertmanager-0","targetRef":{"kind":"Pod","namespace":"default","name":"alertmanager-prometheus-kube-prometheus-alertmanager-0","uid":"654d3759-1128-49d5-9efd-62d7330826f6","resourceVersion":"640661"},"nodeName":"docker-desktop"}],"ports":[{"name":"udp-mesh","protocol":"UDP","port":9094},{"name":"web","protocol":"TCP","port":9093},{"name":"tcp-mesh","protocol":"TCP","port":9094}]},{"metadata":{"name":"kubernetes","namespace":"default","uid":"9e934d66-97c7-4fa7-b97f-8f0520b49fa8","resourceVersion":"214","generation":1,"creationTimestamp":"2021-10-14T21:41:57Z","labels":{"kubernetes.io/service-name":"kubernetes"},"managedFields":[{"manager":"kube-apiserver","operation":"Update","apiVersion":"discovery.k8s.io/v1","time":"2021-10-14T21:41:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:addressType":{},"f:endpoints":{},"f:metadata":{"f:labels":{".":{},"f:kubernetes.io/service-name":{}}},"f:ports":{}}}]},"addressType":"IPv4","endpoints":[{"addresses":["192.168.65.4"],"conditions":{"ready":true}}],"ports":[{"name":"https","protocol":"TCP","port":6443}]},{"metadata":{"name":"prometheus-grafana-9tvbt","generateName":"prometheus-grafana-","namespace":"default","uid":"233e2889-4d1c-44d9-8fd4-62a6b373320f","resourceVersion":"640653","generation":4,"creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"8.2.1","endpointslice.kubernetes.io/managed-by":"endpointslice-controller.k8s.io","helm.sh/chart":"grafana-6.17.2","kubernetes.io/service-name":"prometheus-grafana"},"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2021-10-25T16:45:24Z"},"ownerReferences":[{"apiVersion":"v1","kind":"Service","name":"prometheus-grafana","uid":"6d9b4b88-a4fe-4d12-935d-0fec05fab288","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"discovery.k8s.io/v1","time":"2021-10-25T16:45:24Z","fieldsType":"FieldsV1","fieldsV1":{"f:addressType":{},"f:endpoints":{},"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:generateName":{},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:endpointslice.kubernetes.io/managed-by":{},"f:helm.sh/chart":{},"f:kubernetes.io/service-name":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6d9b4b88-a4fe-4d12-935d-0fec05fab288\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:ports":{}}}]},"addressType":"IPv4","endpoints":[{"addresses":["10.1.0.239"],"conditions":{"ready":true},"targetRef":{"kind":"Pod","namespace":"default","name":"prometheus-grafana-5b96fb5467-xdplf","uid":"b1f224f3-3cab-4b0e-b517-c011b782cf4b","resourceVersion":"640651"},"nodeName":"docker-desktop"}],"ports":[{"name":"service","protocol":"TCP","port":3000}]},{"metadata":{"name":"prometheus-kube-prometheus-alertmanager-dlp6q","generateName":"prometheus-kube-prometheus-alertmanager-","namespace":"default","uid":"b9642499-e1e4-4a5d-9a4b-95ba20be6a0a","resourceVersion":"640665","generation":3,"creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app":"kube-prometheus-stack-alertmanager","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","endpointslice.kubernetes.io/managed-by":"endpointslice-controller.k8s.io","heritage":"Helm","kubernetes.io/service-name":"prometheus-kube-prometheus-alertmanager","release":"prometheus","self-monitor":"true"},"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2021-10-25T16:45:26Z"},"ownerReferences":[{"apiVersion":"v1","kind":"Service","name":"prometheus-kube-prometheus-alertmanager","uid":"baabae4b-64ac-4876-aa6a-a235a40acd17","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"discovery.k8s.io/v1","time":"2021-10-25T16:45:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:addressType":{},"f:endpoints":{},"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:endpointslice.kubernetes.io/managed-by":{},"f:heritage":{},"f:kubernetes.io/service-name":{},"f:release":{},"f:self-monitor":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"baabae4b-64ac-4876-aa6a-a235a40acd17\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:ports":{}}}]},"addressType":"IPv4","endpoints":[{"addresses":["10.1.0.241"],"conditions":{"ready":true},"targetRef":{"kind":"Pod","namespace":"default","name":"alertmanager-prometheus-kube-prometheus-alertmanager-0","uid":"654d3759-1128-49d5-9efd-62d7330826f6","resourceVersion":"640661"},"nodeName":"docker-desktop"}],"ports":[{"name":"web","protocol":"TCP","port":9093}]},{"metadata":{"name":"prometheus-kube-prometheus-operator-26b47","generateName":"prometheus-kube-prometheus-operator-","namespace":"default","uid":"82e59d4d-1f66-4ad5-ab17-ca9595c49299","resourceVersion":"640544","generation":2,"creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app":"kube-prometheus-stack-operator","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","endpointslice.kubernetes.io/managed-by":"endpointslice-controller.k8s.io","heritage":"Helm","kubernetes.io/service-name":"prometheus-kube-prometheus-operator","release":"prometheus"},"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2021-10-25T16:45:16Z"},"ownerReferences":[{"apiVersion":"v1","kind":"Service","name":"prometheus-kube-prometheus-operator","uid":"04d73520-7cc7-406b-ad62-5775adf1470b","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"discovery.k8s.io/v1","time":"2021-10-25T16:45:17Z","fieldsType":"FieldsV1","fieldsV1":{"f:addressType":{},"f:endpoints":{},"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:endpointslice.kubernetes.io/managed-by":{},"f:heritage":{},"f:kubernetes.io/service-name":{},"f:release":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"04d73520-7cc7-406b-ad62-5775adf1470b\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:ports":{}}}]},"addressType":"IPv4","endpoints":[{"addresses":["10.1.0.238"],"conditions":{"ready":true},"targetRef":{"kind":"Pod","namespace":"default","name":"prometheus-kube-prometheus-operator-bcdfdbc79-bpr5l","uid":"b8ebba9d-8cd8-4198-ac45-ff4e506bb62e","resourceVersion":"640542"},"nodeName":"docker-desktop"}],"ports":[{"name":"https","protocol":"TCP","port":10250}]},{"metadata":{"name":"prometheus-kube-prometheus-prometheus-bgffg","generateName":"prometheus-kube-prometheus-prometheus-","namespace":"default","uid":"8e513a29-72ce-4206-9a3f-5e4a144bea0f","resourceVersion":"640623","generation":3,"creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app":"kube-prometheus-stack-prometheus","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","endpointslice.kubernetes.io/managed-by":"endpointslice-controller.k8s.io","heritage":"Helm","kubernetes.io/service-name":"prometheus-kube-prometheus-prometheus","release":"prometheus","self-monitor":"true"},"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2021-10-25T16:45:21Z"},"ownerReferences":[{"apiVersion":"v1","kind":"Service","name":"prometheus-kube-prometheus-prometheus","uid":"3c445109-6f75-4927-b836-ba76549caa09","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"discovery.k8s.io/v1","time":"2021-10-25T16:45:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:addressType":{},"f:endpoints":{},"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:endpointslice.kubernetes.io/managed-by":{},"f:heritage":{},"f:kubernetes.io/service-name":{},"f:release":{},"f:self-monitor":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3c445109-6f75-4927-b836-ba76549caa09\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:ports":{}}}]},"addressType":"IPv4","endpoints":[{"addresses":["10.1.0.242"],"conditions":{"ready":true},"targetRef":{"kind":"Pod","namespace":"default","name":"prometheus-prometheus-kube-prometheus-prometheus-0","uid":"a66e2bc3-1a13-4574-8899-aabc8975b400","resourceVersion":"640619"},"nodeName":"docker-desktop"}],"ports":[{"name":"web","protocol":"TCP","port":9090}]},{"metadata":{"name":"prometheus-kube-state-metrics-jfcs8","generateName":"prometheus-kube-state-metrics-","namespace":"default","uid":"242635c9-8f09-4537-921e-4529863d63ce","resourceVersion":"640649","generation":3,"creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"kube-state-metrics","endpointslice.kubernetes.io/managed-by":"endpointslice-controller.k8s.io","helm.sh/chart":"kube-state-metrics-3.5.2","kubernetes.io/service-name":"prometheus-kube-state-metrics"},"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2021-10-25T16:45:24Z"},"ownerReferences":[{"apiVersion":"v1","kind":"Service","name":"prometheus-kube-state-metrics","uid":"a71f5aac-95d4-4664-a7aa-55a78d130fee","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"discovery.k8s.io/v1","time":"2021-10-25T16:45:19Z","fieldsType":"FieldsV1","fieldsV1":{"f:addressType":{},"f:endpoints":{},"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:generateName":{},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:endpointslice.kubernetes.io/managed-by":{},"f:helm.sh/chart":{},"f:kubernetes.io/service-name":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a71f5aac-95d4-4664-a7aa-55a78d130fee\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:ports":{}}}]},"addressType":"IPv4","endpoints":[{"addresses":["10.1.0.240"],"conditions":{"ready":true},"targetRef":{"kind":"Pod","namespace":"default","name":"prometheus-kube-state-metrics-58c5cd6ddb-wzpxn","uid":"c78a67cc-72f2-4274-a308-1418f8cb658d","resourceVersion":"640646"},"nodeName":"docker-desktop"}],"ports":[{"name":"http","protocol":"TCP","port":8080}]},{"metadata":{"name":"prometheus-operated-9vqt2","generateName":"prometheus-operated-","namespace":"default","uid":"ca486f80-9813-475e-a5fb-4c388840f08f","resourceVersion":"640622","generation":3,"creationTimestamp":"2021-10-25T16:45:16Z","labels":{"endpointslice.kubernetes.io/managed-by":"endpointslice-controller.k8s.io","kubernetes.io/service-name":"prometheus-operated","operated-prometheus":"true","service.kubernetes.io/headless":""},"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2021-10-25T16:45:21Z"},"ownerReferences":[{"apiVersion":"v1","kind":"Service","name":"prometheus-operated","uid":"7fcee32b-50f4-47a4-99b0-17ac5d4e2f33","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"discovery.k8s.io/v1","time":"2021-10-25T16:45:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:addressType":{},"f:endpoints":{},"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:generateName":{},"f:labels":{".":{},"f:endpointslice.kubernetes.io/managed-by":{},"f:kubernetes.io/service-name":{},"f:operated-prometheus":{},"f:service.kubernetes.io/headless":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7fcee32b-50f4-47a4-99b0-17ac5d4e2f33\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:ports":{}}}]},"addressType":"IPv4","endpoints":[{"addresses":["10.1.0.242"],"conditions":{"ready":true},"hostname":"prometheus-prometheus-kube-prometheus-prometheus-0","targetRef":{"kind":"Pod","namespace":"default","name":"prometheus-prometheus-kube-prometheus-prometheus-0","uid":"a66e2bc3-1a13-4574-8899-aabc8975b400","resourceVersion":"640619"},"nodeName":"docker-desktop"}],"ports":[{"name":"web","protocol":"TCP","port":9090}]},{"metadata":{"name":"prometheus-prometheus-node-exporter-vmr9d","generateName":"prometheus-prometheus-node-exporter-","namespace":"default","uid":"7ab5e7b4-fae6-4150-a2a5-f5ba78bcd77e","resourceVersion":"640410","generation":2,"creationTimestamp":"2021-10-25T16:45:14Z","labels":{"app":"prometheus-node-exporter","app.kubernetes.io/managed-by":"Helm","chart":"prometheus-node-exporter-2.0.4","endpointslice.kubernetes.io/managed-by":"endpointslice-controller.k8s.io","heritage":"Helm","jobLabel":"node-exporter","kubernetes.io/service-name":"prometheus-prometheus-node-exporter","release":"prometheus"},"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2021-10-25T16:45:14Z"},"ownerReferences":[{"apiVersion":"v1","kind":"Service","name":"prometheus-prometheus-node-exporter","uid":"1cf0b0df-1389-4588-b441-212059dc0ae7","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"discovery.k8s.io/v1","time":"2021-10-25T16:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:addressType":{},"f:endpoints":{},"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/managed-by":{},"f:chart":{},"f:endpointslice.kubernetes.io/managed-by":{},"f:heritage":{},"f:jobLabel":{},"f:kubernetes.io/service-name":{},"f:release":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1cf0b0df-1389-4588-b441-212059dc0ae7\"}":{".":{},"f:apiVersion":{},"f:blockOwnerDeletion":{},"f:controller":{},"f:kind":{},"f:name":{},"f:uid":{}}}},"f:ports":{}}}]},"addressType":"IPv4","endpoints":[{"addresses":["192.168.65.4"],"conditions":{"ready":false},"targetRef":{"kind":"Pod","namespace":"default","name":"prometheus-prometheus-node-exporter-8nzfh","uid":"86144d4d-38dc-41ea-b2fc-d1509235c51c","resourceVersion":"640403"},"nodeName":"docker-desktop"}],"ports":[{"name":"metrics","protocol":"TCP","port":9100}]}],"podmonitors":[],"thanosrulers":[],"alertmanagers":[{"apiVersion":"monitoring.coreos.com/v1","kind":"Alertmanager","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14Z","generation":1,"labels":{"app":"kube-prometheus-stack-alertmanager","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:alertmanagerConfigNamespaceSelector":{},"f:alertmanagerConfigSelector":{},"f:externalUrl":{},"f:image":{},"f:listenLocal":{},"f:logFormat":{},"f:logLevel":{},"f:paused":{},"f:portName":{},"f:replicas":{},"f:retention":{},"f:routePrefix":{},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsNonRoot":{},"f:runAsUser":{}},"f:serviceAccountName":{},"f:version":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-alertmanager","namespace":"default","resourceVersion":"640388","uid":"b1da6691-468b-44db-88c2-3fc3f3d582e1"},"spec":{"alertmanagerConfigNamespaceSelector":{},"alertmanagerConfigSelector":{},"externalUrl":"http://prometheus-kube-prometheus-alertmanager.default:9093","image":"quay.io/prometheus/alertmanager:v0.22.2","listenLocal":false,"logFormat":"logfmt","logLevel":"info","paused":false,"portName":"web","replicas":1,"retention":"120h","routePrefix":"/","securityContext":{"fsGroup":2000,"runAsGroup":2000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"prometheus-kube-prometheus-alertmanager","version":"v0.22.2"}}],"probes":[],"prometheuses":[{"apiVersion":"monitoring.coreos.com/v1","kind":"Prometheus","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:14Z","generation":1,"labels":{"app":"kube-prometheus-stack-prometheus","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:alerting":{".":{},"f:alertmanagers":{}},"f:enableAdminAPI":{},"f:externalUrl":{},"f:image":{},"f:listenLocal":{},"f:logFormat":{},"f:logLevel":{},"f:paused":{},"f:podMonitorNamespaceSelector":{},"f:podMonitorSelector":{".":{},"f:matchLabels":{".":{},"f:release":{}}},"f:portName":{},"f:probeNamespaceSelector":{},"f:probeSelector":{".":{},"f:matchLabels":{".":{},"f:release":{}}},"f:replicas":{},"f:retention":{},"f:routePrefix":{},"f:ruleNamespaceSelector":{},"f:ruleSelector":{".":{},"f:matchLabels":{".":{},"f:app":{},"f:release":{}}},"f:securityContext":{".":{},"f:fsGroup":{},"f:runAsGroup":{},"f:runAsNonRoot":{},"f:runAsUser":{}},"f:serviceAccountName":{},"f:serviceMonitorNamespaceSelector":{},"f:serviceMonitorSelector":{".":{},"f:matchLabels":{".":{},"f:release":{}}},"f:shards":{},"f:version":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-prometheus","namespace":"default","resourceVersion":"640404","uid":"c424c4cd-4cc8-4031-863b-1d1ca12111f7"},"spec":{"alerting":{"alertmanagers":[{"apiVersion":"v2","name":"prometheus-kube-prometheus-alertmanager","namespace":"default","pathPrefix":"/","port":"web"}]},"enableAdminAPI":false,"externalUrl":"http://prometheus-kube-prometheus-prometheus.default:9090","image":"quay.io/prometheus/prometheus:v2.28.1","listenLocal":false,"logFormat":"logfmt","logLevel":"info","paused":false,"podMonitorNamespaceSelector":{},"podMonitorSelector":{"matchLabels":{"release":"prometheus"}},"portName":"web","probeNamespaceSelector":{},"probeSelector":{"matchLabels":{"release":"prometheus"}},"replicas":1,"retention":"10d","routePrefix":"/","ruleNamespaceSelector":{},"ruleSelector":{"matchLabels":{"app":"kube-prometheus-stack","release":"prometheus"}},"securityContext":{"fsGroup":2000,"runAsGroup":2000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"prometheus-kube-prometheus-prometheus","serviceMonitorNamespaceSelector":{},"serviceMonitorSelector":{"matchLabels":{"release":"prometheus"}},"shards":1,"version":"v2.28.1"}}],"servicemonitors":[{"apiVersion":"monitoring.coreos.com/v1","kind":"ServiceMonitor","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack-alertmanager","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:endpoints":{},"f:namespaceSelector":{".":{},"f:matchNames":{}},"f:selector":{".":{},"f:matchLabels":{".":{},"f:app":{},"f:release":{},"f:self-monitor":{}}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:17Z"}],"name":"prometheus-kube-prometheus-alertmanager","namespace":"default","resourceVersion":"640522","uid":"0281ef98-08b6-468e-89e8-b11acd8fd214"},"spec":{"endpoints":[{"path":"/metrics","port":"web"}],"namespaceSelector":{"matchNames":["default"]},"selector":{"matchLabels":{"app":"kube-prometheus-stack-alertmanager","release":"prometheus","self-monitor":"true"}}}},{"apiVersion":"monitoring.coreos.com/v1","kind":"ServiceMonitor","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack-apiserver","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:endpoints":{},"f:jobLabel":{},"f:namespaceSelector":{".":{},"f:matchNames":{}},"f:selector":{".":{},"f:matchLabels":{".":{},"f:component":{},"f:provider":{}}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:17Z"}],"name":"prometheus-kube-prometheus-apiserver","namespace":"default","resourceVersion":"640530","uid":"cc832e90-5fc7-4f1d-baab-f239c4dd991b"},"spec":{"endpoints":[{"bearerTokenFile":"/var/run/secrets/kubernetes.io/serviceaccount/token","port":"https","scheme":"https","tlsConfig":{"caFile":"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt","insecureSkipVerify":false,"serverName":"kubernetes"}}],"jobLabel":"component","namespaceSelector":{"matchNames":["default"]},"selector":{"matchLabels":{"component":"apiserver","provider":"kubernetes"}}}},{"apiVersion":"monitoring.coreos.com/v1","kind":"ServiceMonitor","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack-coredns","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:endpoints":{},"f:jobLabel":{},"f:namespaceSelector":{".":{},"f:matchNames":{}},"f:selector":{".":{},"f:matchLabels":{".":{},"f:app":{},"f:release":{}}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:17Z"}],"name":"prometheus-kube-prometheus-coredns","namespace":"default","resourceVersion":"640524","uid":"e5a9f479-fa89-4d0b-b234-501b861e1293"},"spec":{"endpoints":[{"bearerTokenFile":"/var/run/secrets/kubernetes.io/serviceaccount/token","port":"http-metrics"}],"jobLabel":"jobLabel","namespaceSelector":{"matchNames":["kube-system"]},"selector":{"matchLabels":{"app":"kube-prometheus-stack-coredns","release":"prometheus"}}}},{"apiVersion":"monitoring.coreos.com/v1","kind":"ServiceMonitor","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack-grafana","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:endpoints":{},"f:selector":{".":{},"f:matchLabels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/name":{}}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:17Z"}],"name":"prometheus-kube-prometheus-grafana","namespace":"default","resourceVersion":"640526","uid":"3167b128-ece7-4d1b-8b3c-8474b3e31fb8"},"spec":{"endpoints":[{"path":"/metrics","port":"service"}],"selector":{"matchLabels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"grafana"}}}},{"apiVersion":"monitoring.coreos.com/v1","kind":"ServiceMonitor","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack-kube-controller-manager","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:endpoints":{},"f:jobLabel":{},"f:namespaceSelector":{".":{},"f:matchNames":{}},"f:selector":{".":{},"f:matchLabels":{".":{},"f:app":{},"f:release":{}}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:17Z"}],"name":"prometheus-kube-prometheus-kube-controller-manager","namespace":"default","resourceVersion":"640532","uid":"9487f6c2-18e5-4800-af8d-cebae8a74879"},"spec":{"endpoints":[{"bearerTokenFile":"/var/run/secrets/kubernetes.io/serviceaccount/token","port":"http-metrics"}],"jobLabel":"jobLabel","namespaceSelector":{"matchNames":["kube-system"]},"selector":{"matchLabels":{"app":"kube-prometheus-stack-kube-controller-manager","release":"prometheus"}}}},{"apiVersion":"monitoring.coreos.com/v1","kind":"ServiceMonitor","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack-kube-etcd","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:endpoints":{},"f:jobLabel":{},"f:namespaceSelector":{".":{},"f:matchNames":{}},"f:selector":{".":{},"f:matchLabels":{".":{},"f:app":{},"f:release":{}}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:17Z"}],"name":"prometheus-kube-prometheus-kube-etcd","namespace":"default","resourceVersion":"640521","uid":"d9a6b172-3f88-4fc2-86e2-1d4490075763"},"spec":{"endpoints":[{"bearerTokenFile":"/var/run/secrets/kubernetes.io/serviceaccount/token","port":"http-metrics"}],"jobLabel":"jobLabel","namespaceSelector":{"matchNames":["kube-system"]},"selector":{"matchLabels":{"app":"kube-prometheus-stack-kube-etcd","release":"prometheus"}}}},{"apiVersion":"monitoring.coreos.com/v1","kind":"ServiceMonitor","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack-kube-proxy","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:endpoints":{},"f:jobLabel":{},"f:namespaceSelector":{".":{},"f:matchNames":{}},"f:selector":{".":{},"f:matchLabels":{".":{},"f:app":{},"f:release":{}}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:17Z"}],"name":"prometheus-kube-prometheus-kube-proxy","namespace":"default","resourceVersion":"640523","uid":"110b7c8f-4010-4d31-b2f7-a62809c30bd8"},"spec":{"endpoints":[{"bearerTokenFile":"/var/run/secrets/kubernetes.io/serviceaccount/token","port":"http-metrics"}],"jobLabel":"jobLabel","namespaceSelector":{"matchNames":["kube-system"]},"selector":{"matchLabels":{"app":"kube-prometheus-stack-kube-proxy","release":"prometheus"}}}},{"apiVersion":"monitoring.coreos.com/v1","kind":"ServiceMonitor","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack-kube-scheduler","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:endpoints":{},"f:jobLabel":{},"f:namespaceSelector":{".":{},"f:matchNames":{}},"f:selector":{".":{},"f:matchLabels":{".":{},"f:app":{},"f:release":{}}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:17Z"}],"name":"prometheus-kube-prometheus-kube-scheduler","namespace":"default","resourceVersion":"640525","uid":"3b86b1cf-edf1-4a81-a128-998e5e54bf9e"},"spec":{"endpoints":[{"bearerTokenFile":"/var/run/secrets/kubernetes.io/serviceaccount/token","port":"http-metrics"}],"jobLabel":"jobLabel","namespaceSelector":{"matchNames":["kube-system"]},"selector":{"matchLabels":{"app":"kube-prometheus-stack-kube-scheduler","release":"prometheus"}}}},{"apiVersion":"monitoring.coreos.com/v1","kind":"ServiceMonitor","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack-kube-state-metrics","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:endpoints":{},"f:jobLabel":{},"f:selector":{".":{},"f:matchLabels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/name":{}}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:17Z"}],"name":"prometheus-kube-prometheus-kube-state-metrics","namespace":"default","resourceVersion":"640533","uid":"3fad0c57-0d01-4135-a63f-8c32793bb507"},"spec":{"endpoints":[{"honorLabels":true,"port":"http"}],"jobLabel":"app.kubernetes.io/name","selector":{"matchLabels":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"kube-state-metrics"}}}},{"apiVersion":"monitoring.coreos.com/v1","kind":"ServiceMonitor","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack-kubelet","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:endpoints":{},"f:jobLabel":{},"f:namespaceSelector":{".":{},"f:matchNames":{}},"f:selector":{".":{},"f:matchLabels":{".":{},"f:app.kubernetes.io/name":{},"f:k8s-app":{}}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:17Z"}],"name":"prometheus-kube-prometheus-kubelet","namespace":"default","resourceVersion":"640527","uid":"c476a21f-9cd8-4e86-a8eb-5d73b8528e3b"},"spec":{"endpoints":[{"bearerTokenFile":"/var/run/secrets/kubernetes.io/serviceaccount/token","honorLabels":true,"port":"https-metrics","relabelings":[{"sourceLabels":["__metrics_path__"],"targetLabel":"metrics_path"}],"scheme":"https","tlsConfig":{"caFile":"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt","insecureSkipVerify":true}},{"bearerTokenFile":"/var/run/secrets/kubernetes.io/serviceaccount/token","honorLabels":true,"path":"/metrics/cadvisor","port":"https-metrics","relabelings":[{"sourceLabels":["__metrics_path__"],"targetLabel":"metrics_path"}],"scheme":"https","tlsConfig":{"caFile":"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt","insecureSkipVerify":true}},{"bearerTokenFile":"/var/run/secrets/kubernetes.io/serviceaccount/token","honorLabels":true,"path":"/metrics/probes","port":"https-metrics","relabelings":[{"sourceLabels":["__metrics_path__"],"targetLabel":"metrics_path"}],"scheme":"https","tlsConfig":{"caFile":"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt","insecureSkipVerify":true}}],"jobLabel":"k8s-app","namespaceSelector":{"matchNames":["kube-system"]},"selector":{"matchLabels":{"app.kubernetes.io/name":"kubelet","k8s-app":"kubelet"}}}},{"apiVersion":"monitoring.coreos.com/v1","kind":"ServiceMonitor","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack-node-exporter","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:endpoints":{},"f:jobLabel":{},"f:selector":{".":{},"f:matchLabels":{".":{},"f:app":{},"f:release":{}}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:17Z"}],"name":"prometheus-kube-prometheus-node-exporter","namespace":"default","resourceVersion":"640529","uid":"3d64f052-e5c1-43d5-8a12-693a243287b5"},"spec":{"endpoints":[{"port":"metrics"}],"jobLabel":"jobLabel","selector":{"matchLabels":{"app":"prometheus-node-exporter","release":"prometheus"}}}},{"apiVersion":"monitoring.coreos.com/v1","kind":"ServiceMonitor","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack-operator","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:endpoints":{},"f:namespaceSelector":{".":{},"f:matchNames":{}},"f:selector":{".":{},"f:matchLabels":{".":{},"f:app":{},"f:release":{}}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:17Z"}],"name":"prometheus-kube-prometheus-operator","namespace":"default","resourceVersion":"640531","uid":"dd45940e-4462-4b1b-aa5f-39d17e65ea60"},"spec":{"endpoints":[{"honorLabels":true,"port":"https","scheme":"https","tlsConfig":{"ca":{"secret":{"key":"ca","name":"prometheus-kube-prometheus-admission","optional":false}},"serverName":"prometheus-kube-prometheus-operator"}}],"namespaceSelector":{"matchNames":["default"]},"selector":{"matchLabels":{"app":"kube-prometheus-stack-operator","release":"prometheus"}}}},{"apiVersion":"monitoring.coreos.com/v1","kind":"ServiceMonitor","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack-prometheus","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:endpoints":{},"f:namespaceSelector":{".":{},"f:matchNames":{}},"f:selector":{".":{},"f:matchLabels":{".":{},"f:app":{},"f:release":{},"f:self-monitor":{}}}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:17Z"}],"name":"prometheus-kube-prometheus-prometheus","namespace":"default","resourceVersion":"640528","uid":"2e474bfc-69c4-42aa-a926-1ebce7c1e6fa"},"spec":{"endpoints":[{"path":"/metrics","port":"web"}],"namespaceSelector":{"matchNames":["default"]},"selector":{"matchLabels":{"app":"kube-prometheus-stack-prometheus","release":"prometheus","self-monitor":"true"}}}}],"prometheusrules":[{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-alertmanager.rules","namespace":"default","resourceVersion":"640517","uid":"57729162-1e74-4afb-ab1c-d2e23e40e339"},"spec":{"groups":[{"name":"alertmanager.rules","rules":[{"alert":"AlertmanagerFailedReload","annotations":{"description":"Configuration has failed to load for {{ $labels.namespace }}/{{ $labels.pod}}.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-alertmanagerfailedreload","summary":"Reloading an Alertmanager configuration has failed."},"expr":"# Without max_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\nmax_over_time(alertmanager_config_last_reload_successful{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}[5m]) == 0","for":"10m","labels":{"severity":"critical"}},{"alert":"AlertmanagerMembersInconsistent","annotations":{"description":"Alertmanager {{ $labels.namespace }}/{{ $labels.pod}} has only found {{ $value }} members of the {{$labels.job}} cluster.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-alertmanagermembersinconsistent","summary":"A member of an Alertmanager cluster has not found all other cluster members."},"expr":"# Without max_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n  max_over_time(alertmanager_cluster_members{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}[5m])\n< on (namespace,service) group_left\n  count by (namespace,service) (max_over_time(alertmanager_cluster_members{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}[5m]))","for":"15m","labels":{"severity":"critical"}},{"alert":"AlertmanagerFailedToSendAlerts","annotations":{"description":"Alertmanager {{ $labels.namespace }}/{{ $labels.pod}} failed to send {{ $value | humanizePercentage }} of notifications to {{ $labels.integration }}.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-alertmanagerfailedtosendalerts","summary":"An Alertmanager instance failed to send notifications."},"expr":"(\n  rate(alertmanager_notifications_failed_total{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}[5m])\n/\n  rate(alertmanager_notifications_total{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}[5m])\n)\n> 0.01","for":"5m","labels":{"severity":"warning"}},{"alert":"AlertmanagerClusterFailedToSendAlerts","annotations":{"description":"The minimum notification failure rate to {{ $labels.integration }} sent from any instance in the {{$labels.job}} cluster is {{ $value | humanizePercentage }}.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-alertmanagerclusterfailedtosendalerts","summary":"All Alertmanager instances in a cluster failed to send notifications to a critical integration."},"expr":"min by (namespace,service, integration) (\n  rate(alertmanager_notifications_failed_total{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\", integration=~`.*`}[5m])\n/\n  rate(alertmanager_notifications_total{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\", integration=~`.*`}[5m])\n)\n> 0.01","for":"5m","labels":{"severity":"critical"}},{"alert":"AlertmanagerClusterFailedToSendAlerts","annotations":{"description":"The minimum notification failure rate to {{ $labels.integration }} sent from any instance in the {{$labels.job}} cluster is {{ $value | humanizePercentage }}.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-alertmanagerclusterfailedtosendalerts","summary":"All Alertmanager instances in a cluster failed to send notifications to a non-critical integration."},"expr":"min by (namespace,service, integration) (\n  rate(alertmanager_notifications_failed_total{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\", integration!~`.*`}[5m])\n/\n  rate(alertmanager_notifications_total{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\", integration!~`.*`}[5m])\n)\n> 0.01","for":"5m","labels":{"severity":"warning"}},{"alert":"AlertmanagerConfigInconsistent","annotations":{"description":"Alertmanager instances within the {{$labels.job}} cluster have different configurations.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-alertmanagerconfiginconsistent","summary":"Alertmanager instances within the same cluster have different configurations."},"expr":"count by (namespace,service) (\n  count_values by (namespace,service) (\"config_hash\", alertmanager_config_hash{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"})\n)\n!= 1","for":"20m","labels":{"severity":"critical"}},{"alert":"AlertmanagerClusterDown","annotations":{"description":"{{ $value | humanizePercentage }} of Alertmanager instances within the {{$labels.job}} cluster have been up for less than half of the last 5m.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-alertmanagerclusterdown","summary":"Half or more of the Alertmanager instances within the same cluster are down."},"expr":"(\n  count by (namespace,service) (\n    avg_over_time(up{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}[5m]) < 0.5\n  )\n/\n  count by (namespace,service) (\n    up{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}\n  )\n)\n>= 0.5","for":"5m","labels":{"severity":"critical"}},{"alert":"AlertmanagerClusterCrashlooping","annotations":{"description":"{{ $value | humanizePercentage }} of Alertmanager instances within the {{$labels.job}} cluster have restarted at least 5 times in the last 10m.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-alertmanagerclustercrashlooping","summary":"Half or more of the Alertmanager instances within the same cluster are crashlooping."},"expr":"(\n  count by (namespace,service) (\n    changes(process_start_time_seconds{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}[10m]) > 4\n  )\n/\n  count by (namespace,service) (\n    up{job=\"prometheus-kube-prometheus-alertmanager\",namespace=\"default\"}\n  )\n)\n>= 0.5","for":"5m","labels":{"severity":"critical"}}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-etcd","namespace":"default","resourceVersion":"640492","uid":"03aa0f24-aa5f-47b8-973e-110a0d2b8bca"},"spec":{"groups":[{"name":"etcd","rules":[{"alert":"etcdInsufficientMembers","annotations":{"message":"etcd cluster \"{{ $labels.job }}\": insufficient members ({{ $value }})."},"expr":"sum(up{job=~\".*etcd.*\"} == bool 1) by (job) < ((count(up{job=~\".*etcd.*\"}) by (job) + 1) / 2)","for":"3m","labels":{"severity":"critical"}},{"alert":"etcdNoLeader","annotations":{"message":"etcd cluster \"{{ $labels.job }}\": member {{ $labels.instance }} has no leader."},"expr":"etcd_server_has_leader{job=~\".*etcd.*\"} == 0","for":"1m","labels":{"severity":"critical"}},{"alert":"etcdHighNumberOfLeaderChanges","annotations":{"message":"etcd cluster \"{{ $labels.job }}\": instance {{ $labels.instance }} has seen {{ $value }} leader changes within the last hour."},"expr":"rate(etcd_server_leader_changes_seen_total{job=~\".*etcd.*\"}[15m]) > 3","for":"15m","labels":{"severity":"warning"}},{"alert":"etcdHighNumberOfFailedGRPCRequests","annotations":{"message":"etcd cluster \"{{ $labels.job }}\": {{ $value }}% of requests for {{ $labels.grpc_method }} failed on etcd instance {{ $labels.instance }}."},"expr":"100 * sum(rate(grpc_server_handled_total{job=~\".*etcd.*\", grpc_code!=\"OK\"}[5m])) BY (job, instance, grpc_service, grpc_method)\n  /\nsum(rate(grpc_server_handled_total{job=~\".*etcd.*\"}[5m])) BY (job, instance, grpc_service, grpc_method)\n  > 1","for":"10m","labels":{"severity":"warning"}},{"alert":"etcdHighNumberOfFailedGRPCRequests","annotations":{"message":"etcd cluster \"{{ $labels.job }}\": {{ $value }}% of requests for {{ $labels.grpc_method }} failed on etcd instance {{ $labels.instance }}."},"expr":"100 * sum(rate(grpc_server_handled_total{job=~\".*etcd.*\", grpc_code!=\"OK\"}[5m])) BY (job, instance, grpc_service, grpc_method)\n  /\nsum(rate(grpc_server_handled_total{job=~\".*etcd.*\"}[5m])) BY (job, instance, grpc_service, grpc_method)\n  > 5","for":"5m","labels":{"severity":"critical"}},{"alert":"etcdGRPCRequestsSlow","annotations":{"message":"etcd cluster \"{{ $labels.job }}\": gRPC requests to {{ $labels.grpc_method }} are taking {{ $value }}s on etcd instance {{ $labels.instance }}."},"expr":"histogram_quantile(0.99, sum(rate(grpc_server_handling_seconds_bucket{job=~\".*etcd.*\", grpc_type=\"unary\"}[5m])) by (job, instance, grpc_service, grpc_method, le))\n> 0.15","for":"10m","labels":{"severity":"critical"}},{"alert":"etcdMemberCommunicationSlow","annotations":{"message":"etcd cluster \"{{ $labels.job }}\": member communication with {{ $labels.To }} is taking {{ $value }}s on etcd instance {{ $labels.instance }}."},"expr":"histogram_quantile(0.99, rate(etcd_network_peer_round_trip_time_seconds_bucket{job=~\".*etcd.*\"}[5m]))\n> 0.15","for":"10m","labels":{"severity":"warning"}},{"alert":"etcdHighNumberOfFailedProposals","annotations":{"message":"etcd cluster \"{{ $labels.job }}\": {{ $value }} proposal failures within the last hour on etcd instance {{ $labels.instance }}."},"expr":"rate(etcd_server_proposals_failed_total{job=~\".*etcd.*\"}[15m]) > 5","for":"15m","labels":{"severity":"warning"}},{"alert":"etcdHighFsyncDurations","annotations":{"message":"etcd cluster \"{{ $labels.job }}\": 99th percentile fync durations are {{ $value }}s on etcd instance {{ $labels.instance }}."},"expr":"histogram_quantile(0.99, rate(etcd_disk_wal_fsync_duration_seconds_bucket{job=~\".*etcd.*\"}[5m]))\n> 0.5","for":"10m","labels":{"severity":"warning"}},{"alert":"etcdHighCommitDurations","annotations":{"message":"etcd cluster \"{{ $labels.job }}\": 99th percentile commit durations {{ $value }}s on etcd instance {{ $labels.instance }}."},"expr":"histogram_quantile(0.99, rate(etcd_disk_backend_commit_duration_seconds_bucket{job=~\".*etcd.*\"}[5m]))\n> 0.25","for":"10m","labels":{"severity":"warning"}},{"alert":"etcdHighNumberOfFailedHTTPRequests","annotations":{"message":"{{ $value }}% of requests for {{ $labels.method }} failed on etcd instance {{ $labels.instance }}"},"expr":"sum(rate(etcd_http_failed_total{job=~\".*etcd.*\", code!=\"404\"}[5m])) BY (method) / sum(rate(etcd_http_received_total{job=~\".*etcd.*\"}[5m]))\nBY (method) > 0.01","for":"10m","labels":{"severity":"warning"}},{"alert":"etcdHighNumberOfFailedHTTPRequests","annotations":{"message":"{{ $value }}% of requests for {{ $labels.method }} failed on etcd instance {{ $labels.instance }}."},"expr":"sum(rate(etcd_http_failed_total{job=~\".*etcd.*\", code!=\"404\"}[5m])) BY (method) / sum(rate(etcd_http_received_total{job=~\".*etcd.*\"}[5m]))\nBY (method) > 0.05","for":"10m","labels":{"severity":"critical"}},{"alert":"etcdHTTPRequestsSlow","annotations":{"message":"etcd instance {{ $labels.instance }} HTTP requests to {{ $labels.method }} are slow."},"expr":"histogram_quantile(0.99, rate(etcd_http_successful_duration_seconds_bucket[5m]))\n> 0.15","for":"10m","labels":{"severity":"warning"}}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-general.rules","namespace":"default","resourceVersion":"640503","uid":"c25a740c-442e-4c8f-ba26-ed28eb5c3190"},"spec":{"groups":[{"name":"general.rules","rules":[{"alert":"TargetDown","annotations":{"description":"{{ printf \"%.4g\" $value }}% of the {{ $labels.job }}/{{ $labels.service }} targets in {{ $labels.namespace }} namespace are down.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-targetdown","summary":"One or more targets are unreachable."},"expr":"100 * (count(up == 0) BY (job, namespace, service) / count(up) BY (job, namespace, service)) > 10","for":"10m","labels":{"severity":"warning"}},{"alert":"Watchdog","annotations":{"description":"This is an alert meant to ensure that the entire alerting pipeline is functional.\nThis alert is always firing, therefore it should always be firing in Alertmanager\nand always fire against a receiver. There are integrations with various notification\nmechanisms that send a notification when this alert is not firing. For example the\n\"DeadMansSnitch\" integration in PagerDuty.\n","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-watchdog","summary":"An alert that should always be firing to certify that Alertmanager is working properly."},"expr":"vector(1)","labels":{"severity":"none"}}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-k8s.rules","namespace":"default","resourceVersion":"640515","uid":"6f751680-d859-4d0f-b091-e1e72e47a7c8"},"spec":{"groups":[{"name":"k8s.rules","rules":[{"expr":"sum by (cluster, namespace, pod, container) (\n  irate(container_cpu_usage_seconds_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}[5m])\n) * on (cluster, namespace, pod) group_left(node) topk by (cluster, namespace, pod) (\n  1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=\"\"})\n)","record":"node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate"},{"expr":"container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n* on (namespace, pod) group_left(node) topk by(namespace, pod) (1,\n  max by(namespace, pod, node) (kube_pod_info{node!=\"\"})\n)","record":"node_namespace_pod_container:container_memory_working_set_bytes"},{"expr":"container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n* on (namespace, pod) group_left(node) topk by(namespace, pod) (1,\n  max by(namespace, pod, node) (kube_pod_info{node!=\"\"})\n)","record":"node_namespace_pod_container:container_memory_rss"},{"expr":"container_memory_cache{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n* on (namespace, pod) group_left(node) topk by(namespace, pod) (1,\n  max by(namespace, pod, node) (kube_pod_info{node!=\"\"})\n)","record":"node_namespace_pod_container:container_memory_cache"},{"expr":"container_memory_swap{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n* on (namespace, pod) group_left(node) topk by(namespace, pod) (1,\n  max by(namespace, pod, node) (kube_pod_info{node!=\"\"})\n)","record":"node_namespace_pod_container:container_memory_swap"},{"expr":"kube_pod_container_resource_requests{resource=\"memory\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\ngroup_left() max by (namespace, pod) (\n  (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n)","record":"cluster:namespace:pod_memory:active:kube_pod_container_resource_requests"},{"expr":"sum by (namespace, cluster) (\n    sum by (namespace, pod, cluster) (\n        max by (namespace, pod, container, cluster) (\n          kube_pod_container_resource_requests{resource=\"memory\",job=\"kube-state-metrics\"}\n        ) * on(namespace, pod, cluster) group_left() max by (namespace, pod) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n        )\n    )\n)","record":"namespace_memory:kube_pod_container_resource_requests:sum"},{"expr":"kube_pod_container_resource_requests{resource=\"cpu\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\ngroup_left() max by (namespace, pod) (\n  (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n)","record":"cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests"},{"expr":"sum by (namespace, cluster) (\n    sum by (namespace, pod, cluster) (\n        max by (namespace, pod, container, cluster) (\n          kube_pod_container_resource_requests{resource=\"cpu\",job=\"kube-state-metrics\"}\n        ) * on(namespace, pod, cluster) group_left() max by (namespace, pod) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n        )\n    )\n)","record":"namespace_cpu:kube_pod_container_resource_requests:sum"},{"expr":"kube_pod_container_resource_limits{resource=\"memory\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\ngroup_left() max by (namespace, pod) (\n  (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n)","record":"cluster:namespace:pod_memory:active:kube_pod_container_resource_limits"},{"expr":"sum by (namespace, cluster) (\n    sum by (namespace, pod, cluster) (\n        max by (namespace, pod, container, cluster) (\n          kube_pod_container_resource_limits{resource=\"memory\",job=\"kube-state-metrics\"}\n        ) * on(namespace, pod, cluster) group_left() max by (namespace, pod) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n        )\n    )\n)","record":"namespace_memory:kube_pod_container_resource_limits:sum"},{"expr":"kube_pod_container_resource_limits{resource=\"cpu\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\ngroup_left() max by (namespace, pod) (\n (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n )","record":"cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits"},{"expr":"sum by (namespace, cluster) (\n    sum by (namespace, pod, cluster) (\n        max by (namespace, pod, container, cluster) (\n          kube_pod_container_resource_limits{resource=\"cpu\",job=\"kube-state-metrics\"}\n        ) * on(namespace, pod, cluster) group_left() max by (namespace, pod) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n        )\n    )\n)","record":"namespace_cpu:kube_pod_container_resource_limits:sum"},{"expr":"max by (cluster, namespace, workload, pod) (\n  label_replace(\n    label_replace(\n      kube_pod_owner{job=\"kube-state-metrics\", owner_kind=\"ReplicaSet\"},\n      \"replicaset\", \"$1\", \"owner_name\", \"(.*)\"\n    ) * on(replicaset, namespace) group_left(owner_name) topk by(replicaset, namespace) (\n      1, max by (replicaset, namespace, owner_name) (\n        kube_replicaset_owner{job=\"kube-state-metrics\"}\n      )\n    ),\n    \"workload\", \"$1\", \"owner_name\", \"(.*)\"\n  )\n)","labels":{"workload_type":"deployment"},"record":"namespace_workload_pod:kube_pod_owner:relabel"},{"expr":"max by (cluster, namespace, workload, pod) (\n  label_replace(\n    kube_pod_owner{job=\"kube-state-metrics\", owner_kind=\"DaemonSet\"},\n    \"workload\", \"$1\", \"owner_name\", \"(.*)\"\n  )\n)","labels":{"workload_type":"daemonset"},"record":"namespace_workload_pod:kube_pod_owner:relabel"},{"expr":"max by (cluster, namespace, workload, pod) (\n  label_replace(\n    kube_pod_owner{job=\"kube-state-metrics\", owner_kind=\"StatefulSet\"},\n    \"workload\", \"$1\", \"owner_name\", \"(.*)\"\n  )\n)","labels":{"workload_type":"statefulset"},"record":"namespace_workload_pod:kube_pod_owner:relabel"}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kube-apiserver-availability.rules","namespace":"default","resourceVersion":"640493","uid":"6c839912-1b6d-4184-bb73-3c4c24ffab2d"},"spec":{"groups":[{"interval":"3m","name":"kube-apiserver-availability.rules","rules":[{"expr":"avg_over_time(code_verb:apiserver_request_total:increase1h[30d]) * 24 * 30","record":"code_verb:apiserver_request_total:increase30d"},{"expr":"sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~\"LIST|GET\"})","labels":{"verb":"read"},"record":"code:apiserver_request_total:increase30d"},{"expr":"sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~\"POST|PUT|PATCH|DELETE\"})","labels":{"verb":"write"},"record":"code:apiserver_request_total:increase30d"},{"expr":"1 - (\n  (\n    # write too slow\n    sum by (cluster) (increase(apiserver_request_duration_seconds_count{verb=~\"POST|PUT|PATCH|DELETE\"}[30d]))\n    -\n    sum by (cluster) (increase(apiserver_request_duration_seconds_bucket{verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[30d]))\n  ) +\n  (\n    # read too slow\n    sum by (cluster) (increase(apiserver_request_duration_seconds_count{verb=~\"LIST|GET\"}[30d]))\n    -\n    (\n      (\n        sum by (cluster) (increase(apiserver_request_duration_seconds_bucket{verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[30d]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (increase(apiserver_request_duration_seconds_bucket{verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[30d]))\n      +\n      sum by (cluster) (increase(apiserver_request_duration_seconds_bucket{verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[30d]))\n    )\n  ) +\n  # errors\n  sum by (cluster) (code:apiserver_request_total:increase30d{code=~\"5..\"} or vector(0))\n)\n/\nsum by (cluster) (code:apiserver_request_total:increase30d)","labels":{"verb":"all"},"record":"apiserver_request:availability30d"},{"expr":"1 - (\n  sum by (cluster) (increase(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[30d]))\n  -\n  (\n    # too slow\n    (\n      sum by (cluster) (increase(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[30d]))\n      or\n      vector(0)\n    )\n    +\n    sum by (cluster) (increase(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[30d]))\n    +\n    sum by (cluster) (increase(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[30d]))\n  )\n  +\n  # errors\n  sum by (cluster) (code:apiserver_request_total:increase30d{verb=\"read\",code=~\"5..\"} or vector(0))\n)\n/\nsum by (cluster) (code:apiserver_request_total:increase30d{verb=\"read\"})","labels":{"verb":"read"},"record":"apiserver_request:availability30d"},{"expr":"1 - (\n  (\n    # too slow\n    sum by (cluster) (increase(apiserver_request_duration_seconds_count{verb=~\"POST|PUT|PATCH|DELETE\"}[30d]))\n    -\n    sum by (cluster) (increase(apiserver_request_duration_seconds_bucket{verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[30d]))\n  )\n  +\n  # errors\n  sum by (cluster) (code:apiserver_request_total:increase30d{verb=\"write\",code=~\"5..\"} or vector(0))\n)\n/\nsum by (cluster) (code:apiserver_request_total:increase30d{verb=\"write\"})","labels":{"verb":"write"},"record":"apiserver_request:availability30d"},{"expr":"sum by (cluster,code,resource) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))","labels":{"verb":"read"},"record":"code_resource:apiserver_request_total:rate5m"},{"expr":"sum by (cluster,code,resource) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))","labels":{"verb":"write"},"record":"code_resource:apiserver_request_total:rate5m"},{"expr":"sum by (cluster, code, verb) (increase(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET|POST|PUT|PATCH|DELETE\",code=~\"2..\"}[1h]))","record":"code_verb:apiserver_request_total:increase1h"},{"expr":"sum by (cluster, code, verb) (increase(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET|POST|PUT|PATCH|DELETE\",code=~\"3..\"}[1h]))","record":"code_verb:apiserver_request_total:increase1h"},{"expr":"sum by (cluster, code, verb) (increase(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET|POST|PUT|PATCH|DELETE\",code=~\"4..\"}[1h]))","record":"code_verb:apiserver_request_total:increase1h"},{"expr":"sum by (cluster, code, verb) (increase(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET|POST|PUT|PATCH|DELETE\",code=~\"5..\"}[1h]))","record":"code_verb:apiserver_request_total:increase1h"}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kube-apiserver-burnrate.rules","namespace":"default","resourceVersion":"640516","uid":"41832e8a-7916-4b5e-9a3a-bba08a8addd6"},"spec":{"groups":[{"name":"kube-apiserver-burnrate.rules","rules":[{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[1d]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[1d]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[1d]))\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[1d]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[1d]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[1d]))","labels":{"verb":"read"},"record":"apiserver_request:burnrate1d"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[1h]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[1h]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[1h]))\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[1h]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[1h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[1h]))","labels":{"verb":"read"},"record":"apiserver_request:burnrate1h"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[2h]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[2h]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[2h]))\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[2h]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[2h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[2h]))","labels":{"verb":"read"},"record":"apiserver_request:burnrate2h"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[30m]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[30m]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[30m]))\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[30m]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[30m]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[30m]))","labels":{"verb":"read"},"record":"apiserver_request:burnrate30m"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[3d]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[3d]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[3d]))\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[3d]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[3d]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[3d]))","labels":{"verb":"read"},"record":"apiserver_request:burnrate3d"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[5m]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[5m]))\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[5m]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[5m]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))","labels":{"verb":"read"},"record":"apiserver_request:burnrate5m"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[6h]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"1\"}[6h]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"5\"}[6h]))\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"40\"}[6h]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[6h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[6h]))","labels":{"verb":"read"},"record":"apiserver_request:burnrate6h"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1d]))\n    -\n    sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[1d]))\n  )\n  +\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[1d]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1d]))","labels":{"verb":"write"},"record":"apiserver_request:burnrate1d"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1h]))\n    -\n    sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[1h]))\n  )\n  +\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[1h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1h]))","labels":{"verb":"write"},"record":"apiserver_request:burnrate1h"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[2h]))\n    -\n    sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[2h]))\n  )\n  +\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[2h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[2h]))","labels":{"verb":"write"},"record":"apiserver_request:burnrate2h"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[30m]))\n    -\n    sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[30m]))\n  )\n  +\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[30m]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[30m]))","labels":{"verb":"write"},"record":"apiserver_request:burnrate30m"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[3d]))\n    -\n    sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[3d]))\n  )\n  +\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[3d]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[3d]))","labels":{"verb":"write"},"record":"apiserver_request:burnrate3d"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))\n    -\n    sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[5m]))\n  )\n  +\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[5m]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))","labels":{"verb":"write"},"record":"apiserver_request:burnrate5m"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[6h]))\n    -\n    sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[6h]))\n  )\n  +\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[6h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[6h]))","labels":{"verb":"write"},"record":"apiserver_request:burnrate6h"}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kube-apiserver-histogram.rules","namespace":"default","resourceVersion":"640520","uid":"0328f933-82b0-43e4-b3ab-1a702a37fb8d"},"spec":{"groups":[{"name":"kube-apiserver-histogram.rules","rules":[{"expr":"histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))) > 0","labels":{"quantile":"0.99","verb":"read"},"record":"cluster_quantile:apiserver_request_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))) > 0","labels":{"quantile":"0.99","verb":"write"},"record":"cluster_quantile:apiserver_request_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m])) without(instance, pod))","labels":{"quantile":"0.99"},"record":"cluster_quantile:apiserver_request_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.9, sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m])) without(instance, pod))","labels":{"quantile":"0.9"},"record":"cluster_quantile:apiserver_request_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.5, sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m])) without(instance, pod))","labels":{"quantile":"0.5"},"record":"cluster_quantile:apiserver_request_duration_seconds:histogram_quantile"}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kube-apiserver-slos","namespace":"default","resourceVersion":"640518","uid":"c572e888-ad27-423f-8a37-19cfdc1b71bb"},"spec":{"groups":[{"name":"kube-apiserver-slos","rules":[{"alert":"KubeAPIErrorBudgetBurn","annotations":{"description":"The API server is burning too much error budget.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn","summary":"The API server is burning too much error budget."},"expr":"sum(apiserver_request:burnrate1h) > (14.40 * 0.01000)\nand\nsum(apiserver_request:burnrate5m) > (14.40 * 0.01000)","for":"2m","labels":{"long":"1h","severity":"critical","short":"5m"}},{"alert":"KubeAPIErrorBudgetBurn","annotations":{"description":"The API server is burning too much error budget.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn","summary":"The API server is burning too much error budget."},"expr":"sum(apiserver_request:burnrate6h) > (6.00 * 0.01000)\nand\nsum(apiserver_request:burnrate30m) > (6.00 * 0.01000)","for":"15m","labels":{"long":"6h","severity":"critical","short":"30m"}},{"alert":"KubeAPIErrorBudgetBurn","annotations":{"description":"The API server is burning too much error budget.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn","summary":"The API server is burning too much error budget."},"expr":"sum(apiserver_request:burnrate1d) > (3.00 * 0.01000)\nand\nsum(apiserver_request:burnrate2h) > (3.00 * 0.01000)","for":"1h","labels":{"long":"1d","severity":"warning","short":"2h"}},{"alert":"KubeAPIErrorBudgetBurn","annotations":{"description":"The API server is burning too much error budget.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn","summary":"The API server is burning too much error budget."},"expr":"sum(apiserver_request:burnrate3d) > (1.00 * 0.01000)\nand\nsum(apiserver_request:burnrate6h) > (1.00 * 0.01000)","for":"3h","labels":{"long":"3d","severity":"warning","short":"6h"}}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kube-apiserver.rules","namespace":"default","resourceVersion":"640506","uid":"bac9070d-8bd3-4e67-8a85-895dd0de64a0"},"spec":{"groups":[{"name":"kube-apiserver.rules","rules":[{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[1d]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"0.1\"}[1d]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"0.5\"}[1d]))\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"5\"}[1d]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[1d]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[1d]))","labels":{"verb":"read"},"record":"apiserver_request:burnrate1d"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[1h]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"0.1\"}[1h]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"0.5\"}[1h]))\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"5\"}[1h]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[1h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[1h]))","labels":{"verb":"read"},"record":"apiserver_request:burnrate1h"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[2h]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"0.1\"}[2h]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"0.5\"}[2h]))\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"5\"}[2h]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[2h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[2h]))","labels":{"verb":"read"},"record":"apiserver_request:burnrate2h"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[30m]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"0.1\"}[30m]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"0.5\"}[30m]))\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"5\"}[30m]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[30m]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[30m]))","labels":{"verb":"read"},"record":"apiserver_request:burnrate30m"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[3d]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"0.1\"}[3d]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"0.5\"}[3d]))\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"5\"}[3d]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[3d]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[3d]))","labels":{"verb":"read"},"record":"apiserver_request:burnrate3d"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"0.1\"}[5m]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"0.5\"}[5m]))\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"5\"}[5m]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[5m]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))","labels":{"verb":"read"},"record":"apiserver_request:burnrate5m"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[6h]))\n    -\n    (\n      (\n        sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=~\"resource|\",le=\"0.1\"}[6h]))\n        or\n        vector(0)\n      )\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"namespace\",le=\"0.5\"}[6h]))\n      +\n      sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\",scope=\"cluster\",le=\"5\"}[6h]))\n    )\n  )\n  +\n  # errors\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\",code=~\"5..\"}[6h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[6h]))","labels":{"verb":"read"},"record":"apiserver_request:burnrate6h"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1d]))\n    -\n    sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[1d]))\n  )\n  +\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[1d]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1d]))","labels":{"verb":"write"},"record":"apiserver_request:burnrate1d"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1h]))\n    -\n    sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[1h]))\n  )\n  +\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[1h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1h]))","labels":{"verb":"write"},"record":"apiserver_request:burnrate1h"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[2h]))\n    -\n    sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[2h]))\n  )\n  +\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[2h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[2h]))","labels":{"verb":"write"},"record":"apiserver_request:burnrate2h"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[30m]))\n    -\n    sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[30m]))\n  )\n  +\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[30m]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[30m]))","labels":{"verb":"write"},"record":"apiserver_request:burnrate30m"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[3d]))\n    -\n    sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[3d]))\n  )\n  +\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[3d]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[3d]))","labels":{"verb":"write"},"record":"apiserver_request:burnrate3d"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))\n    -\n    sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[5m]))\n  )\n  +\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[5m]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))","labels":{"verb":"write"},"record":"apiserver_request:burnrate5m"},{"expr":"(\n  (\n    # too slow\n    sum by (cluster) (rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[6h]))\n    -\n    sum by (cluster) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",le=\"1\"}[6h]))\n  )\n  +\n  sum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\",code=~\"5..\"}[6h]))\n)\n/\nsum by (cluster) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[6h]))","labels":{"verb":"write"},"record":"apiserver_request:burnrate6h"},{"expr":"sum by (cluster,code,resource) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))","labels":{"verb":"read"},"record":"code_resource:apiserver_request_total:rate5m"},{"expr":"sum by (cluster,code,resource) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))","labels":{"verb":"write"},"record":"code_resource:apiserver_request_total:rate5m"},{"expr":"histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))) > 0","labels":{"quantile":"0.99","verb":"read"},"record":"cluster_quantile:apiserver_request_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))) > 0","labels":{"quantile":"0.99","verb":"write"},"record":"cluster_quantile:apiserver_request_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m])) without(instance, pod))","labels":{"quantile":"0.99"},"record":"cluster_quantile:apiserver_request_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.9, sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m])) without(instance, pod))","labels":{"quantile":"0.9"},"record":"cluster_quantile:apiserver_request_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.5, sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m])) without(instance, pod))","labels":{"quantile":"0.5"},"record":"cluster_quantile:apiserver_request_duration_seconds:histogram_quantile"}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kube-prometheus-general.rules","namespace":"default","resourceVersion":"640511","uid":"2ab827fa-29e9-4e01-b47a-c0f2ac92a6cd"},"spec":{"groups":[{"name":"kube-prometheus-general.rules","rules":[{"expr":"count without(instance, pod, node) (up == 1)","record":"count:up1"},{"expr":"count without(instance, pod, node) (up == 0)","record":"count:up0"}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kube-prometheus-node-recording.rules","namespace":"default","resourceVersion":"640500","uid":"5d06ec58-127f-4167-8732-7917da0bfddf"},"spec":{"groups":[{"name":"kube-prometheus-node-recording.rules","rules":[{"expr":"sum(rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\",mode!=\"steal\"}[3m])) BY (instance)","record":"instance:node_cpu:rate:sum"},{"expr":"sum(rate(node_network_receive_bytes_total[3m])) BY (instance)","record":"instance:node_network_receive_bytes:rate:sum"},{"expr":"sum(rate(node_network_transmit_bytes_total[3m])) BY (instance)","record":"instance:node_network_transmit_bytes:rate:sum"},{"expr":"sum(rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\",mode!=\"steal\"}[5m])) WITHOUT (cpu, mode) / ON(instance) GROUP_LEFT() count(sum(node_cpu_seconds_total) BY (instance, cpu)) BY (instance)","record":"instance:node_cpu:ratio"},{"expr":"sum(rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\",mode!=\"steal\"}[5m]))","record":"cluster:node_cpu:sum_rate5m"},{"expr":"cluster:node_cpu_seconds_total:rate5m / count(sum(node_cpu_seconds_total) BY (instance, cpu))","record":"cluster:node_cpu:ratio"}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kube-scheduler.rules","namespace":"default","resourceVersion":"640498","uid":"e7298085-cd14-4fa9-874d-f2d5c4bc684c"},"spec":{"groups":[{"name":"kube-scheduler.rules","rules":[{"expr":"histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])) without(instance, pod))","labels":{"quantile":"0.99"},"record":"cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])) without(instance, pod))","labels":{"quantile":"0.99"},"record":"cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])) without(instance, pod))","labels":{"quantile":"0.99"},"record":"cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.9, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])) without(instance, pod))","labels":{"quantile":"0.9"},"record":"cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.9, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])) without(instance, pod))","labels":{"quantile":"0.9"},"record":"cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.9, sum(rate(scheduler_binding_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])) without(instance, pod))","labels":{"quantile":"0.9"},"record":"cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.5, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])) without(instance, pod))","labels":{"quantile":"0.5"},"record":"cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.5, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])) without(instance, pod))","labels":{"quantile":"0.5"},"record":"cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.5, sum(rate(scheduler_binding_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])) without(instance, pod))","labels":{"quantile":"0.5"},"record":"cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile"}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kube-state-metrics","namespace":"default","resourceVersion":"640497","uid":"6bfcdd7f-1be6-4241-8105-217ccb793989"},"spec":{"groups":[{"name":"kube-state-metrics","rules":[{"alert":"KubeStateMetricsListErrors","annotations":{"description":"kube-state-metrics is experiencing errors at an elevated rate in list operations. This is likely causing it to not be able to expose metrics about Kubernetes objects correctly or at all.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatemetricslisterrors","summary":"kube-state-metrics is experiencing errors in list operations."},"expr":"(sum(rate(kube_state_metrics_list_total{job=\"kube-state-metrics\",result=\"error\"}[5m]))\n  /\nsum(rate(kube_state_metrics_list_total{job=\"kube-state-metrics\"}[5m])))\n> 0.01","for":"15m","labels":{"severity":"critical"}},{"alert":"KubeStateMetricsWatchErrors","annotations":{"description":"kube-state-metrics is experiencing errors at an elevated rate in watch operations. This is likely causing it to not be able to expose metrics about Kubernetes objects correctly or at all.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatemetricswatcherrors","summary":"kube-state-metrics is experiencing errors in watch operations."},"expr":"(sum(rate(kube_state_metrics_watch_total{job=\"kube-state-metrics\",result=\"error\"}[5m]))\n  /\nsum(rate(kube_state_metrics_watch_total{job=\"kube-state-metrics\"}[5m])))\n> 0.01","for":"15m","labels":{"severity":"critical"}},{"alert":"KubeStateMetricsShardingMismatch","annotations":{"description":"kube-state-metrics pods are running with different --total-shards configuration, some Kubernetes objects may be exposed multiple times or not exposed at all.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatemetricsshardingmismatch","summary":"kube-state-metrics sharding is misconfigured."},"expr":"stdvar (kube_state_metrics_total_shards{job=\"kube-state-metrics\"}) != 0","for":"15m","labels":{"severity":"critical"}},{"alert":"KubeStateMetricsShardsMissing","annotations":{"description":"kube-state-metrics shards are missing, some Kubernetes objects are not being exposed.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatemetricsshardsmissing","summary":"kube-state-metrics shards are missing."},"expr":"2^max(kube_state_metrics_total_shards{job=\"kube-state-metrics\"}) - 1\n  -\nsum( 2 ^ max by (shard_ordinal) (kube_state_metrics_shard_ordinal{job=\"kube-state-metrics\"}) )\n!= 0","for":"15m","labels":{"severity":"critical"}}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kubelet.rules","namespace":"default","resourceVersion":"640512","uid":"f51c71c9-95ce-4b31-86a4-12db34f6b11a"},"spec":{"groups":[{"name":"kubelet.rules","rules":[{"expr":"histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket[5m])) by (instance, le) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\", metrics_path=\"/metrics\"})","labels":{"quantile":"0.99"},"record":"node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.9, sum(rate(kubelet_pleg_relist_duration_seconds_bucket[5m])) by (instance, le) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\", metrics_path=\"/metrics\"})","labels":{"quantile":"0.9"},"record":"node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile"},{"expr":"histogram_quantile(0.5, sum(rate(kubelet_pleg_relist_duration_seconds_bucket[5m])) by (instance, le) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\", metrics_path=\"/metrics\"})","labels":{"quantile":"0.5"},"record":"node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile"}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kubernetes-apps","namespace":"default","resourceVersion":"640509","uid":"36bac2e9-636c-40a7-bcaa-fe3a9a849e94"},"spec":{"groups":[{"name":"kubernetes-apps","rules":[{"alert":"KubePodCrashLooping","annotations":{"description":"Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container }}) is restarting {{ printf \"%.2f\" $value }} times / 10 minutes.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodcrashlooping","summary":"Pod is crash looping."},"expr":"increase(kube_pod_container_status_restarts_total{job=\"kube-state-metrics\", namespace=~\".*\"}[10m]) > 0\nand\nkube_pod_container_status_waiting{job=\"kube-state-metrics\", namespace=~\".*\"} == 1","for":"15m","labels":{"severity":"warning"}},{"alert":"KubePodNotReady","annotations":{"description":"Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready state for longer than 15 minutes.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodnotready","summary":"Pod has been in a non-ready state for more than 15 minutes."},"expr":"sum by (namespace, pod) (\n  max by(namespace, pod) (\n    kube_pod_status_phase{job=\"kube-state-metrics\", namespace=~\".*\", phase=~\"Pending|Unknown\"}\n  ) * on(namespace, pod) group_left(owner_kind) topk by(namespace, pod) (\n    1, max by(namespace, pod, owner_kind) (kube_pod_owner{owner_kind!=\"Job\"})\n  )\n) > 0","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeDeploymentGenerationMismatch","annotations":{"description":"Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment }} does not match, this indicates that the Deployment has failed but has not been rolled back.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentgenerationmismatch","summary":"Deployment generation mismatch due to possible roll-back"},"expr":"kube_deployment_status_observed_generation{job=\"kube-state-metrics\", namespace=~\".*\"}\n  !=\nkube_deployment_metadata_generation{job=\"kube-state-metrics\", namespace=~\".*\"}","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeDeploymentReplicasMismatch","annotations":{"description":"Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has not matched the expected number of replicas for longer than 15 minutes.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentreplicasmismatch","summary":"Deployment has not matched the expected number of replicas."},"expr":"(\n  kube_deployment_spec_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}\n    >\n  kube_deployment_status_replicas_available{job=\"kube-state-metrics\", namespace=~\".*\"}\n) and (\n  changes(kube_deployment_status_replicas_updated{job=\"kube-state-metrics\", namespace=~\".*\"}[10m])\n    ==\n  0\n)","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeStatefulSetReplicasMismatch","annotations":{"description":"StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has not matched the expected number of replicas for longer than 15 minutes.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetreplicasmismatch","summary":"Deployment has not matched the expected number of replicas."},"expr":"(\n  kube_statefulset_status_replicas_ready{job=\"kube-state-metrics\", namespace=~\".*\"}\n    !=\n  kube_statefulset_status_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}\n) and (\n  changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\", namespace=~\".*\"}[10m])\n    ==\n  0\n)","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeStatefulSetGenerationMismatch","annotations":{"description":"StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset }} does not match, this indicates that the StatefulSet has failed but has not been rolled back.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetgenerationmismatch","summary":"StatefulSet generation mismatch due to possible roll-back"},"expr":"kube_statefulset_status_observed_generation{job=\"kube-state-metrics\", namespace=~\".*\"}\n  !=\nkube_statefulset_metadata_generation{job=\"kube-state-metrics\", namespace=~\".*\"}","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeStatefulSetUpdateNotRolledOut","annotations":{"description":"StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} update has not been rolled out.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetupdatenotrolledout","summary":"StatefulSet update has not been rolled out."},"expr":"(\n  max without (revision) (\n    kube_statefulset_status_current_revision{job=\"kube-state-metrics\", namespace=~\".*\"}\n      unless\n    kube_statefulset_status_update_revision{job=\"kube-state-metrics\", namespace=~\".*\"}\n  )\n    *\n  (\n    kube_statefulset_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}\n      !=\n    kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\", namespace=~\".*\"}\n  )\n)  and (\n  changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\", namespace=~\".*\"}[5m])\n    ==\n  0\n)","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeDaemonSetRolloutStuck","annotations":{"description":"DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} has not finished or progressed for at least 15 minutes.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetrolloutstuck","summary":"DaemonSet rollout is stuck."},"expr":"(\n  (\n    kube_daemonset_status_current_number_scheduled{job=\"kube-state-metrics\", namespace=~\".*\"}\n     !=\n    kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\", namespace=~\".*\"}\n  ) or (\n    kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\", namespace=~\".*\"}\n     !=\n    0\n  ) or (\n    kube_daemonset_updated_number_scheduled{job=\"kube-state-metrics\", namespace=~\".*\"}\n     !=\n    kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\", namespace=~\".*\"}\n  ) or (\n    kube_daemonset_status_number_available{job=\"kube-state-metrics\", namespace=~\".*\"}\n     !=\n    kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\", namespace=~\".*\"}\n  )\n) and (\n  changes(kube_daemonset_updated_number_scheduled{job=\"kube-state-metrics\", namespace=~\".*\"}[5m])\n    ==\n  0\n)","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeContainerWaiting","annotations":{"description":"Pod {{ $labels.namespace }}/{{ $labels.pod }} container {{ $labels.container}} has been in waiting state for longer than 1 hour.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontainerwaiting","summary":"Pod container waiting longer than 1 hour"},"expr":"sum by (namespace, pod, container) (kube_pod_container_status_waiting_reason{job=\"kube-state-metrics\", namespace=~\".*\"}) > 0","for":"1h","labels":{"severity":"warning"}},{"alert":"KubeDaemonSetNotScheduled","annotations":{"description":"{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are not scheduled.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetnotscheduled","summary":"DaemonSet pods are not scheduled."},"expr":"kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\", namespace=~\".*\"}\n  -\nkube_daemonset_status_current_number_scheduled{job=\"kube-state-metrics\", namespace=~\".*\"} > 0","for":"10m","labels":{"severity":"warning"}},{"alert":"KubeDaemonSetMisScheduled","annotations":{"description":"{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are running where they are not supposed to run.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetmisscheduled","summary":"DaemonSet pods are misscheduled."},"expr":"kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\", namespace=~\".*\"} > 0","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeJobCompletion","annotations":{"description":"Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking more than 12 hours to complete.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobcompletion","summary":"Job did not complete in time"},"expr":"kube_job_spec_completions{job=\"kube-state-metrics\", namespace=~\".*\"} - kube_job_status_succeeded{job=\"kube-state-metrics\", namespace=~\".*\"}  > 0","for":"12h","labels":{"severity":"warning"}},{"alert":"KubeJobFailed","annotations":{"description":"Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to complete. Removing failed job after investigation should clear this alert.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobfailed","summary":"Job failed to complete."},"expr":"kube_job_failed{job=\"kube-state-metrics\", namespace=~\".*\"}  > 0","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeHpaReplicasMismatch","annotations":{"description":"HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }} has not matched the desired number of replicas for longer than 15 minutes.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpareplicasmismatch","summary":"HPA has not matched descired number of replicas."},"expr":"(kube_horizontalpodautoscaler_status_desired_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}\n  !=\nkube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\", namespace=~\".*\"})\n  and\n(kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}\n  >\nkube_horizontalpodautoscaler_spec_min_replicas{job=\"kube-state-metrics\", namespace=~\".*\"})\n  and\n(kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}\n  <\nkube_horizontalpodautoscaler_spec_max_replicas{job=\"kube-state-metrics\", namespace=~\".*\"})\n  and\nchanges(kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}[15m]) == 0","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeHpaMaxedOut","annotations":{"description":"HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }} has been running at max replicas for longer than 15 minutes.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpamaxedout","summary":"HPA is running at max replicas"},"expr":"kube_horizontalpodautoscaler_status_current_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}\n  ==\nkube_horizontalpodautoscaler_spec_max_replicas{job=\"kube-state-metrics\", namespace=~\".*\"}","for":"15m","labels":{"severity":"warning"}}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kubernetes-resources","namespace":"default","resourceVersion":"640502","uid":"528e8d8e-1dc5-453b-90e3-39f13c505af9"},"spec":{"groups":[{"name":"kubernetes-resources","rules":[{"alert":"KubeCPUOvercommit","annotations":{"description":"Cluster has overcommitted CPU resource requests for Pods and cannot tolerate node failure.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuovercommit","summary":"Cluster has overcommitted CPU resource requests."},"expr":"sum(namespace_cpu:kube_pod_container_resource_requests:sum{})\n  /\nsum(kube_node_status_allocatable{resource=\"cpu\"})\n  >\n((count(kube_node_status_allocatable{resource=\"cpu\"}) > 1) - 1) / count(kube_node_status_allocatable{resource=\"cpu\"})","for":"5m","labels":{"severity":"warning"}},{"alert":"KubeMemoryOvercommit","annotations":{"description":"Cluster has overcommitted memory resource requests for Pods and cannot tolerate node failure.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryovercommit","summary":"Cluster has overcommitted memory resource requests."},"expr":"sum(namespace_memory:kube_pod_container_resource_requests:sum{})\n  /\nsum(kube_node_status_allocatable{resource=\"memory\"})\n  >\n((count(kube_node_status_allocatable{resource=\"memory\"}) > 1) - 1)\n  /\ncount(kube_node_status_allocatable{resource=\"memory\"})","for":"5m","labels":{"severity":"warning"}},{"alert":"KubeCPUQuotaOvercommit","annotations":{"description":"Cluster has overcommitted CPU resource requests for Namespaces.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuquotaovercommit","summary":"Cluster has overcommitted CPU resource requests."},"expr":"sum(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\", resource=\"cpu\"})\n  /\nsum(kube_node_status_allocatable{resource=\"cpu\"})\n  > 1.5","for":"5m","labels":{"severity":"warning"}},{"alert":"KubeMemoryQuotaOvercommit","annotations":{"description":"Cluster has overcommitted memory resource requests for Namespaces.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryquotaovercommit","summary":"Cluster has overcommitted memory resource requests."},"expr":"sum(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\", resource=\"memory\"})\n  /\nsum(kube_node_status_allocatable{resource=\"memory\",job=\"kube-state-metrics\"})\n  > 1.5","for":"5m","labels":{"severity":"warning"}},{"alert":"KubeQuotaAlmostFull","annotations":{"description":"Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaalmostfull","summary":"Namespace quota is going to be full."},"expr":"kube_resourcequota{job=\"kube-state-metrics\", type=\"used\"}\n  / ignoring(instance, job, type)\n(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\"} > 0)\n  > 0.9 < 1","for":"15m","labels":{"severity":"info"}},{"alert":"KubeQuotaFullyUsed","annotations":{"description":"Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotafullyused","summary":"Namespace quota is fully used."},"expr":"kube_resourcequota{job=\"kube-state-metrics\", type=\"used\"}\n  / ignoring(instance, job, type)\n(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\"} > 0)\n  == 1","for":"15m","labels":{"severity":"info"}},{"alert":"KubeQuotaExceeded","annotations":{"description":"Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaexceeded","summary":"Namespace quota has exceeded the limits."},"expr":"kube_resourcequota{job=\"kube-state-metrics\", type=\"used\"}\n  / ignoring(instance, job, type)\n(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\"} > 0)\n  > 1","for":"15m","labels":{"severity":"warning"}},{"alert":"CPUThrottlingHigh","annotations":{"description":"{{ $value | humanizePercentage }} throttling of CPU in namespace {{ $labels.namespace }} for container {{ $labels.container }} in pod {{ $labels.pod }}.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-cputhrottlinghigh","summary":"Processes experience elevated CPU throttling."},"expr":"sum(increase(container_cpu_cfs_throttled_periods_total{container!=\"\", }[5m])) by (container, pod, namespace)\n  /\nsum(increase(container_cpu_cfs_periods_total{}[5m])) by (container, pod, namespace)\n  > ( 25 / 100 )","for":"15m","labels":{"severity":"info"}}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kubernetes-storage","namespace":"default","resourceVersion":"640495","uid":"79d42d8c-66a8-4bff-b7ee-a66b34192b33"},"spec":{"groups":[{"name":"kubernetes-storage","rules":[{"alert":"KubePersistentVolumeFillingUp","annotations":{"description":"The PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} is only {{ $value | humanizePercentage }} free.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefillingup","summary":"PersistentVolume is filling up."},"expr":"(\n  kubelet_volume_stats_available_bytes{job=\"kubelet\", namespace=~\".*\", metrics_path=\"/metrics\"}\n    /\n  kubelet_volume_stats_capacity_bytes{job=\"kubelet\", namespace=~\".*\", metrics_path=\"/metrics\"}\n) < 0.03\nand\nkubelet_volume_stats_used_bytes{job=\"kubelet\", namespace=~\".*\", metrics_path=\"/metrics\"} > 0","for":"1m","labels":{"severity":"critical"}},{"alert":"KubePersistentVolumeFillingUp","annotations":{"description":"Based on recent sampling, the PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} is expected to fill up within four days. Currently {{ $value | humanizePercentage }} is available.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefillingup","summary":"PersistentVolume is filling up."},"expr":"(\n  kubelet_volume_stats_available_bytes{job=\"kubelet\", namespace=~\".*\", metrics_path=\"/metrics\"}\n    /\n  kubelet_volume_stats_capacity_bytes{job=\"kubelet\", namespace=~\".*\", metrics_path=\"/metrics\"}\n) < 0.15\nand\nkubelet_volume_stats_used_bytes{job=\"kubelet\", namespace=~\".*\", metrics_path=\"/metrics\"} > 0\nand\npredict_linear(kubelet_volume_stats_available_bytes{job=\"kubelet\", namespace=~\".*\", metrics_path=\"/metrics\"}[6h], 4 * 24 * 3600) < 0","for":"1h","labels":{"severity":"warning"}},{"alert":"KubePersistentVolumeErrors","annotations":{"description":"The persistent volume {{ $labels.persistentvolume }} has status {{ $labels.phase }}.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumeerrors","summary":"PersistentVolume is having issues with provisioning."},"expr":"kube_persistentvolume_status_phase{phase=~\"Failed|Pending\",job=\"kube-state-metrics\"} > 0","for":"5m","labels":{"severity":"critical"}}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kubernetes-system","namespace":"default","resourceVersion":"640519","uid":"16db9414-3d64-423d-8f5b-1bbeeb06ac01"},"spec":{"groups":[{"name":"kubernetes-system","rules":[{"alert":"KubeVersionMismatch","annotations":{"description":"There are {{ $value }} different semantic versions of Kubernetes components running.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeversionmismatch","summary":"Different semantic versions of Kubernetes components running."},"expr":"count(count by (git_version) (label_replace(kubernetes_build_info{job!~\"kube-dns|coredns\"},\"git_version\",\"$1\",\"git_version\",\"(v[0-9]*.[0-9]*).*\"))) > 1","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeClientErrors","annotations":{"description":"Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance }}' is experiencing {{ $value | humanizePercentage }} errors.'","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclienterrors","summary":"Kubernetes API server client is experiencing errors."},"expr":"(sum(rate(rest_client_requests_total{code=~\"5..\"}[5m])) by (instance, job)\n  /\nsum(rate(rest_client_requests_total[5m])) by (instance, job))\n> 0.01","for":"15m","labels":{"severity":"warning"}}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kubernetes-system-apiserver","namespace":"default","resourceVersion":"640507","uid":"f1599f4a-65ed-4c14-aea8-7a60cf007d86"},"spec":{"groups":[{"name":"kubernetes-system-apiserver","rules":[{"alert":"KubeClientCertificateExpiration","annotations":{"description":"A client certificate used to authenticate to the apiserver is expiring in less than 7.0 days.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration","summary":"Client certificate is about to expire."},"expr":"apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 604800","labels":{"severity":"warning"}},{"alert":"KubeClientCertificateExpiration","annotations":{"description":"A client certificate used to authenticate to the apiserver is expiring in less than 24.0 hours.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration","summary":"Client certificate is about to expire."},"expr":"apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 86400","labels":{"severity":"critical"}},{"alert":"AggregatedAPIErrors","annotations":{"description":"An aggregated API {{ $labels.name }}/{{ $labels.namespace }} has reported errors. It has appeared unavailable {{ $value | humanize }} times averaged over the past 10m.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-aggregatedapierrors","summary":"An aggregated API has reported errors."},"expr":"sum by(name, namespace)(increase(aggregator_unavailable_apiservice_total[10m])) > 4","labels":{"severity":"warning"}},{"alert":"AggregatedAPIDown","annotations":{"description":"An aggregated API {{ $labels.name }}/{{ $labels.namespace }} has been only {{ $value | humanize }}% available over the last 10m.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-aggregatedapidown","summary":"An aggregated API is down."},"expr":"(1 - max by(name, namespace)(avg_over_time(aggregator_unavailable_apiservice[10m]))) * 100 < 85","for":"5m","labels":{"severity":"warning"}},{"alert":"KubeAPIDown","annotations":{"description":"KubeAPI has disappeared from Prometheus target discovery.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapidown","summary":"Target disappeared from Prometheus target discovery."},"expr":"absent(up{job=\"apiserver\"} == 1)","for":"15m","labels":{"severity":"critical"}},{"alert":"KubeAPITerminatedRequests","annotations":{"description":"The apiserver has terminated {{ $value | humanizePercentage }} of its incoming requests.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapiterminatedrequests","summary":"The apiserver has terminated {{ $value | humanizePercentage }} of its incoming requests."},"expr":"sum(rate(apiserver_request_terminations_total{job=\"apiserver\"}[10m]))  / (  sum(rate(apiserver_request_total{job=\"apiserver\"}[10m])) + sum(rate(apiserver_request_terminations_total{job=\"apiserver\"}[10m])) ) > 0.20","for":"5m","labels":{"severity":"warning"}}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kubernetes-system-controller-manager","namespace":"default","resourceVersion":"640494","uid":"8db677dd-e2b5-4324-8276-93362185ffdb"},"spec":{"groups":[{"name":"kubernetes-system-controller-manager","rules":[{"alert":"KubeControllerManagerDown","annotations":{"description":"KubeControllerManager has disappeared from Prometheus target discovery.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontrollermanagerdown","summary":"Target disappeared from Prometheus target discovery."},"expr":"absent(up{job=\"kube-controller-manager\"} == 1)","for":"15m","labels":{"severity":"critical"}}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kubernetes-system-kubelet","namespace":"default","resourceVersion":"640514","uid":"78b19e2d-5e4d-43b5-9192-ed6e5fc4f56d"},"spec":{"groups":[{"name":"kubernetes-system-kubelet","rules":[{"alert":"KubeNodeNotReady","annotations":{"description":"{{ $labels.node }} has been unready for more than 15 minutes.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodenotready","summary":"Node is not ready."},"expr":"kube_node_status_condition{job=\"kube-state-metrics\",condition=\"Ready\",status=\"true\"} == 0","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeNodeUnreachable","annotations":{"description":"{{ $labels.node }} is unreachable and some workloads may be rescheduled.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodeunreachable","summary":"Node is unreachable."},"expr":"(kube_node_spec_taint{job=\"kube-state-metrics\",key=\"node.kubernetes.io/unreachable\",effect=\"NoSchedule\"} unless ignoring(key,value) kube_node_spec_taint{job=\"kube-state-metrics\",key=~\"ToBeDeletedByClusterAutoscaler|cloud.google.com/impending-node-termination|aws-node-termination-handler/spot-itn\"}) == 1","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeletTooManyPods","annotations":{"description":"Kubelet '{{ $labels.node }}' is running at {{ $value | humanizePercentage }} of its Pod capacity.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubelettoomanypods","summary":"Kubelet is running at capacity."},"expr":"count by(node) (\n  (kube_pod_status_phase{job=\"kube-state-metrics\",phase=\"Running\"} == 1) * on(instance,pod,namespace,cluster) group_left(node) topk by(instance,pod,namespace,cluster) (1, kube_pod_info{job=\"kube-state-metrics\"})\n)\n/\nmax by(node) (\n  kube_node_status_capacity{job=\"kube-state-metrics\",resource=\"pods\"} != 1\n) > 0.95","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeNodeReadinessFlapping","annotations":{"description":"The readiness status of node {{ $labels.node }} has changed {{ $value }} times in the last 15 minutes.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodereadinessflapping","summary":"Node readiness status is flapping."},"expr":"sum(changes(kube_node_status_condition{status=\"true\",condition=\"Ready\"}[15m])) by (node) > 2","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeletPlegDurationHigh","annotations":{"description":"The Kubelet Pod Lifecycle Event Generator has a 99th percentile duration of {{ $value }} seconds on node {{ $labels.node }}.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletplegdurationhigh","summary":"Kubelet Pod Lifecycle Event Generator is taking too long to relist."},"expr":"node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile=\"0.99\"} >= 10","for":"5m","labels":{"severity":"warning"}},{"alert":"KubeletPodStartUpLatencyHigh","annotations":{"description":"Kubelet Pod startup 99th percentile latency is {{ $value }} seconds on node {{ $labels.node }}.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletpodstartuplatencyhigh","summary":"Kubelet Pod startup latency is too high."},"expr":"histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{job=\"kubelet\", metrics_path=\"/metrics\"}[5m])) by (instance, le)) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\", metrics_path=\"/metrics\"} > 60","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeletClientCertificateExpiration","annotations":{"description":"Client certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificateexpiration","summary":"Kubelet client certificate is about to expire."},"expr":"kubelet_certificate_manager_client_ttl_seconds < 604800","labels":{"severity":"warning"}},{"alert":"KubeletClientCertificateExpiration","annotations":{"description":"Client certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificateexpiration","summary":"Kubelet client certificate is about to expire."},"expr":"kubelet_certificate_manager_client_ttl_seconds < 86400","labels":{"severity":"critical"}},{"alert":"KubeletServerCertificateExpiration","annotations":{"description":"Server certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificateexpiration","summary":"Kubelet server certificate is about to expire."},"expr":"kubelet_certificate_manager_server_ttl_seconds < 604800","labels":{"severity":"warning"}},{"alert":"KubeletServerCertificateExpiration","annotations":{"description":"Server certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificateexpiration","summary":"Kubelet server certificate is about to expire."},"expr":"kubelet_certificate_manager_server_ttl_seconds < 86400","labels":{"severity":"critical"}},{"alert":"KubeletClientCertificateRenewalErrors","annotations":{"description":"Kubelet on node {{ $labels.node }} has failed to renew its client certificate ({{ $value | humanize }} errors in the last 5 minutes).","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificaterenewalerrors","summary":"Kubelet has failed to renew its client certificate."},"expr":"increase(kubelet_certificate_manager_client_expiration_renew_errors[5m]) > 0","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeletServerCertificateRenewalErrors","annotations":{"description":"Kubelet on node {{ $labels.node }} has failed to renew its server certificate ({{ $value | humanize }} errors in the last 5 minutes).","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificaterenewalerrors","summary":"Kubelet has failed to renew its server certificate."},"expr":"increase(kubelet_server_expiration_renew_errors[5m]) > 0","for":"15m","labels":{"severity":"warning"}},{"alert":"KubeletDown","annotations":{"description":"Kubelet has disappeared from Prometheus target discovery.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletdown","summary":"Target disappeared from Prometheus target discovery."},"expr":"absent(up{job=\"kubelet\", metrics_path=\"/metrics\"} == 1)","for":"15m","labels":{"severity":"critical"}}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-kubernetes-system-scheduler","namespace":"default","resourceVersion":"640491","uid":"1ca83c25-cbb9-4c83-b7d0-9c8ab97d0e94"},"spec":{"groups":[{"name":"kubernetes-system-scheduler","rules":[{"alert":"KubeSchedulerDown","annotations":{"description":"KubeScheduler has disappeared from Prometheus target discovery.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeschedulerdown","summary":"Target disappeared from Prometheus target discovery."},"expr":"absent(up{job=\"kube-scheduler\"} == 1)","for":"15m","labels":{"severity":"critical"}}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-node-exporter","namespace":"default","resourceVersion":"640505","uid":"bd7d2eab-7b1c-4d64-aace-e8828364da32"},"spec":{"groups":[{"name":"node-exporter","rules":[{"alert":"NodeFilesystemSpaceFillingUp","annotations":{"description":"Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available space left and is filling up.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemspacefillingup","summary":"Filesystem is predicted to run out of space within the next 24 hours."},"expr":"(\n  node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 40\nand\n  predict_linear(node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"}[6h], 24*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n)","for":"1h","labels":{"severity":"warning"}},{"alert":"NodeFilesystemSpaceFillingUp","annotations":{"description":"Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available space left and is filling up fast.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemspacefillingup","summary":"Filesystem is predicted to run out of space within the next 4 hours."},"expr":"(\n  node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 15\nand\n  predict_linear(node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"}[6h], 4*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n)","for":"1h","labels":{"severity":"critical"}},{"alert":"NodeFilesystemAlmostOutOfSpace","annotations":{"description":"Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available space left.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemalmostoutofspace","summary":"Filesystem has less than 5% space left."},"expr":"(\n  node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 5\nand\n  node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n)","for":"1h","labels":{"severity":"warning"}},{"alert":"NodeFilesystemAlmostOutOfSpace","annotations":{"description":"Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available space left.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemalmostoutofspace","summary":"Filesystem has less than 3% space left."},"expr":"(\n  node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 3\nand\n  node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n)","for":"1h","labels":{"severity":"critical"}},{"alert":"NodeFilesystemFilesFillingUp","annotations":{"description":"Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available inodes left and is filling up.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemfilesfillingup","summary":"Filesystem is predicted to run out of inodes within the next 24 hours."},"expr":"(\n  node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_files{job=\"node-exporter\",fstype!=\"\"} * 100 < 40\nand\n  predict_linear(node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"}[6h], 24*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n)","for":"1h","labels":{"severity":"warning"}},{"alert":"NodeFilesystemFilesFillingUp","annotations":{"description":"Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available inodes left and is filling up fast.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemfilesfillingup","summary":"Filesystem is predicted to run out of inodes within the next 4 hours."},"expr":"(\n  node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_files{job=\"node-exporter\",fstype!=\"\"} * 100 < 20\nand\n  predict_linear(node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"}[6h], 4*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n)","for":"1h","labels":{"severity":"critical"}},{"alert":"NodeFilesystemAlmostOutOfFiles","annotations":{"description":"Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available inodes left.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemalmostoutoffiles","summary":"Filesystem has less than 5% inodes left."},"expr":"(\n  node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_files{job=\"node-exporter\",fstype!=\"\"} * 100 < 5\nand\n  node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n)","for":"1h","labels":{"severity":"warning"}},{"alert":"NodeFilesystemAlmostOutOfFiles","annotations":{"description":"Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available inodes left.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemalmostoutoffiles","summary":"Filesystem has less than 3% inodes left."},"expr":"(\n  node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_files{job=\"node-exporter\",fstype!=\"\"} * 100 < 3\nand\n  node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n)","for":"1h","labels":{"severity":"critical"}},{"alert":"NodeNetworkReceiveErrs","annotations":{"description":"{{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} receive errors in the last two minutes.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodenetworkreceiveerrs","summary":"Network interface is reporting many receive errors."},"expr":"rate(node_network_receive_errs_total[2m]) / rate(node_network_receive_packets_total[2m]) > 0.01","for":"1h","labels":{"severity":"warning"}},{"alert":"NodeNetworkTransmitErrs","annotations":{"description":"{{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} transmit errors in the last two minutes.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodenetworktransmiterrs","summary":"Network interface is reporting many transmit errors."},"expr":"rate(node_network_transmit_errs_total[2m]) / rate(node_network_transmit_packets_total[2m]) > 0.01","for":"1h","labels":{"severity":"warning"}},{"alert":"NodeHighNumberConntrackEntriesUsed","annotations":{"description":"{{ $value | humanizePercentage }} of conntrack entries are used.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodehighnumberconntrackentriesused","summary":"Number of conntrack are getting close to the limit."},"expr":"(node_nf_conntrack_entries / node_nf_conntrack_entries_limit) > 0.75","labels":{"severity":"warning"}},{"alert":"NodeTextFileCollectorScrapeError","annotations":{"description":"Node Exporter text file collector failed to scrape.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodetextfilecollectorscrapeerror","summary":"Node Exporter text file collector failed to scrape."},"expr":"node_textfile_scrape_error{job=\"node-exporter\"} == 1","labels":{"severity":"warning"}},{"alert":"NodeClockSkewDetected","annotations":{"description":"Clock on {{ $labels.instance }} is out of sync by more than 300s. Ensure NTP is configured correctly on this host.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodeclockskewdetected","summary":"Clock skew detected."},"expr":"(\n  node_timex_offset_seconds > 0.05\nand\n  deriv(node_timex_offset_seconds[5m]) >= 0\n)\nor\n(\n  node_timex_offset_seconds < -0.05\nand\n  deriv(node_timex_offset_seconds[5m]) <= 0\n)","for":"10m","labels":{"severity":"warning"}},{"alert":"NodeClockNotSynchronising","annotations":{"description":"Clock on {{ $labels.instance }} is not synchronising. Ensure NTP is configured on this host.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodeclocknotsynchronising","summary":"Clock not synchronising."},"expr":"min_over_time(node_timex_sync_status[5m]) == 0\nand\nnode_timex_maxerror_seconds >= 16","for":"10m","labels":{"severity":"warning"}},{"alert":"NodeRAIDDegraded","annotations":{"description":"RAID array '{{ $labels.device }}' on {{ $labels.instance }} is in degraded state due to one or more disks failures. Number of spare drives is insufficient to fix issue automatically.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-noderaiddegraded","summary":"RAID Array is degraded"},"expr":"node_md_disks_required - ignoring (state) (node_md_disks{state=\"active\"}) > 0","for":"15m","labels":{"severity":"critical"}},{"alert":"NodeRAIDDiskFailure","annotations":{"description":"At least one device in RAID array on {{ $labels.instance }} failed. Array '{{ $labels.device }}' needs attention and possibly a disk swap.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-noderaiddiskfailure","summary":"Failed device in RAID array"},"expr":"node_md_disks{state=\"failed\"} > 0","labels":{"severity":"warning"}},{"alert":"NodeFileDescriptorLimit","annotations":{"description":"File descriptors limit at {{ $labels.instance }} is currently at {{ printf \"%.2f\" $value }}%.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefiledescriptorlimit","summary":"Kernel is predicted to exhaust file descriptors limit soon."},"expr":"(\n  node_filefd_allocated{job=\"node-exporter\"} * 100 / node_filefd_maximum{job=\"node-exporter\"} > 70\n)","for":"15m","labels":{"severity":"warning"}},{"alert":"NodeFileDescriptorLimit","annotations":{"description":"File descriptors limit at {{ $labels.instance }} is currently at {{ printf \"%.2f\" $value }}%.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefiledescriptorlimit","summary":"Kernel is predicted to exhaust file descriptors limit soon."},"expr":"(\n  node_filefd_allocated{job=\"node-exporter\"} * 100 / node_filefd_maximum{job=\"node-exporter\"} > 90\n)","for":"15m","labels":{"severity":"critical"}}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-node-exporter.rules","namespace":"default","resourceVersion":"640496","uid":"b8cfbeba-3159-43b5-a605-b4fea05ffe46"},"spec":{"groups":[{"name":"node-exporter.rules","rules":[{"expr":"count without (cpu) (\n  count without (mode) (\n    node_cpu_seconds_total{job=\"node-exporter\"}\n  )\n)","record":"instance:node_num_cpu:sum"},{"expr":"1 - avg without (cpu, mode) (\n  rate(node_cpu_seconds_total{job=\"node-exporter\", mode=\"idle\"}[5m])\n)","record":"instance:node_cpu_utilisation:rate5m"},{"expr":"(\n  node_load1{job=\"node-exporter\"}\n/\n  instance:node_num_cpu:sum{job=\"node-exporter\"}\n)","record":"instance:node_load1_per_cpu:ratio"},{"expr":"1 - (\n  node_memory_MemAvailable_bytes{job=\"node-exporter\"}\n/\n  node_memory_MemTotal_bytes{job=\"node-exporter\"}\n)","record":"instance:node_memory_utilisation:ratio"},{"expr":"rate(node_vmstat_pgmajfault{job=\"node-exporter\"}[5m])","record":"instance:node_vmstat_pgmajfault:rate5m"},{"expr":"rate(node_disk_io_time_seconds_total{job=\"node-exporter\", device=~\"mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\"}[5m])","record":"instance_device:node_disk_io_time_seconds:rate5m"},{"expr":"rate(node_disk_io_time_weighted_seconds_total{job=\"node-exporter\", device=~\"mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\"}[5m])","record":"instance_device:node_disk_io_time_weighted_seconds:rate5m"},{"expr":"sum without (device) (\n  rate(node_network_receive_bytes_total{job=\"node-exporter\", device!=\"lo\"}[5m])\n)","record":"instance:node_network_receive_bytes_excluding_lo:rate5m"},{"expr":"sum without (device) (\n  rate(node_network_transmit_bytes_total{job=\"node-exporter\", device!=\"lo\"}[5m])\n)","record":"instance:node_network_transmit_bytes_excluding_lo:rate5m"},{"expr":"sum without (device) (\n  rate(node_network_receive_drop_total{job=\"node-exporter\", device!=\"lo\"}[5m])\n)","record":"instance:node_network_receive_drop_excluding_lo:rate5m"},{"expr":"sum without (device) (\n  rate(node_network_transmit_drop_total{job=\"node-exporter\", device!=\"lo\"}[5m])\n)","record":"instance:node_network_transmit_drop_excluding_lo:rate5m"}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-node-network","namespace":"default","resourceVersion":"640499","uid":"c2718b80-971f-4a23-b25d-abe10850fc37"},"spec":{"groups":[{"name":"node-network","rules":[{"alert":"NodeNetworkInterfaceFlapping","annotations":{"description":"Network interface \"{{ $labels.device }}\" changing it's up status often on node-exporter {{ $labels.namespace }}/{{ $labels.pod }}","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodenetworkinterfaceflapping","summary":"Network interface is often changin it's status"},"expr":"changes(node_network_up{job=\"node-exporter\",device!~\"veth.+\"}[2m]) > 2","for":"2m","labels":{"severity":"warning"}}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-node.rules","namespace":"default","resourceVersion":"640508","uid":"d60a7895-3f8c-42e0-90d0-dddbc275c2ab"},"spec":{"groups":[{"name":"node.rules","rules":[{"expr":"topk by(namespace, pod) (1,\n  max by (node, namespace, pod) (\n    label_replace(kube_pod_info{job=\"kube-state-metrics\",node!=\"\"}, \"pod\", \"$1\", \"pod\", \"(.*)\")\n))","record":"node_namespace_pod:kube_pod_info:"},{"expr":"count by (cluster, node) (sum by (node, cpu) (\n  node_cpu_seconds_total{job=\"node-exporter\"}\n* on (namespace, pod) group_left(node)\n  topk by(namespace, pod) (1, node_namespace_pod:kube_pod_info:)\n))","record":"node:node_num_cpu:sum"},{"expr":"sum(\n  node_memory_MemAvailable_bytes{job=\"node-exporter\"} or\n  (\n    node_memory_Buffers_bytes{job=\"node-exporter\"} +\n    node_memory_Cached_bytes{job=\"node-exporter\"} +\n    node_memory_MemFree_bytes{job=\"node-exporter\"} +\n    node_memory_Slab_bytes{job=\"node-exporter\"}\n  )\n) by (cluster)","record":":node_memory_MemAvailable_bytes:sum"}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-prometheus","namespace":"default","resourceVersion":"640513","uid":"1d3e9336-8580-4c35-928c-b5bfbef4f634"},"spec":{"groups":[{"name":"prometheus","rules":[{"alert":"PrometheusBadConfig","annotations":{"description":"Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to reload its configuration.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusbadconfig","summary":"Failed Prometheus configuration reload."},"expr":"# Without max_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\nmax_over_time(prometheus_config_last_reload_successful{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) == 0","for":"10m","labels":{"severity":"critical"}},{"alert":"PrometheusNotificationQueueRunningFull","annotations":{"description":"Alert notification queue of Prometheus {{$labels.namespace}}/{{$labels.pod}} is running full.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusnotificationqueuerunningfull","summary":"Prometheus alert notification queue predicted to run full in less than 30m."},"expr":"# Without min_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n(\n  predict_linear(prometheus_notifications_queue_length{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m], 60 * 30)\n>\n  min_over_time(prometheus_notifications_queue_capacity{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n)","for":"15m","labels":{"severity":"warning"}},{"alert":"PrometheusErrorSendingAlertsToSomeAlertmanagers","annotations":{"description":"{{ printf \"%.1f\" $value }}% errors while sending alerts from Prometheus {{$labels.namespace}}/{{$labels.pod}} to Alertmanager {{$labels.alertmanager}}.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheuserrorsendingalertstosomealertmanagers","summary":"Prometheus has encountered more than 1% errors sending alerts to a specific Alertmanager."},"expr":"(\n  rate(prometheus_notifications_errors_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n/\n  rate(prometheus_notifications_sent_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n)\n* 100\n> 1","for":"15m","labels":{"severity":"warning"}},{"alert":"PrometheusNotConnectedToAlertmanagers","annotations":{"description":"Prometheus {{$labels.namespace}}/{{$labels.pod}} is not connected to any Alertmanagers.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusnotconnectedtoalertmanagers","summary":"Prometheus is not connected to any Alertmanagers."},"expr":"# Without max_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\nmax_over_time(prometheus_notifications_alertmanagers_discovered{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) < 1","for":"10m","labels":{"severity":"warning"}},{"alert":"PrometheusTSDBReloadsFailing","annotations":{"description":"Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value | humanize}} reload failures over the last 3h.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheustsdbreloadsfailing","summary":"Prometheus has issues reloading blocks from disk."},"expr":"increase(prometheus_tsdb_reloads_failures_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[3h]) > 0","for":"4h","labels":{"severity":"warning"}},{"alert":"PrometheusTSDBCompactionsFailing","annotations":{"description":"Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value | humanize}} compaction failures over the last 3h.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheustsdbcompactionsfailing","summary":"Prometheus has issues compacting blocks."},"expr":"increase(prometheus_tsdb_compactions_failed_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[3h]) > 0","for":"4h","labels":{"severity":"warning"}},{"alert":"PrometheusNotIngestingSamples","annotations":{"description":"Prometheus {{$labels.namespace}}/{{$labels.pod}} is not ingesting samples.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusnotingestingsamples","summary":"Prometheus is not ingesting samples."},"expr":"(\n  rate(prometheus_tsdb_head_samples_appended_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) <= 0\nand\n  (\n    sum without(scrape_job) (prometheus_target_metadata_cache_entries{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}) > 0\n  or\n    sum without(rule_group) (prometheus_rule_group_rules{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}) > 0\n  )\n)","for":"10m","labels":{"severity":"warning"}},{"alert":"PrometheusDuplicateTimestamps","annotations":{"description":"Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{ printf \"%.4g\" $value  }} samples/s with different values but duplicated timestamp.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusduplicatetimestamps","summary":"Prometheus is dropping samples with duplicate timestamps."},"expr":"rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) > 0","for":"10m","labels":{"severity":"warning"}},{"alert":"PrometheusOutOfOrderTimestamps","annotations":{"description":"Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{ printf \"%.4g\" $value  }} samples/s with timestamps arriving out of order.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoutofordertimestamps","summary":"Prometheus drops samples with out-of-order timestamps."},"expr":"rate(prometheus_target_scrapes_sample_out_of_order_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) > 0","for":"10m","labels":{"severity":"warning"}},{"alert":"PrometheusRemoteStorageFailures","annotations":{"description":"Prometheus {{$labels.namespace}}/{{$labels.pod}} failed to send {{ printf \"%.1f\" $value }}% of the samples to {{ $labels.remote_name}}:{{ $labels.url }}","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusremotestoragefailures","summary":"Prometheus fails to send samples to remote storage."},"expr":"(\n  (rate(prometheus_remote_storage_failed_samples_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]))\n/\n  (\n    (rate(prometheus_remote_storage_failed_samples_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]))\n  +\n    (rate(prometheus_remote_storage_succeeded_samples_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) or rate(prometheus_remote_storage_samples_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]))\n  )\n)\n* 100\n> 1","for":"15m","labels":{"severity":"critical"}},{"alert":"PrometheusRemoteWriteBehind","annotations":{"description":"Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write is {{ printf \"%.1f\" $value }}s behind for {{ $labels.remote_name}}:{{ $labels.url }}.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusremotewritebehind","summary":"Prometheus remote write is behind."},"expr":"# Without max_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n(\n  max_over_time(prometheus_remote_storage_highest_timestamp_in_seconds{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n- ignoring(remote_name, url) group_right\n  max_over_time(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n)\n> 120","for":"15m","labels":{"severity":"critical"}},{"alert":"PrometheusRemoteWriteDesiredShards","annotations":{"description":"Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write desired shards calculation wants to run {{ $value }} shards for queue {{ $labels.remote_name}}:{{ $labels.url }}, which is more than the max of {{ printf `prometheus_remote_storage_shards_max{instance=\"%s\",job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}` $labels.instance | query | first | value }}.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusremotewritedesiredshards","summary":"Prometheus remote write desired shards calculation wants to run more than configured max shards."},"expr":"# Without max_over_time, failed scrapes could create false negatives, see\n# https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.\n(\n  max_over_time(prometheus_remote_storage_shards_desired{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n>\n  max_over_time(prometheus_remote_storage_shards_max{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m])\n)","for":"15m","labels":{"severity":"warning"}},{"alert":"PrometheusRuleFailures","annotations":{"description":"Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to evaluate {{ printf \"%.0f\" $value }} rules in the last 5m.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusrulefailures","summary":"Prometheus is failing rule evaluations."},"expr":"increase(prometheus_rule_evaluation_failures_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) > 0","for":"15m","labels":{"severity":"critical"}},{"alert":"PrometheusMissingRuleEvaluations","annotations":{"description":"Prometheus {{$labels.namespace}}/{{$labels.pod}} has missed {{ printf \"%.0f\" $value }} rule group evaluations in the last 5m.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusmissingruleevaluations","summary":"Prometheus is missing rule evaluations due to slow rule group evaluation."},"expr":"increase(prometheus_rule_group_iterations_missed_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) > 0","for":"15m","labels":{"severity":"warning"}},{"alert":"PrometheusTargetLimitHit","annotations":{"description":"Prometheus {{$labels.namespace}}/{{$labels.pod}} has dropped {{ printf \"%.0f\" $value }} targets because the number of targets exceeded the configured target_limit.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheustargetlimithit","summary":"Prometheus has dropped targets because some scrape configs have exceeded the targets limit."},"expr":"increase(prometheus_target_scrape_pool_exceeded_target_limit_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) > 0","for":"15m","labels":{"severity":"warning"}},{"alert":"PrometheusLabelLimitHit","annotations":{"description":"Prometheus {{$labels.namespace}}/{{$labels.pod}} has dropped {{ printf \"%.0f\" $value }} targets because some samples exceeded the configured label_limit, label_name_length_limit or label_value_length_limit.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheuslabellimithit","summary":"Prometheus has dropped targets because some scrape configs have exceeded the labels limit."},"expr":"increase(prometheus_target_scrape_pool_exceeded_label_limits_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[5m]) > 0","for":"15m","labels":{"severity":"warning"}},{"alert":"PrometheusTargetSyncFailure","annotations":{"description":"{{ printf \"%.0f\" $value }} targets in Prometheus {{$labels.namespace}}/{{$labels.pod}} have failed to sync because invalid configuration was supplied.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheustargetsyncfailure","summary":"Prometheus has failed to sync targets."},"expr":"increase(prometheus_target_sync_failed_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\"}[30m]) > 0","for":"5m","labels":{"severity":"critical"}},{"alert":"PrometheusErrorSendingAlertsToAnyAlertmanager","annotations":{"description":"{{ printf \"%.1f\" $value }}% minimum errors while sending alerts from Prometheus {{$labels.namespace}}/{{$labels.pod}} to any Alertmanager.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheuserrorsendingalertstoanyalertmanager","summary":"Prometheus encounters more than 3% errors sending alerts to any Alertmanager."},"expr":"min without (alertmanager) (\n  rate(prometheus_notifications_errors_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\",alertmanager!~``}[5m])\n/\n  rate(prometheus_notifications_sent_total{job=\"prometheus-kube-prometheus-prometheus\",namespace=\"default\",alertmanager!~``}[5m])\n)\n* 100\n> 3","for":"15m","labels":{"severity":"critical"}}]}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2021-10-25T16:45:17Z","generation":1,"labels":{"app":"kube-prometheus-stack","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"19.2.2","chart":"kube-prometheus-stack-19.2.2","heritage":"Helm","release":"prometheus"},"managedFields":[{"apiVersion":"monitoring.coreos.com/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/part-of":{},"f:app.kubernetes.io/version":{},"f:chart":{},"f:heritage":{},"f:release":{}}},"f:spec":{".":{},"f:groups":{}}},"manager":"helm","operation":"Update","time":"2021-10-25T16:45:14Z"}],"name":"prometheus-kube-prometheus-prometheus-operator","namespace":"default","resourceVersion":"640510","uid":"aacb380d-4ec2-4f22-ae1c-d1c76171b24b"},"spec":{"groups":[{"name":"prometheus-operator","rules":[{"alert":"PrometheusOperatorListErrors","annotations":{"description":"Errors while performing List operations in controller {{$labels.controller}} in {{$labels.namespace}} namespace.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatorlisterrors","summary":"Errors while performing list operations in controller."},"expr":"(sum by (controller,namespace) (rate(prometheus_operator_list_operations_failed_total{job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[10m])) / sum by (controller,namespace) (rate(prometheus_operator_list_operations_total{job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[10m]))) > 0.4","for":"15m","labels":{"severity":"warning"}},{"alert":"PrometheusOperatorWatchErrors","annotations":{"description":"Errors while performing watch operations in controller {{$labels.controller}} in {{$labels.namespace}} namespace.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatorwatcherrors","summary":"Errors while performing watch operations in controller."},"expr":"(sum by (controller,namespace) (rate(prometheus_operator_watch_operations_failed_total{job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[10m])) / sum by (controller,namespace) (rate(prometheus_operator_watch_operations_total{job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[10m]))) > 0.4","for":"15m","labels":{"severity":"warning"}},{"alert":"PrometheusOperatorSyncFailed","annotations":{"description":"Controller {{ $labels.controller }} in {{ $labels.namespace }} namespace fails to reconcile {{ $value }} objects.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatorsyncfailed","summary":"Last controller reconciliation failed"},"expr":"min_over_time(prometheus_operator_syncs{status=\"failed\",job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[5m]) > 0","for":"10m","labels":{"severity":"warning"}},{"alert":"PrometheusOperatorReconcileErrors","annotations":{"description":"{{ $value | humanizePercentage }} of reconciling operations failed for {{ $labels.controller }} controller in {{ $labels.namespace }} namespace.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatorreconcileerrors","summary":"Errors while reconciling controller."},"expr":"(sum by (controller,namespace) (rate(prometheus_operator_reconcile_errors_total{job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[5m]))) / (sum by (controller,namespace) (rate(prometheus_operator_reconcile_operations_total{job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[5m]))) > 0.1","for":"10m","labels":{"severity":"warning"}},{"alert":"PrometheusOperatorNodeLookupErrors","annotations":{"description":"Errors while reconciling Prometheus in {{ $labels.namespace }} Namespace.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatornodelookuperrors","summary":"Errors while reconciling Prometheus."},"expr":"rate(prometheus_operator_node_address_lookup_errors_total{job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[5m]) > 0.1","for":"10m","labels":{"severity":"warning"}},{"alert":"PrometheusOperatorNotReady","annotations":{"description":"Prometheus operator in {{ $labels.namespace }} namespace isn't ready to reconcile {{ $labels.controller }} resources.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatornotready","summary":"Prometheus operator not ready"},"expr":"min by(namespace, controller) (max_over_time(prometheus_operator_ready{job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[5m]) == 0)","for":"5m","labels":{"severity":"warning"}},{"alert":"PrometheusOperatorRejectedResources","annotations":{"description":"Prometheus operator in {{ $labels.namespace }} namespace rejected {{ printf \"%0.0f\" $value }} {{ $labels.controller }}/{{ $labels.resource }} resources.","runbook_url":"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatorrejectedresources","summary":"Resources rejected by Prometheus operator"},"expr":"min_over_time(prometheus_operator_managed_resources{state=\"rejected\",job=\"prometheus-kube-prometheus-operator\",namespace=\"default\"}[5m]) > 0","for":"5m","labels":{"severity":"warning"}}]}]}}]}
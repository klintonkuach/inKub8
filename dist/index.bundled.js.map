{"version":3,"file":"index.bundled.js","mappings":"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","sources":["webpack://kubevisualizer/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://kubevisualizer/./node_modules/electron-is-dev/index.js","webpack://kubevisualizer/external node-commonjs \"electron\"","webpack://kubevisualizer/external node-commonjs \"path\"","webpack://kubevisualizer/webpack/bootstrap","webpack://kubevisualizer/webpack/runtime/compat get default export","webpack://kubevisualizer/webpack/runtime/define property getters","webpack://kubevisualizer/webpack/runtime/hasOwnProperty shorthand","webpack://kubevisualizer/webpack/runtime/make namespace object","webpack://kubevisualizer/./src/main.js"],"sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","'use strict';\nconst electron = require('electron');\n\nif (typeof electron === 'string') {\n\tthrow new TypeError('Not running in an Electron environment!');\n}\n\nconst isEnvSet = 'ELECTRON_IS_DEV' in process.env;\nconst getFromEnv = Number.parseInt(process.env.ELECTRON_IS_DEV, 10) === 1;\n\nmodule.exports = isEnvSet ? getFromEnv : !electron.app.isPackaged;\n","module.exports = require(\"electron\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const { app, BrowserWindow, session, ipcMain } = require('electron');\r\nconst path = require('path');\r\n//const compileData = require('./clusterMapping/retrieveData.js')\r\n\r\nconst isDev = require('electron-is-dev');\r\n\r\nconst createWindow = () => {\r\n  session.defaultSession.webRequest.onHeadersReceived((details, callback) => {\r\n    \r\n    if(details.responseHeaders['X-Frame-Options']){\r\n      delete details.responseHeaders['X-Frame-Options'];\r\n    };\r\n\r\n    callback({\r\n      responseHeaders: {\r\n        ...details.responseHeaders,\r\n        'Content-Security-Policy': [\"default-src 'self' 'unsafe-eval' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; frame-src *; img-src data: http: https:;\"]\r\n      }\r\n    })\r\n  })\r\n  // Create the browser window.\r\n  const mainWindow = new BrowserWindow({\r\n    width: 800,\r\n    minHeight: 1000, \r\n    maxWidth: 2000,\r\n    minHeight: 2000,\r\n    webPreferences: {\r\n      //enableRemoteModule: true,\r\n      //nodeIntegration: true\r\n      contextIsolation: true,\r\n      preload: path.resolve(dirname, 'preload.js')\r\n    },\r\n    // center: true,\r\n    show: false\r\n  });\r\n\r\n  // and load the index.html of the app.\r\n  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);\r\n\r\n\r\n  // Open the DevTools.\r\n  mainWindow.maximize();\r\n  mainWindow.show();\r\n  mainWindow.webContents.openDevTools();\r\n \r\n  \r\n};\r\n\r\n\r\n\r\n// This method will be called when Electron has finished\r\n// initialization and is ready to create browser windows.\r\n// Some APIs can only be used after this event occurs.\r\napp.on('ready', createWindow);\r\n\r\n// Quit when all windows are closed, except on macOS. There, it's common\r\n// for applications and their menu bar to stay active until the user quits\r\n// explicitly with Cmd + Q.\r\napp.on('window-all-closed', () => {\r\n  if (process.platform !== 'darwin') {\r\n    app.quit();\r\n  }\r\n});\r\n\r\napp.on('activate', () => {\r\n  // On OS X it's common to re-create a window in the app when the\r\n  // dock icon is clicked and there are no other windows open.\r\n  if (BrowserWindow.getAllWindows().length === 0) {\r\n    createWindow();\r\n  }\r\n});\r\n\r\nipcMain.on('compileData', (event, arg) => {\r\n  console.log('here')\r\n  //return compileData();\r\n});\r\n\r\n// app.on('certificate-error', function(event, webContents, url, error, \r\n//   certificate, callback) {\r\n//       event.preventDefault();\r\n//       callback(true);\r\n// });\r\n\r\n// In this file you can include the rest of your app's specific main process\r\n// code. You can also put them in separate files and import them here.\r\n"],"names":["require","app","BrowserWindow","session","ipcMain","path","isDev","createWindow","defaultSession","webRequest","onHeadersReceived","details","callback","responseHeaders","mainWindow","width","minHeight","maxWidth","contextIsolation","preload","resolve","dirname","loadURL","MAIN_WINDOW_WEBPACK_ENTRY","maximize","show","webContents","openDevTools","on","process","platform","quit","getAllWindows","length","event","arg","console","log"],"sourceRoot":""}